{"version":3,"sources":["webpack:///./node_modules/chart.js/src/plugins/plugin.legend.js","webpack:///./node_modules/chart.js/src/helpers/helpers.options.js","webpack:///./node_modules/chart.js/src/core/core.animation.js","webpack:///./node_modules/chart.js/src/core/core.defaults.js","webpack:///./src/components/stats/DeviceDataList.vue?2beb","webpack:///./node_modules/chart.js/src/controllers/controller.line.js","webpack:///./node_modules/chart.js/src/platforms/platform.basic.js","webpack:///./node_modules/chart.js/src/core/core.datasetController.js","webpack:///./node_modules/chart.js/src/core/core.element.js","webpack:///./node_modules/chartjs-color/node_modules/color-convert/conversions.js","webpack:///./node_modules/chart.js/src/charts/Chart.Bar.js","webpack:///./node_modules/chart.js/src/elements/element.point.js","webpack:///./node_modules/chartjs-color/node_modules/color-convert/index.js","webpack:///./node_modules/chart.js/src/charts/Chart.Bubble.js","webpack:///./node_modules/chart.js/src/scales/scale.time.js","webpack:///./node_modules/chart.js/src/helpers/index.js","webpack:///./node_modules/chart.js/src/helpers/helpers.canvas.js","webpack:///./node_modules/chart.js/src/charts/Chart.Scatter.js","webpack:///./node_modules/chart.js/src/charts/Chart.Doughnut.js","webpack:///./node_modules/chart.js/src/helpers/helpers.core.js","webpack:///./node_modules/color-name/index.js","webpack:///./src/components/common/BarChart.vue?f078","webpack:///./node_modules/chart.js/src/elements/element.line.js","webpack:///./node_modules/chart.js/src/core/core.plugins.js","webpack:///./src/components/common/LineChart.vue?4beb","webpack:///./node_modules/chart.js/src/chart.js","webpack:///./node_modules/chart.js/src/controllers/controller.doughnut.js","webpack:///./node_modules/chart.js/src/elements/element.arc.js","webpack:///./src/components/common/Map.vue?ef88","webpack:///src/components/common/Map.vue","webpack:///./src/components/common/Map.vue?6713","webpack:///./src/components/common/Map.vue","webpack:///./node_modules/chart.js/src/scales/scale.linear.js","webpack:///./node_modules/chart.js/src/scales/scale.logarithmic.js","webpack:///./node_modules/chart.js/src/controllers/controller.bar.js","webpack:///./node_modules/chart.js/src/controllers/controller.radar.js","webpack:///./src/views/Dashboard.vue?c8ee","webpack:///./node_modules/chart.js/src/controllers/controller.bubble.js","webpack:///./node_modules/chart.js/src/core/core.scale.js","webpack:///./src/views/Dashboard.vue?1e2e","webpack:///./node_modules/vue-chartjs/es/mixins/index.js","webpack:///./node_modules/vue-chartjs/es/BaseCharts.js","webpack:///./src/components/common/BarChart.vue","webpack:///src/components/common/BarChart.vue","webpack:///./src/components/common/BarChart.vue?4a0e","webpack:///./src/components/common/LineChart.vue","webpack:///src/components/common/LineChart.vue","webpack:///./src/components/common/LineChart.vue?7296","webpack:///src/views/Dashboard.vue","webpack:///./src/views/Dashboard.vue?3f19","webpack:///./src/views/Dashboard.vue","webpack:///./src/components/stats/DeviceDataList.vue?0150","webpack:///src/components/stats/DeviceDataList.vue","webpack:///./src/components/stats/DeviceDataList.vue?68c1","webpack:///./src/components/stats/DeviceDataList.vue","webpack:///./node_modules/chart.js/src/core/core.layouts.js","webpack:///./node_modules/chart.js/src/core/core.ticks.js","webpack:///./node_modules/chart.js/src/platforms/platform.js","webpack:///./node_modules/chart.js/src/charts/Chart.Radar.js","webpack:///./node_modules/chart.js/src/plugins/index.js","webpack:///./node_modules/chartjs-color-string/color-string.js","webpack:///./node_modules/chart.js/src/plugins/plugin.title.js","webpack:///./node_modules/chart.js/src/core/core.interaction.js","webpack:///./node_modules/chart.js/src/core/core.helpers.js","webpack:///./node_modules/chart.js/src/scales/scale.linearbase.js","webpack:///./node_modules/chart.js/src/charts/Chart.PolarArea.js","webpack:///./node_modules/chart.js/src/platforms/platform.dom.js","webpack:///./node_modules/chart.js/src/core/core.scaleService.js","webpack:///./node_modules/chart.js/src/helpers/helpers.easing.js","webpack:///./node_modules/chart.js/src/plugins/plugin.filler.js","webpack:///./node_modules/chart.js/src/elements/index.js","webpack:///./node_modules/chart.js/src/core/core.tooltip.js","webpack:///./node_modules/chart.js/src/core/core.js","webpack:///./node_modules/chart.js/src/elements/element.rectangle.js","webpack:///./node_modules/chart.js/src/controllers/controller.scatter.js","webpack:///./src/components/common/Map.vue?c5c4","webpack:///./node_modules/chart.js/src/controllers/controller.polarArea.js","webpack:///./node_modules/chart.js/src/core/core.controller.js","webpack:///./node_modules/chartjs-color/index.js","webpack:///./node_modules/chart.js/src/charts/Chart.Line.js","webpack:///./node_modules/chart.js/src/scales/scale.category.js","webpack:///./node_modules/chart.js/src/scales/scale.radialLinear.js"],"names":["defaults","__webpack_require__","Element","helpers","layouts","noop","getBoxWidth","labelOpts","fontSize","usePointStyle","Math","SQRT2","boxWidth","_set","legend","display","position","fullWidth","reverse","weight","onClick","e","legendItem","index","datasetIndex","ci","this","chart","meta","getDatasetMeta","hidden","data","datasets","update","onHover","labels","padding","generateLabels","isArray","map","dataset","i","text","label","fillStyle","backgroundColor","isDatasetVisible","lineCap","borderCapStyle","lineDash","borderDash","lineDashOffset","borderDashOffset","lineJoin","borderJoinStyle","lineWidth","borderWidth","strokeStyle","borderColor","pointStyle","legendCallback","push","id","length","join","Legend","extend","initialize","config","legendHitBoxes","doughnutMode","beforeUpdate","maxWidth","maxHeight","margins","me","beforeSetDimensions","setDimensions","afterSetDimensions","beforeBuildLabels","buildLabels","afterBuildLabels","beforeFit","fit","afterFit","afterUpdate","minSize","isHorizontal","width","left","right","height","top","bottom","paddingLeft","paddingTop","paddingRight","paddingBottom","options","legendItems","callback","filter","item","opts","ctx","globalDefault","global","valueOrDefault","defaultFontSize","fontStyle","defaultFontStyle","fontFamily","defaultFontFamily","labelFont","fontString","hitboxes","font","lineWidths","totalHeight","textAlign","textBaseline","each","measureText","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","max","draw","lineDefault","elements","line","legendWidth","cursor","fontColor","defaultFontColor","drawLegendBox","x","y","isNaN","save","defaultColor","isLineWidthZero","setLineDash","radius","offSet","centerX","centerY","canvas","drawPoint","strokeRect","fillRect","restore","fillText","textWidth","halfFontSize","xLeft","yMiddle","beginPath","moveTo","lineTo","stroke","handleEvent","type","changed","lh","hitBox","call","native","createNewLegendAndAttach","legendOpts","configure","addBox","module","exports","_element","beforeInit","mergeIf","removeBox","afterEvent","toLineHeight","value","size","matches","match","toPadding","t","r","b","l","isObject","resolve","inputs","context","ilen","undefined","animation","duration","easing","onProgress","onComplete","Chart","Animation","currentStep","numSteps","render","onAnimationProgress","onAnimationComplete","animationService","frameDuration","animations","dropFrames","request","addAnimation","lazy","animating","requestAnimationFrame","cancelAnimation","findIndex","splice","requestAnimFrame","window","startDigest","startTime","Date","now","framesToDrop","floor","advance","endTime","count","min","Object","defineProperty","prototype","get","set","scope","values","merge","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_DeviceDataList_vue_vue_type_style_index_0_id_b4548df0_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_DeviceDataList_vue_vue_type_style_index_0_id_b4548df0_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0___default","n","showLines","spanGaps","hover","mode","scales","xAxes","yAxes","lineEnabled","showLine","controllers","DatasetController","datasetElementType","Line","dataElementType","Point","reset","custom","getMeta","points","lineElementOptions","scale","getScaleForId","yAxisID","getDataset","tension","lineTension","_scale","_datasetIndex","_children","_model","fill","steppedLine","stepped","cubicInterpolationMode","pivot","updateElement","updateBezierControlPoints","getPointBackgroundColor","point","pointBackgroundColor","valueAtIndexOrDefault","getPointBorderColor","pointBorderColor","getPointBorderWidth","pointBorderWidth","yScale","xScale","xAxisID","pointOptions","pointRadius","hitRadius","pointHitRadius","getPixelForValue","NaN","getBasePixel","calculatePointY","_xScale","_yScale","_index","skip","ds","dsMeta","sumPos","sumNeg","stacked","stackedRightValue","Number","getRightValue","rightValue","model","controlPoints","area","chartArea","capControlPoint","pt","splineCurveMonotone","splineCurve","previousItem","nextItem","controlPointPreviousX","previous","controlPointPreviousY","controlPointNextX","next","controlPointNextY","capBezierPoints","clipArea","unclipArea","setHoverStyle","hoverRadius","pointHoverRadius","hoverBackgroundColor","pointHoverBackgroundColor","getHoverColor","hoverBorderColor","pointHoverBorderColor","hoverBorderWidth","pointHoverBorderWidth","removeHoverStyle","acquireContext","getContext","arrayEvents","listenArrayEvents","array","listener","_chartjs","listeners","configurable","enumerable","forEach","key","method","charAt","toUpperCase","slice","base","args","Array","arguments","res","apply","object","unlistenArrayEvents","stub","indexOf","linkScales","addElements","updateIndex","scaleID","destroy","_data","createMetaDataset","_chart","createMetaData","metaData","addElementAndReset","element","buildOrUpdateElements","resyncElements","transition","easingValue","elementOpts","numMeta","numData","insertElements","start","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","inherits","color","interpolate","view","ease","actual","origin","target","c0","c1","keys","hasOwnProperty","valid","mix","rgbString","isFinite","configuration","_view","clone","_start","tooltipPosition","hasValue","isNumber","rgb2hsl","rgb","h","s","g","delta","rgb2hsv","v","rgb2hwb","w","rgb2cmyk","c","m","k","rgb2keyword","reverseKeywords","JSON","stringify","rgb2xyz","pow","z","rgb2lab","a","xyz","rgb2lch","lab2lch","hsl2rgb","hsl","t1","t2","t3","val","hsl2hsv","sv","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv","hi","f","p","q","hsv2hsl","sl","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb","wh","bl","ratio","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab","y2","hr","atan2","PI","sqrt","lab2rgb","lch2lab","lch","cos","sin","lch2xyz","lch2rgb","keyword2rgb","keyword","cssKeywords","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","Bar","xRange","mouseX","vm","abs","yRange","mouseY","inRange","inLabelRange","inXRange","inYRange","getCenterPoint","getArea","errMargin","round","alpha","conversions","convert","Converter","func","arg","pair","exec","from","to","convs","routeSpace","space","getValues","setValues","vals","fspace","Bubble","moment","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","items","hash","out","buildLookupTable","timestamps","distribution","time","pos","prev","curr","table","lookup","mid","i0","i1","lo","skey","sval","tkey","range","span","offset","momentify","parser","format","isValid","parse","input","isNullOrUndef","startOf","valueOf","determineStepSize","unit","capacity","factor","interval","milliseconds","ceil","determineUnitForAutoTicks","minUnit","determineUnitForFormatting","ticks","diff","as","determineMajorUnit","generate","timeOpts","minor","major","stepSize","unitStepSize","weekday","isoWeekday","majorTicksEnabled","enabled","first","last","add","computeOffsets","upper","lower","ticksFromTimestamps","majorUnit","determineLabelFormat","momentDate","hasTime","defaultConfig","bounds","displayFormat","displayFormats","autoSkip","source","TimeScale","Scale","Error","mergeTicksOptions","console","warn","rawValue","determineDataLimits","j","jlen","timestamp","sort","endOf","_horizontal","_table","_timestamps","buildTicks","getLabelCapacity","_unit","_majorUnit","_offsets","_labelFormat","getLabelForIndex","tooltipFormat","tickFormatFunction","tick","formatOverride","formats","minorFormat","majorFormat","majorTime","majorTickOpts","tickOpts","formatter","userCallback","convertTicksToLabels","getPixelForOffset","getPixelForTick","getTicks","getValueForPixel","pixel","getLabelWidth","ticksOpts","tickLabelWidth","angle","toRadians","maxRotation","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","innerWidth","scaleService","registerScaleType","clear","clearRect","roundedRect","rx","ry","quadraticCurveTo","rect","style","edgeLength","xOffset","yOffset","toString","drawImage","arc","closePath","leftX","topY","sideSize","clip","flip","bezierCurveTo","drawRoundedRectangle","Scatter","Doughnut","uid","defaultValue","fn","thisArg","loopable","len","arrayEquals","a0","a1","v0","v1","klen","_merger","tval","_mergerIf","sources","merger","setFn","extensions","ChartElement","constructor","Surrogate","__super__","callCallback","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_BarChart_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_BarChart_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","globalDefaults","current","currentVM","globalOptionLineElements","lastDrawnIndex","_loop","plugins","_plugins","_cacheId","register","concat","plugin","unregister","idx","getAll","notify","hook","descriptor","params","descriptors","cache","$plugins","_invalidate","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_LineChart_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_LineChart_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","Interaction","platform","Ticks","Title","title","pluginService","PluginBase","canvasHelpers","layoutService","animateRotate","animateScale","arcOpts","bw","cutoutPercentage","rotation","circumference","tooltips","callbacks","tooltipItem","dataLabel","doughnut","pie","Arc","getRingIndex","ringIndex","availableWidth","availableHeight","startAngle","endAngle","end","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","outerRadius","innerRadius","radiusLength","getVisibleDatasetCount","offsetX","offsetY","total","calculateTotal","animationOpts","calculateCircumference","arcs","hoverWidth","chartX","chartY","pointRelativePosition","getAngleFromPoint","distance","betweenAngles","withinRadius","halfAngle","halfRadius","centreAngle","rangeFromCentre","sA","eA","_vm","_h","$createElement","_c","_self","staticClass","attrs","zoom","center","zoomControl","touchZoom","scrollWheelZoom","doubleClickZoom","boxZoom","on","update:center","centerUpdate","update:zoom","zoomUpdate","url","attribution","_l","marker","icon","LIcon","lat-lng","content","tooltip","staticRenderFns","Mapvue_type_script_lang_js_","name","components","LMap","vue2_leaflet_min","LTileLayer","LMarker","LTooltip","props","currentZoom","lat","lng","currentCenter","leaflet_src_default","iconUrl","iconRetinaUrl","iconSize","iconAnchor","popupAnchor","methods","common_Mapvue_type_script_lang_js_","component","componentNormalizer","__file","__webpack_exports__","formatters","linear","LinearScale","LinearScaleBase","DEFAULT_MIN","DEFAULT_MAX","IDMatches","hasStacks","stack","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","handleTickRangeOptions","getTickLimit","maxTicks","maxTicksLimit","handleDirectionalChanges","innerDimension","ticksAsNumbers","generateTicks","generationOptions","dataRange","exp","significand","tickVal","log10","endExp","endSignificand","minNotZero","precision","lastTick","logarithmic","LogarithmicScale","tickValues","_getFirstTickValue","sign","firstTickValue","computeMinSampleSize","pixels","computeFitCategoryTraits","ruler","thickness","barThickness","stackCount","categoryPercentage","barPercentage","chunk","computeFlexCategoryTraits","percent","gridLines","offsetGridLines","axis","rectangle","borderSkipped","yLabel","datasetLabel","xLabel","bar","Rectangle","rects","_ruler","getRuler","rectangleOptions","updateElementGeometry","vscale","getValueScale","horizontal","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","getValueScaleId","getIndexScaleId","getIndexScale","_getStacks","stacks","getStackCount","getStackIndex","imeta","ivalue","controller","stackIndex","maxBarThickness","Infinity","rectangleElementOptions","horizontalBar","radar","pointElementOptions","pointPosition","getPointPositionForValue","xCenter","yCenter","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Dashboard_vue_vue_type_style_index_0_id_02fe3418_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Dashboard_vue_vue_type_style_index_0_id_02fe3418_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0___default","dataPoint","bubble","_resolveElementOptions","dsIndex","getPixelForDecimal","_options","dataIndex","labelsFromTicks","getLineValue","lineValue","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","lineHeight","beginAtZero","minRotation","mirror","autoSkipPadding","labelOffset","computeTextSize","longestText","parseFontOptions","family","parseLineHeight","getPadding","_ticks","longestTextCache","beforeDataLimits","afterDataLimits","beforeBuildTicks","afterBuildTicks","beforeTickToLabelConversion","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","tickFont","labelRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","scaleLabelOpts","gridLineOpts","isFullWidth","scaleLabelLineHeight","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","longestLabelWidth","labelHeight","firstLabelWidth","lastLabelWidth","handleMargins","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","skipRatio","shouldSkip","optionTicks","tickCount","labelRotationRadians","longestRotatedLabel","result","optionMajorTicks","isRotated","tickFontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","scaleLabelFont","itemsToDraw","axisWidth","xTickStart","xTickEnd","yTickStart","yTickEnd","lineColor","tx1","ty1","tx2","ty2","x1","y1","x2","labelX","labelY","zeroLineIndex","labelYOffset","xLineValue","aliasPixel","labelXOffset","isLeft","yLineValue","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","rotate","lineCount","scaleLabelX","scaleLabelY","halfLineHeight","align","electricityReceived","valuePrecision","textAbove","description","electricityDelivered","gasReceived","markers","devices","_v","expanded","$$v","activeTab","expression","chart-data","lineChartDataKwh7Days","_e","lineChartDataKwh31Days","lineChartDataGas7Days","lineChartDataGas31Days","deviceId","dataHandler","newData","oldData","$data","newDatasetLabels","oldDatasetLabels","oldLabels","newLabels","oldDatasetKeys","newDatasetKeys","deletionKeys","attribute","deletionKey","$emit","xLabels","yLabels","renderChart","chartData","reactiveData","watch","reactiveProp","required","mixins","generateChart","chartId","chartType","createElement","styles","class","cssClasses","ref","default","String","addPlugin","generateLegend","chart_default","$refs","beforeDestroy","BarChart_render","BarChart_staticRenderFns","BarChartvue_type_script_lang_js_reactiveProp","BarChartvue_type_script_lang_js_","extends","mounted","common_BarChartvue_type_script_lang_js_","LineChart_render","LineChart_staticRenderFns","BarChart","LineChartvue_type_script_lang_js_reactiveProp","LineChartvue_type_script_lang_js_","common_LineChartvue_type_script_lang_js_","LineChart_component","LineChart","Dashboardvue_type_script_lang_js_","loadedKwh7Days","loadedKwh31Days","dashboardData","isCookieSet","barChartData","tab","Meter","Logo","Button","DeviceDataList","Map","Footer","FooterClosing","asyncToGenerator","regeneratorRuntime","mark","_callee","response","wrap","_context","axios","sent","log","t0","error","stop","_stop","_callee2","_context2","getDeviceData","_getDeviceData","_callee3","_context3","handleDevicesData","setTimeout","getDashboardStatistics","_getDashboardStatistics","_callee4","_response","_response2","_response3","_context4","loadedGas7Days","loadedGas31Days","xAxis","yAxis","metadata","location","coordinates","beforeMount","self","$cookies","document","views_Dashboardvue_type_script_lang_js_","Dashboard_component","tx","_s","lastUpdateFormatted","toFixed","tariff1","tariff2","getApiUrl","apiUrl","onlyOneTransactionPerDevice","transactions","ret","idsDone","asset","DeviceDataListvue_type_script_lang_js_","getTransactions","_getTransactions","moment_default","lastUpdate","stats_DeviceDataListvue_type_script_lang_js_","filterByPosition","where","sortByWeight","_tmpIndex_","boxes","layoutItem","prop","layoutOptions","layout","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","chartWidth","chartHeight","chartAreaWidth","chartAreaHeight","verticalBoxWidth","horizontalBoxHeight","maxChartAreaWidth","maxChartAreaHeight","minBoxSizes","getMinimumBoxSize","maxHorizontalLeftPadding","maxHorizontalRightPadding","maxVerticalTopPadding","maxVerticalBottomPadding","horizontalBox","boxPadding","verticalBox","totalLeftBoxesWidth","totalRightBoxesWidth","totalTopBoxesHeight","totalBottomBoxesHeight","fitBox","box","finalFitVerticalBox","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBoxSize","findNextWhere","minBox","scaleMargin","tickValue","logDelta","tickString","numDecimal","remain","toExponential","basic","dom","implementation","_enabled","releaseContext","addEventListener","removeEventListener","Radar","filler","colorNames","getRgba","string","abbr","hex","rgba","per","parseInt","parseFloat","getHsla","getHwb","getRgb","getHsl","hsla","getAlpha","hexString","hexDouble","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","num","str","textSize","titleX","titleY","titleFont","createNewTitleBlockAndAttach","titleOpts","titleBlock","getRelativePosition","parseVisibleItems","handler","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","modes","single","x-axis","nearest","sizeA","sizeB","intersectsItem","parseMaxStyle","styleValue","node","parentProperty","valueInPixels","parentNode","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","configMerge","scaleMerge","getScaleDefaults","slen","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","almostEquals","epsilon","almostWhole","rounded","reduce","NEGATIVE_INFINITY","exponent","LOG10E","powerOf10","isPowerOf10","degrees","toDegrees","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","distanceBetweenPoints","pixelWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","loop","niceNum","niceFraction","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","evt","originalEvent","currentTarget","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getStyle","currentDevicePixelRatio","getConstraintWidth","getConstraintHeight","getMaximumWidth","container","clientWidth","cw","getMaximumHeight","clientHeight","ch","el","property","currentStyle","getPropertyValue","retinaScale","forceRatio","pixelRatio","devicePixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","colorValue","CanvasPattern","saturate","darken","spacing","niceRange","niceMin","niceMax","numSpaces","minSign","maxSign","setMin","suggestedMin","setMax","suggestedMax","numericGeneratorOptions","fixedStepSize","PolarArea","EXPANDO_KEY","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","initCanvas","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","supportsEventListenerOptions","supports","eventListenerOptions","passive","createEvent","nativeEvent","fromNativeEvent","event","throttled","ticking","createResizer","resizer","cls","maxSize","cssText","className","innerHTML","expand","childNodes","shrink","_reset","scrollLeft","scrollTop","onScroll","bind","watchForRender","expando","proxy","renderProxy","animationName","reflow","offsetParent","classList","unwatchForRender","remove","addResizeListener","insertBefore","firstChild","removeResizeListener","removeChild","injectCSS","css","_style","setAttribute","getElementsByTagName","appendChild","createTextNode","keyframes","getElementById","removeAttribute","proxies","addEvent","removeEvent","constructors","scaleConstructor","scaleDefaults","getScaleConstructor","updateScaleDefaults","additions","addScalesToLayout","effects","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","easingEffects","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","getBasePosition","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","doFill","mapper","p0","p1","d0","d1","afterDatasetsUpdate","$filler","beforeDatasetDraw","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","cornerRadius","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","mergeOpacity","colorString","opacity","pushOrConcat","toPush","createTooltipItem","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","legendColorBackground","getTooltipSize","body","combinedBodyLength","bodyItem","before","lines","after","titleLineCount","footerLineCount","widthPadding","maxLineWidth","determineAlignment","lf","rf","olf","orf","yf","midX","midY","getBackgroundPoint","alignment","paddingAndSize","radiusAndPadding","Tooltip","_lastActive","getTitle","getBeforeBody","getBody","bodyItems","getAfterBody","getFooter","existingModel","active","_active","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","positioners","_eventPosition","itemSort","dataPoints","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","drawBody","xLinePadding","fillLineOfText","drawColorBoxes","textColor","drawFooter","drawBackground","hasTooltipContent","getElementsAtEventForMode","average","eventPosition","nearestElement","d","tp","responsive","responsiveAnimationDuration","maintainAspectRatio","events","animationDuration","construct","isVertical","getBarBounds","halfWidth","halfHeight","signX","signY","barSize","halfStroke","borderLeft","borderRight","borderTop","borderBottom","corners","borders","startCorner","cornerAt","corner","scatter","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Map_vue_vue_type_style_index_0_id_c31ff5d0_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Map_vue_vue_type_style_index_0_id_c31ff5d0_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0___default","angleLines","circular","pointLabels","polarArea","countVisibleElements","visibleCount","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","initConfig","updateConfig","newOptions","ensureScalesHaveIDs","buildOrUpdateScales","positionIsHorizontal","types","instances","_bufferedRender","bindEvents","resize","initToolTip","silent","newWidth","newHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","obj","dtype","dposition","isDefault","scaleType","scaleClass","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","resetElements","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementAtEvent","getElementsAtEvent","getElementsAtXAxis","getDatasetAtEvent","_meta","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","Controller","Color","lightness","whiteness","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","yiq","light","negate","lighten","desaturate","whiten","blacken","greyscale","clearer","opaquer","mixinColor","color1","w1","w2","toJSON","spaces","maxes","capped","chans","sname","svalues","DatasetScale","getLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getPointLabelFontOptions","pointLabelOptions","measureLabelSize","determineLimits","fitWithPointLabels","plFont","largestPossibleRadius","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","hLimits","vLimits","setReductions","drawingArea","setCenterPoint","getTextAlignForAngle","adjustPointPositionForLabelHeight","drawPointLabels","angleLineOpts","pointLabelOpts","outerDistance","outerPosition","pointLabelPosition","pointLabelFontColor","drawRadiusLine","numberOrZero","param","LinearRadialScale","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","tickFontStyle","tickFontFamily","tickLabelFont","yCenterOffset"],"mappings":"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","file":"js/chunk-75672545.56783919.js","sourcesContent":["'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n\tlegend: {\n\t\tdisplay: true,\n\t\tposition: 'top',\n\t\tfullWidth: true,\n\t\treverse: false,\n\t\tweight: 1000,\n\n\t\t// a callback that will handle\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.datasetIndex;\n\t\t\tvar ci = this.chart;\n\t\t\tvar meta = ci.getDatasetMeta(index);\n\n\t\t\t// See controller.isDatasetVisible comment\n\t\t\tmeta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null;\n\n\t\t\t// We hid a dataset ... rerender the chart\n\t\t\tci.update();\n\t\t},\n\n\t\tonHover: null,\n\n\t\tlabels: {\n\t\t\tboxWidth: 40,\n\t\t\tpadding: 10,\n\t\t\t// Generates labels shown in the legend\n\t\t\t// Valid properties to return:\n\t\t\t// text : text to display\n\t\t\t// fillStyle : fill of coloured box\n\t\t\t// strokeStyle: stroke of coloured box\n\t\t\t// hidden : if this legend item refers to a hidden item\n\t\t\t// lineCap : cap style for line\n\t\t\t// lineDash\n\t\t\t// lineDashOffset :\n\t\t\t// lineJoin :\n\t\t\t// lineWidth :\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\treturn helpers.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttext: dataset.label,\n\t\t\t\t\t\tfillStyle: (!helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\n\t\t\t\t\t\thidden: !chart.isDatasetVisible(i),\n\t\t\t\t\t\tlineCap: dataset.borderCapStyle,\n\t\t\t\t\t\tlineDash: dataset.borderDash,\n\t\t\t\t\t\tlineDashOffset: dataset.borderDashOffset,\n\t\t\t\t\t\tlineJoin: dataset.borderJoinStyle,\n\t\t\t\t\t\tlineWidth: dataset.borderWidth,\n\t\t\t\t\t\tstrokeStyle: dataset.borderColor,\n\t\t\t\t\t\tpointStyle: dataset.pointStyle,\n\n\t\t\t\t\t\t// Below is extra data used for toggling the datasets\n\t\t\t\t\t\tdatasetIndex: i\n\t\t\t\t\t};\n\t\t\t\t}, this) : [];\n\t\t\t}\n\t\t}\n\t},\n\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\t\tfor (var i = 0; i < chart.data.datasets.length; i++) {\n\t\t\ttext.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\t\t\tif (chart.data.datasets[i].label) {\n\t\t\t\ttext.push(chart.data.datasets[i].label);\n\t\t\t}\n\t\t\ttext.push('</li>');\n\t\t}\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t}\n});\n\n/**\n * Helper function to get the box width based on the usePointStyle option\n * @param labelopts {Object} the label options on the legend\n * @param fontSize {Number} the label font size\n * @return {Number} width of the color box area\n */\nfunction getBoxWidth(labelOpts, fontSize) {\n\treturn labelOpts.usePointStyle ?\n\t\tfontSize * Math.SQRT2 :\n\t\tlabelOpts.boxWidth;\n}\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Legend = Element.extend({\n\n\tinitialize: function(config) {\n\t\thelpers.extend(this, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tthis.legendHitBoxes = [];\n\n\t\t// Are we in doughnut mode which has a different data type\n\t\tthis.doughnutMode = false;\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\t// Any function defined here is inherited by all legend types.\n\t// Any function can be extended by the legend type\n\n\tbeforeUpdate: noop,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\t},\n\tafterUpdate: noop,\n\n\t//\n\n\tbeforeSetDimensions: noop,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop,\n\n\t//\n\n\tbeforeBuildLabels: noop,\n\tbuildLabels: function() {\n\t\tvar me = this;\n\t\tvar labelOpts = me.options.labels || {};\n\t\tvar legendItems = helpers.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n\t\tif (labelOpts.filter) {\n\t\t\tlegendItems = legendItems.filter(function(item) {\n\t\t\t\treturn labelOpts.filter(item, me.chart.data);\n\t\t\t});\n\t\t}\n\n\t\tif (me.options.reverse) {\n\t\t\tlegendItems.reverse();\n\t\t}\n\n\t\tme.legendItems = legendItems;\n\t},\n\tafterBuildLabels: noop,\n\n\t//\n\n\tbeforeFit: noop,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar display = opts.display;\n\n\t\tvar ctx = me.ctx;\n\n\t\tvar globalDefault = defaults.global;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n\t\tvar fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n\t\tvar fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n\t\tvar labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\t// Reset hit boxes\n\t\tvar hitboxes = me.legendHitBoxes = [];\n\n\t\tvar minSize = me.minSize;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tif (isHorizontal) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = display ? 10 : 0;\n\t\t} else {\n\t\t\tminSize.width = display ? 10 : 0;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\t// Increase sizes here\n\t\tif (display) {\n\t\t\tctx.font = labelFont;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\t// Labels\n\n\t\t\t\t// Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n\t\t\t\tvar lineWidths = me.lineWidths = [0];\n\t\t\t\tvar totalHeight = me.legendItems.length ? fontSize + (labelOpts.padding) : 0;\n\n\t\t\t\tctx.textAlign = 'left';\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\tif (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\n\t\t\t\t\t\ttotalHeight += fontSize + (labelOpts.padding);\n\t\t\t\t\t\tlineWidths[lineWidths.length] = me.left;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: width,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\n\t\t\t\t\tlineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n\t\t\t\t});\n\n\t\t\t\tminSize.height += totalHeight;\n\n\t\t\t} else {\n\t\t\t\tvar vPadding = labelOpts.padding;\n\t\t\t\tvar columnWidths = me.columnWidths = [];\n\t\t\t\tvar totalWidth = labelOpts.padding;\n\t\t\t\tvar currentColWidth = 0;\n\t\t\t\tvar currentColHeight = 0;\n\t\t\t\tvar itemHeight = fontSize + vPadding;\n\n\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\t// If too tall, go to new column\n\t\t\t\t\tif (currentColHeight + itemHeight > minSize.height) {\n\t\t\t\t\t\ttotalWidth += currentColWidth + labelOpts.padding;\n\t\t\t\t\t\tcolumnWidths.push(currentColWidth); // previous column width\n\n\t\t\t\t\t\tcurrentColWidth = 0;\n\t\t\t\t\t\tcurrentColHeight = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Get max width\n\t\t\t\t\tcurrentColWidth = Math.max(currentColWidth, itemWidth);\n\t\t\t\t\tcurrentColHeight += itemHeight;\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: itemWidth,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\ttotalWidth += currentColWidth;\n\t\t\t\tcolumnWidths.push(currentColWidth);\n\t\t\t\tminSize.width += totalWidth;\n\t\t\t}\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\t},\n\tafterFit: noop,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t},\n\n\t// Actually draw the legend on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar globalDefault = defaults.global;\n\t\tvar lineDefault = globalDefault.elements.line;\n\t\tvar legendWidth = me.width;\n\t\tvar lineWidths = me.lineWidths;\n\n\t\tif (opts.display) {\n\t\t\tvar ctx = me.ctx;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\t\tvar fontColor = valueOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor);\n\t\t\tvar fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n\t\t\tvar fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n\t\t\tvar fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n\t\t\tvar labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\t\t\tvar cursor;\n\n\t\t\t// Canvas setup\n\t\t\tctx.textAlign = 'left';\n\t\t\tctx.textBaseline = 'middle';\n\t\t\tctx.lineWidth = 0.5;\n\t\t\tctx.strokeStyle = fontColor; // for strikethrough effect\n\t\t\tctx.fillStyle = fontColor; // render in correct colour\n\t\t\tctx.font = labelFont;\n\n\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\tvar hitboxes = me.legendHitBoxes;\n\n\t\t\t// current position\n\t\t\tvar drawLegendBox = function(x, y, legendItem) {\n\t\t\t\tif (isNaN(boxWidth) || boxWidth <= 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Set the ctx for the box\n\t\t\t\tctx.save();\n\n\t\t\t\tctx.fillStyle = valueOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\n\t\t\t\tctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\n\t\t\t\tctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n\t\t\t\tctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\n\t\t\t\tctx.lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\n\t\t\t\tctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\n\t\t\t\tvar isLineWidthZero = (valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0);\n\n\t\t\t\tif (ctx.setLineDash) {\n\t\t\t\t\t// IE 9 and 10 do not support line dash\n\t\t\t\t\tctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\n\t\t\t\t}\n\n\t\t\t\tif (opts.labels && opts.labels.usePointStyle) {\n\t\t\t\t\t// Recalculate x and y for drawPoint() because its expecting\n\t\t\t\t\t// x and y to be center of figure (instead of top left)\n\t\t\t\t\tvar radius = fontSize * Math.SQRT2 / 2;\n\t\t\t\t\tvar offSet = radius / Math.SQRT2;\n\t\t\t\t\tvar centerX = x + offSet;\n\t\t\t\t\tvar centerY = y + offSet;\n\n\t\t\t\t\t// Draw pointStyle as legend symbol\n\t\t\t\t\thelpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n\t\t\t\t} else {\n\t\t\t\t\t// Draw box as legend symbol\n\t\t\t\t\tif (!isLineWidthZero) {\n\t\t\t\t\t\tctx.strokeRect(x, y, boxWidth, fontSize);\n\t\t\t\t\t}\n\t\t\t\t\tctx.fillRect(x, y, boxWidth, fontSize);\n\t\t\t\t}\n\n\t\t\t\tctx.restore();\n\t\t\t};\n\t\t\tvar fillText = function(x, y, legendItem, textWidth) {\n\t\t\t\tvar halfFontSize = fontSize / 2;\n\t\t\t\tvar xLeft = boxWidth + halfFontSize + x;\n\t\t\t\tvar yMiddle = y + halfFontSize;\n\n\t\t\t\tctx.fillText(legendItem.text, xLeft, yMiddle);\n\n\t\t\t\tif (legendItem.hidden) {\n\t\t\t\t\t// Strikethrough the text if hidden\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.lineWidth = 2;\n\t\t\t\t\tctx.moveTo(xLeft, yMiddle);\n\t\t\t\t\tctx.lineTo(xLeft + textWidth, yMiddle);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Horizontal\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tif (isHorizontal) {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + ((legendWidth - lineWidths[0]) / 2),\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + labelOpts.padding,\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar itemHeight = fontSize + labelOpts.padding;\n\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\tvar textWidth = ctx.measureText(legendItem.text).width;\n\t\t\t\tvar width = boxWidth + (fontSize / 2) + textWidth;\n\t\t\t\tvar x = cursor.x;\n\t\t\t\tvar y = cursor.y;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tif (x + width >= legendWidth) {\n\t\t\t\t\t\ty = cursor.y += itemHeight;\n\t\t\t\t\t\tcursor.line++;\n\t\t\t\t\t\tx = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2);\n\t\t\t\t\t}\n\t\t\t\t} else if (y + itemHeight > me.bottom) {\n\t\t\t\t\tx = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n\t\t\t\t\ty = cursor.y = me.top + labelOpts.padding;\n\t\t\t\t\tcursor.line++;\n\t\t\t\t}\n\n\t\t\t\tdrawLegendBox(x, y, legendItem);\n\n\t\t\t\thitboxes[i].left = x;\n\t\t\t\thitboxes[i].top = y;\n\n\t\t\t\t// Fill the actual label\n\t\t\t\tfillText(x, y, legendItem, textWidth);\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tcursor.x += width + (labelOpts.padding);\n\t\t\t\t} else {\n\t\t\t\t\tcursor.y += itemHeight;\n\t\t\t\t}\n\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event - The event to handle\n\t * @return {Boolean} true if a change occured\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar type = e.type === 'mouseup' ? 'click' : e.type;\n\t\tvar changed = false;\n\n\t\tif (type === 'mousemove') {\n\t\t\tif (!opts.onHover) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if (type === 'click') {\n\t\t\tif (!opts.onClick) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\t// Chart event already has relative position in it\n\t\tvar x = e.x;\n\t\tvar y = e.y;\n\n\t\tif (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n\t\t\t// See if we are touching one of the dataset boxes\n\t\t\tvar lh = me.legendHitBoxes;\n\t\t\tfor (var i = 0; i < lh.length; ++i) {\n\t\t\t\tvar hitBox = lh[i];\n\n\t\t\t\tif (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n\t\t\t\t\t// Touching an element\n\t\t\t\t\tif (type === 'click') {\n\t\t\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\t\t\topts.onClick.call(me, e.native, me.legendItems[i]);\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (type === 'mousemove') {\n\t\t\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\t\t\topts.onHover.call(me, e.native, me.legendItems[i]);\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn changed;\n\t}\n});\n\nfunction createNewLegendAndAttach(chart, legendOpts) {\n\tvar legend = new Legend({\n\t\tctx: chart.ctx,\n\t\toptions: legendOpts,\n\t\tchart: chart\n\t});\n\n\tlayouts.configure(chart, legend, legendOpts);\n\tlayouts.addBox(chart, legend);\n\tchart.legend = legend;\n}\n\nmodule.exports = {\n\tid: 'legend',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n\t * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Legend,\n\n\tbeforeInit: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\n\t\tif (legendOpts) {\n\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\t\tvar legend = chart.legend;\n\n\t\tif (legendOpts) {\n\t\t\thelpers.mergeIf(legendOpts, defaults.global.legend);\n\n\t\t\tif (legend) {\n\t\t\t\tlayouts.configure(chart, legend, legendOpts);\n\t\t\t\tlegend.options = legendOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t\t}\n\t\t} else if (legend) {\n\t\t\tlayouts.removeBox(chart, legend);\n\t\t\tdelete chart.legend;\n\t\t}\n\t},\n\n\tafterEvent: function(chart, e) {\n\t\tvar legend = chart.legend;\n\t\tif (legend) {\n\t\t\tlegend.handleEvent(e);\n\t\t}\n\t}\n};\n","'use strict';\n\nvar helpers = require('./helpers.core');\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\nmodule.exports = {\n\t/**\n\t * Converts the given line height `value` in pixels for a specific font `size`.\n\t * @param {Number|String} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n\t * @param {Number} size - The font size (in pixels) used to resolve relative `value`.\n\t * @returns {Number} The effective line height in pixels (size * 1.2 if value is invalid).\n\t * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n\t * @since 2.7.0\n\t */\n\ttoLineHeight: function(value, size) {\n\t\tvar matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\t\tif (!matches || matches[1] === 'normal') {\n\t\t\treturn size * 1.2;\n\t\t}\n\n\t\tvalue = +matches[2];\n\n\t\tswitch (matches[3]) {\n\t\tcase 'px':\n\t\t\treturn value;\n\t\tcase '%':\n\t\t\tvalue /= 100;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\n\t\treturn size * value;\n\t},\n\n\t/**\n\t * Converts the given value into a padding object with pre-computed width/height.\n\t * @param {Number|Object} value - If a number, set the value to all TRBL component,\n\t *  else, if and object, use defined properties and sets undefined ones to 0.\n\t * @returns {Object} The padding values (top, right, bottom, left, width, height)\n\t * @since 2.7.0\n\t */\n\ttoPadding: function(value) {\n\t\tvar t, r, b, l;\n\n\t\tif (helpers.isObject(value)) {\n\t\t\tt = +value.top || 0;\n\t\t\tr = +value.right || 0;\n\t\t\tb = +value.bottom || 0;\n\t\t\tl = +value.left || 0;\n\t\t} else {\n\t\t\tt = r = b = l = +value || 0;\n\t\t}\n\n\t\treturn {\n\t\t\ttop: t,\n\t\t\tright: r,\n\t\t\tbottom: b,\n\t\t\tleft: l,\n\t\t\theight: t + b,\n\t\t\twidth: l + r\n\t\t};\n\t},\n\n\t/**\n\t * Evaluates the given `inputs` sequentially and returns the first defined value.\n\t * @param {Array[]} inputs - An array of values, falling back to the last value.\n\t * @param {Object} [context] - If defined and the current value is a function, the value\n\t * is called with `context` as first argument and the result becomes the new input.\n\t * @param {Number} [index] - If defined and the current value is an array, the value\n\t * at `index` become the new input.\n\t * @since 2.7.0\n\t */\n\tresolve: function(inputs, context, index) {\n\t\tvar i, ilen, value;\n\n\t\tfor (i = 0, ilen = inputs.length; i < ilen; ++i) {\n\t\t\tvalue = inputs[i];\n\t\t\tif (value === undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (context !== undefined && typeof value === 'function') {\n\t\t\t\tvalue = value(context);\n\t\t\t}\n\t\t\tif (index !== undefined && helpers.isArray(value)) {\n\t\t\t\tvalue = value[index];\n\t\t\t}\n\t\t\tif (value !== undefined) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\t}\n};\n","/* global window: false */\n'use strict';\n\nvar defaults = require('./core.defaults');\nvar Element = require('./core.element');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\tanimation: {\n\t\tduration: 1000,\n\t\teasing: 'easeOutQuart',\n\t\tonProgress: helpers.noop,\n\t\tonComplete: helpers.noop\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.Animation = Element.extend({\n\t\tchart: null, // the animation associated chart instance\n\t\tcurrentStep: 0, // the current animation step\n\t\tnumSteps: 60, // default number of steps\n\t\teasing: '', // the easing to use for this animation\n\t\trender: null, // render function used by the animation service\n\n\t\tonAnimationProgress: null, // user specified callback to fire on each step of the animation\n\t\tonAnimationComplete: null, // user specified callback to fire when the animation finishes\n\t});\n\n\tChart.animationService = {\n\t\tframeDuration: 17,\n\t\tanimations: [],\n\t\tdropFrames: 0,\n\t\trequest: null,\n\n\t\t/**\n\t\t * @param {Chart} chart - The chart to animate.\n\t\t * @param {Chart.Animation} animation - The animation that we will animate.\n\t\t * @param {Number} duration - The animation duration in ms.\n\t\t * @param {Boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n\t\t */\n\t\taddAnimation: function(chart, animation, duration, lazy) {\n\t\t\tvar animations = this.animations;\n\t\t\tvar i, ilen;\n\n\t\t\tanimation.chart = chart;\n\n\t\t\tif (!lazy) {\n\t\t\t\tchart.animating = true;\n\t\t\t}\n\n\t\t\tfor (i = 0, ilen = animations.length; i < ilen; ++i) {\n\t\t\t\tif (animations[i].chart === chart) {\n\t\t\t\t\tanimations[i] = animation;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tanimations.push(animation);\n\n\t\t\t// If there are no animations queued, manually kickstart a digest, for lack of a better word\n\t\t\tif (animations.length === 1) {\n\t\t\t\tthis.requestAnimationFrame();\n\t\t\t}\n\t\t},\n\n\t\tcancelAnimation: function(chart) {\n\t\t\tvar index = helpers.findIndex(this.animations, function(animation) {\n\t\t\t\treturn animation.chart === chart;\n\t\t\t});\n\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.animations.splice(index, 1);\n\t\t\t\tchart.animating = false;\n\t\t\t}\n\t\t},\n\n\t\trequestAnimationFrame: function() {\n\t\t\tvar me = this;\n\t\t\tif (me.request === null) {\n\t\t\t\t// Skip animation frame requests until the active one is executed.\n\t\t\t\t// This can happen when processing mouse events, e.g. 'mousemove'\n\t\t\t\t// and 'mouseout' events will trigger multiple renders.\n\t\t\t\tme.request = helpers.requestAnimFrame.call(window, function() {\n\t\t\t\t\tme.request = null;\n\t\t\t\t\tme.startDigest();\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tstartDigest: function() {\n\t\t\tvar me = this;\n\t\t\tvar startTime = Date.now();\n\t\t\tvar framesToDrop = 0;\n\n\t\t\tif (me.dropFrames > 1) {\n\t\t\t\tframesToDrop = Math.floor(me.dropFrames);\n\t\t\t\tme.dropFrames = me.dropFrames % 1;\n\t\t\t}\n\n\t\t\tme.advance(1 + framesToDrop);\n\n\t\t\tvar endTime = Date.now();\n\n\t\t\tme.dropFrames += (endTime - startTime) / me.frameDuration;\n\n\t\t\t// Do we have more stuff to animate?\n\t\t\tif (me.animations.length > 0) {\n\t\t\t\tme.requestAnimationFrame();\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tadvance: function(count) {\n\t\t\tvar animations = this.animations;\n\t\t\tvar animation, chart;\n\t\t\tvar i = 0;\n\n\t\t\twhile (i < animations.length) {\n\t\t\t\tanimation = animations[i];\n\t\t\t\tchart = animation.chart;\n\n\t\t\t\tanimation.currentStep = (animation.currentStep || 0) + count;\n\t\t\t\tanimation.currentStep = Math.min(animation.currentStep, animation.numSteps);\n\n\t\t\t\thelpers.callback(animation.render, [chart, animation], chart);\n\t\t\t\thelpers.callback(animation.onAnimationProgress, [animation], chart);\n\n\t\t\t\tif (animation.currentStep >= animation.numSteps) {\n\t\t\t\t\thelpers.callback(animation.onAnimationComplete, [animation], chart);\n\t\t\t\t\tchart.animating = false;\n\t\t\t\t\tanimations.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\t++i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Provided for backward compatibility, use Chart.Animation instead\n\t * @prop Chart.Animation#animationObject\n\t * @deprecated since version 2.6.0\n\t * @todo remove at version 3\n\t */\n\tObject.defineProperty(Chart.Animation.prototype, 'animationObject', {\n\t\tget: function() {\n\t\t\treturn this;\n\t\t}\n\t});\n\n\t/**\n\t * Provided for backward compatibility, use Chart.Animation#chart instead\n\t * @prop Chart.Animation#chartInstance\n\t * @deprecated since version 2.6.0\n\t * @todo remove at version 3\n\t */\n\tObject.defineProperty(Chart.Animation.prototype, 'chartInstance', {\n\t\tget: function() {\n\t\t\treturn this.chart;\n\t\t},\n\t\tset: function(value) {\n\t\t\tthis.chart = value;\n\t\t}\n\t});\n\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = {\n\t/**\n\t * @private\n\t */\n\t_set: function(scope, values) {\n\t\treturn helpers.merge(this[scope] || (this[scope] = {}), values);\n\t}\n};\n","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/lib/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DeviceDataList.vue?vue&type=style&index=0&id=b4548df0&scoped=true&lang=scss&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/lib/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DeviceDataList.vue?vue&type=style&index=0&id=b4548df0&scoped=true&lang=scss&\"","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('line', {\n\tshowLines: true,\n\tspanGaps: false,\n\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\t\t\tid: 'x-axis-0'\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tfunction lineEnabled(dataset, options) {\n\t\treturn helpers.valueOrDefault(dataset.showLine, options.showLines);\n\t}\n\n\tChart.controllers.line = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: elements.Line,\n\n\t\tdataElementType: elements.Point,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data || [];\n\t\t\tvar options = me.chart.options;\n\t\t\tvar lineElementOptions = options.elements.line;\n\t\t\tvar scale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar i, ilen, custom;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar showLine = lineEnabled(dataset, options);\n\n\t\t\t// Update Line\n\t\t\tif (showLine) {\n\t\t\t\tcustom = line.custom || {};\n\n\t\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t\t}\n\n\t\t\t\t// Utility\n\t\t\t\tline._scale = scale;\n\t\t\t\tline._datasetIndex = me.index;\n\t\t\t\t// Data\n\t\t\t\tline._children = points;\n\t\t\t\t// Model\n\t\t\t\tline._model = {\n\t\t\t\t\t// Appearance\n\t\t\t\t\t// The default behavior of lines is to break at null values, according\n\t\t\t\t\t// to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n\t\t\t\t\t// This option gives lines the ability to span gaps\n\t\t\t\t\tspanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tsteppedLine: custom.steppedLine ? custom.steppedLine : helpers.valueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\n\t\t\t\t\tcubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.valueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode),\n\t\t\t\t};\n\n\t\t\t\tline.pivot();\n\t\t\t}\n\n\t\t\t// Update Points\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tme.updateElement(points[i], i, reset);\n\t\t\t}\n\n\t\t\tif (showLine && line._model.tension !== 0) {\n\t\t\t\tme.updateBezierControlPoints();\n\t\t\t}\n\n\t\t\t// Now pivot the point for animation\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tpoints[i].pivot();\n\t\t\t}\n\t\t},\n\n\t\tgetPointBackgroundColor: function(point, index) {\n\t\t\tvar backgroundColor = this.chart.options.elements.point.backgroundColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.backgroundColor) {\n\t\t\t\tbackgroundColor = custom.backgroundColor;\n\t\t\t} else if (dataset.pointBackgroundColor) {\n\t\t\t\tbackgroundColor = helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\n\t\t\t} else if (dataset.backgroundColor) {\n\t\t\t\tbackgroundColor = dataset.backgroundColor;\n\t\t\t}\n\n\t\t\treturn backgroundColor;\n\t\t},\n\n\t\tgetPointBorderColor: function(point, index) {\n\t\t\tvar borderColor = this.chart.options.elements.point.borderColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.borderColor) {\n\t\t\t\tborderColor = custom.borderColor;\n\t\t\t} else if (dataset.pointBorderColor) {\n\t\t\t\tborderColor = helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\n\t\t\t} else if (dataset.borderColor) {\n\t\t\t\tborderColor = dataset.borderColor;\n\t\t\t}\n\n\t\t\treturn borderColor;\n\t\t},\n\n\t\tgetPointBorderWidth: function(point, index) {\n\t\t\tvar borderWidth = this.chart.options.elements.point.borderWidth;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (!isNaN(custom.borderWidth)) {\n\t\t\t\tborderWidth = custom.borderWidth;\n\t\t\t} else if (!isNaN(dataset.pointBorderWidth) || helpers.isArray(dataset.pointBorderWidth)) {\n\t\t\t\tborderWidth = helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\n\t\t\t} else if (!isNaN(dataset.borderWidth)) {\n\t\t\t\tborderWidth = dataset.borderWidth;\n\t\t\t}\n\n\t\t\treturn borderWidth;\n\t\t},\n\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar datasetIndex = me.index;\n\t\t\tvar value = dataset.data[index];\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar pointOptions = me.chart.options.elements.point;\n\t\t\tvar x, y;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\n\t\t\t}\n\n\t\t\tx = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n\t\t\ty = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\n\n\t\t\t// Utility\n\t\t\tpoint._xScale = xScale;\n\t\t\tpoint._yScale = yScale;\n\t\t\tpoint._datasetIndex = datasetIndex;\n\t\t\tpoint._index = index;\n\n\t\t\t// Desired view properties\n\t\t\tpoint._model = {\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t\t// Appearance\n\t\t\t\tradius: custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\n\t\t\t\tpointStyle: custom.pointStyle || helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\n\t\t\t\tbackgroundColor: me.getPointBackgroundColor(point, index),\n\t\t\t\tborderColor: me.getPointBorderColor(point, index),\n\t\t\t\tborderWidth: me.getPointBorderWidth(point, index),\n\t\t\t\ttension: meta.dataset._model ? meta.dataset._model.tension : 0,\n\t\t\t\tsteppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\n\t\t\t\t// Tooltip\n\t\t\t\thitRadius: custom.hitRadius || helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\n\t\t\t};\n\t\t},\n\n\t\tcalculatePointY: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar sumPos = 0;\n\t\t\tvar sumNeg = 0;\n\t\t\tvar i, ds, dsMeta;\n\n\t\t\tif (yScale.options.stacked) {\n\t\t\t\tfor (i = 0; i < datasetIndex; i++) {\n\t\t\t\t\tds = chart.data.datasets[i];\n\t\t\t\t\tdsMeta = chart.getDatasetMeta(i);\n\t\t\t\t\tif (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n\t\t\t\t\t\tvar stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\t\t\t\t\t\tif (stackedRightValue < 0) {\n\t\t\t\t\t\t\tsumNeg += stackedRightValue || 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsumPos += stackedRightValue || 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar rightValue = Number(yScale.getRightValue(value));\n\t\t\t\tif (rightValue < 0) {\n\t\t\t\t\treturn yScale.getPixelForValue(sumNeg + rightValue);\n\t\t\t\t}\n\t\t\t\treturn yScale.getPixelForValue(sumPos + rightValue);\n\t\t\t}\n\n\t\t\treturn yScale.getPixelForValue(value);\n\t\t},\n\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar area = me.chart.chartArea;\n\t\t\tvar points = (meta.data || []);\n\t\t\tvar i, ilen, point, model, controlPoints;\n\n\t\t\t// Only consider points that are drawn in case the spanGaps option is used\n\t\t\tif (meta.dataset._model.spanGaps) {\n\t\t\t\tpoints = points.filter(function(pt) {\n\t\t\t\t\treturn !pt._model.skip;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction capControlPoint(pt, min, max) {\n\t\t\t\treturn Math.max(Math.min(pt, max), min);\n\t\t\t}\n\n\t\t\tif (meta.dataset._model.cubicInterpolationMode === 'monotone') {\n\t\t\t\thelpers.splineCurveMonotone(points);\n\t\t\t} else {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tpoint = points[i];\n\t\t\t\t\tmodel = point._model;\n\t\t\t\t\tcontrolPoints = helpers.splineCurve(\n\t\t\t\t\t\thelpers.previousItem(points, i)._model,\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\thelpers.nextItem(points, i)._model,\n\t\t\t\t\t\tmeta.dataset._model.tension\n\t\t\t\t\t);\n\t\t\t\t\tmodel.controlPointPreviousX = controlPoints.previous.x;\n\t\t\t\t\tmodel.controlPointPreviousY = controlPoints.previous.y;\n\t\t\t\t\tmodel.controlPointNextX = controlPoints.next.x;\n\t\t\t\t\tmodel.controlPointNextY = controlPoints.next.y;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.chart.options.elements.line.capBezierPoints) {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tmodel = points[i]._model;\n\t\t\t\t\tmodel.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n\t\t\t\t\tmodel.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data || [];\n\t\t\tvar area = chart.chartArea;\n\t\t\tvar ilen = points.length;\n\t\t\tvar i = 0;\n\n\t\t\thelpers.canvas.clipArea(chart.ctx, area);\n\n\t\t\tif (lineEnabled(me.getDataset(), chart.options)) {\n\t\t\t\tmeta.dataset.draw();\n\t\t\t}\n\n\t\t\thelpers.canvas.unclipArea(chart.ctx);\n\n\t\t\t// Draw the points\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\tpoints[i].draw(area);\n\t\t\t}\n\t\t},\n\n\t\tsetHoverStyle: function(point) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar index = point._index;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar model = point._model;\n\n\t\t\tmodel.radius = custom.hoverRadius || helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.chart.data.datasets[point._datasetIndex];\n\t\t\tvar index = point._index;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar model = point._model;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\n\t\t\tmodel.radius = custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, me.chart.options.elements.point.radius);\n\t\t\tmodel.backgroundColor = me.getPointBackgroundColor(point, index);\n\t\t\tmodel.borderColor = me.getPointBorderColor(point, index);\n\t\t\tmodel.borderWidth = me.getPointBorderWidth(point, index);\n\t\t}\n\t});\n};\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nmodule.exports = {\n\tacquireContext: function(item) {\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\treturn item && item.getContext('2d') || null;\n\t}\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = function(Chart) {\n\n\tvar arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n\n\t/**\n\t * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n\t * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n\t * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n\t */\n\tfunction listenArrayEvents(array, listener) {\n\t\tif (array._chartjs) {\n\t\t\tarray._chartjs.listeners.push(listener);\n\t\t\treturn;\n\t\t}\n\n\t\tObject.defineProperty(array, '_chartjs', {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: {\n\t\t\t\tlisteners: [listener]\n\t\t\t}\n\t\t});\n\n\t\tarrayEvents.forEach(function(key) {\n\t\t\tvar method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n\t\t\tvar base = array[key];\n\n\t\t\tObject.defineProperty(array, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: function() {\n\t\t\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\t\t\tvar res = base.apply(this, args);\n\n\t\t\t\t\thelpers.each(array._chartjs.listeners, function(object) {\n\t\t\t\t\t\tif (typeof object[method] === 'function') {\n\t\t\t\t\t\t\tobject[method].apply(object, args);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\treturn res;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Removes the given array event listener and cleanup extra attached properties (such as\n\t * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n\t */\n\tfunction unlistenArrayEvents(array, listener) {\n\t\tvar stub = array._chartjs;\n\t\tif (!stub) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar listeners = stub.listeners;\n\t\tvar index = listeners.indexOf(listener);\n\t\tif (index !== -1) {\n\t\t\tlisteners.splice(index, 1);\n\t\t}\n\n\t\tif (listeners.length > 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tarrayEvents.forEach(function(key) {\n\t\t\tdelete array[key];\n\t\t});\n\n\t\tdelete array._chartjs;\n\t}\n\n\t// Base class for all dataset controllers (line, bar, etc)\n\tChart.DatasetController = function(chart, datasetIndex) {\n\t\tthis.initialize(chart, datasetIndex);\n\t};\n\n\thelpers.extend(Chart.DatasetController.prototype, {\n\n\t\t/**\n\t\t * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdatasetElementType: null,\n\n\t\t/**\n\t\t * Element type used to generate a meta data (e.g. Chart.element.Point).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdataElementType: null,\n\n\t\tinitialize: function(chart, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tme.chart = chart;\n\t\t\tme.index = datasetIndex;\n\t\t\tme.linkScales();\n\t\t\tme.addElements();\n\t\t},\n\n\t\tupdateIndex: function(datasetIndex) {\n\t\t\tthis.index = datasetIndex;\n\t\t},\n\n\t\tlinkScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar dataset = me.getDataset();\n\n\t\t\tif (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n\t\t\t\tmeta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n\t\t\t}\n\t\t\tif (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n\t\t\t\tmeta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n\t\t\t}\n\t\t},\n\n\t\tgetDataset: function() {\n\t\t\treturn this.chart.data.datasets[this.index];\n\t\t},\n\n\t\tgetMeta: function() {\n\t\t\treturn this.chart.getDatasetMeta(this.index);\n\t\t},\n\n\t\tgetScaleForId: function(scaleID) {\n\t\t\treturn this.chart.scales[scaleID];\n\t\t},\n\n\t\treset: function() {\n\t\t\tthis.update(true);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tdestroy: function() {\n\t\t\tif (this._data) {\n\t\t\t\tunlistenArrayEvents(this._data, this);\n\t\t\t}\n\t\t},\n\n\t\tcreateMetaDataset: function() {\n\t\t\tvar me = this;\n\t\t\tvar type = me.datasetElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart,\n\t\t\t\t_datasetIndex: me.index\n\t\t\t});\n\t\t},\n\n\t\tcreateMetaData: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar type = me.dataElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart,\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index\n\t\t\t});\n\t\t},\n\n\t\taddElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar data = me.getDataset().data || [];\n\t\t\tvar metaData = meta.data;\n\t\t\tvar i, ilen;\n\n\t\t\tfor (i = 0, ilen = data.length; i < ilen; ++i) {\n\t\t\t\tmetaData[i] = metaData[i] || me.createMetaData(i);\n\t\t\t}\n\n\t\t\tmeta.dataset = meta.dataset || me.createMetaDataset();\n\t\t},\n\n\t\taddElementAndReset: function(index) {\n\t\t\tvar element = this.createMetaData(index);\n\t\t\tthis.getMeta().data.splice(index, 0, element);\n\t\t\tthis.updateElement(element, index, true);\n\t\t},\n\n\t\tbuildOrUpdateElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar data = dataset.data || (dataset.data = []);\n\n\t\t\t// In order to correctly handle data addition/deletion animation (an thus simulate\n\t\t\t// real-time charts), we need to monitor these data modifications and synchronize\n\t\t\t// the internal meta data accordingly.\n\t\t\tif (me._data !== data) {\n\t\t\t\tif (me._data) {\n\t\t\t\t\t// This case happens when the user replaced the data array instance.\n\t\t\t\t\tunlistenArrayEvents(me._data, me);\n\t\t\t\t}\n\n\t\t\t\tlistenArrayEvents(data, me);\n\t\t\t\tme._data = data;\n\t\t\t}\n\n\t\t\t// Re-sync meta data in case the user replaced the data array or if we missed\n\t\t\t// any updates and so make sure that we handle number of datapoints changing.\n\t\t\tme.resyncElements();\n\t\t},\n\n\t\tupdate: helpers.noop,\n\n\t\ttransition: function(easingValue) {\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar elements = meta.data || [];\n\t\t\tvar ilen = elements.length;\n\t\t\tvar i = 0;\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\telements[i].transition(easingValue);\n\t\t\t}\n\n\t\t\tif (meta.dataset) {\n\t\t\t\tmeta.dataset.transition(easingValue);\n\t\t\t}\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar elements = meta.data || [];\n\t\t\tvar ilen = elements.length;\n\t\t\tvar i = 0;\n\n\t\t\tif (meta.dataset) {\n\t\t\t\tmeta.dataset.draw();\n\t\t\t}\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\telements[i].draw();\n\t\t\t}\n\t\t},\n\n\t\tremoveHoverStyle: function(element, elementOpts) {\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\t\tvar index = element._index;\n\t\t\tvar custom = element.custom || {};\n\t\t\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\tvar model = element._model;\n\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\n\t\t},\n\n\t\tsetHoverStyle: function(element) {\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\t\tvar index = element._index;\n\t\t\tvar custom = element.custom || {};\n\t\t\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\tvar getHoverColor = helpers.getHoverColor;\n\t\t\tvar model = element._model;\n\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tresyncElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar data = me.getDataset().data;\n\t\t\tvar numMeta = meta.data.length;\n\t\t\tvar numData = data.length;\n\n\t\t\tif (numData < numMeta) {\n\t\t\t\tmeta.data.splice(numData, numMeta - numData);\n\t\t\t} else if (numData > numMeta) {\n\t\t\t\tme.insertElements(numMeta, numData - numMeta);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tinsertElements: function(start, count) {\n\t\t\tfor (var i = 0; i < count; ++i) {\n\t\t\t\tthis.addElementAndReset(start + i);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataPush: function() {\n\t\t\tthis.insertElements(this.getDataset().data.length - 1, arguments.length);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataPop: function() {\n\t\t\tthis.getMeta().data.pop();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataShift: function() {\n\t\t\tthis.getMeta().data.shift();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataSplice: function(start, count) {\n\t\t\tthis.getMeta().data.splice(start, count);\n\t\t\tthis.insertElements(start, arguments.length - 2);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataUnshift: function() {\n\t\t\tthis.insertElements(0, arguments.length);\n\t\t}\n\t});\n\n\tChart.DatasetController.extend = helpers.inherits;\n};\n","'use strict';\n\nvar color = require('chartjs-color');\nvar helpers = require('../helpers/index');\n\nfunction interpolate(start, view, model, ease) {\n\tvar keys = Object.keys(model);\n\tvar i, ilen, key, actual, origin, target, type, c0, c1;\n\n\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\tkey = keys[i];\n\n\t\ttarget = model[key];\n\n\t\t// if a value is added to the model after pivot() has been called, the view\n\t\t// doesn't contain it, so let's initialize the view to the target value.\n\t\tif (!view.hasOwnProperty(key)) {\n\t\t\tview[key] = target;\n\t\t}\n\n\t\tactual = view[key];\n\n\t\tif (actual === target || key[0] === '_') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!start.hasOwnProperty(key)) {\n\t\t\tstart[key] = actual;\n\t\t}\n\n\t\torigin = start[key];\n\n\t\ttype = typeof target;\n\n\t\tif (type === typeof origin) {\n\t\t\tif (type === 'string') {\n\t\t\t\tc0 = color(origin);\n\t\t\t\tif (c0.valid) {\n\t\t\t\t\tc1 = color(target);\n\t\t\t\t\tif (c1.valid) {\n\t\t\t\t\t\tview[key] = c1.mix(c0, ease).rgbString();\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (type === 'number' && isFinite(origin) && isFinite(target)) {\n\t\t\t\tview[key] = origin + (target - origin) * ease;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tview[key] = target;\n\t}\n}\n\nvar Element = function(configuration) {\n\thelpers.extend(this, configuration);\n\tthis.initialize.apply(this, arguments);\n};\n\nhelpers.extend(Element.prototype, {\n\n\tinitialize: function() {\n\t\tthis.hidden = false;\n\t},\n\n\tpivot: function() {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\tme._view = helpers.clone(me._model);\n\t\t}\n\t\tme._start = {};\n\t\treturn me;\n\t},\n\n\ttransition: function(ease) {\n\t\tvar me = this;\n\t\tvar model = me._model;\n\t\tvar start = me._start;\n\t\tvar view = me._view;\n\n\t\t// No animation -> No Transition\n\t\tif (!model || ease === 1) {\n\t\t\tme._view = model;\n\t\t\tme._start = null;\n\t\t\treturn me;\n\t\t}\n\n\t\tif (!view) {\n\t\t\tview = me._view = {};\n\t\t}\n\n\t\tif (!start) {\n\t\t\tstart = me._start = {};\n\t\t}\n\n\t\tinterpolate(start, view, model, ease);\n\n\t\treturn me;\n\t},\n\n\ttooltipPosition: function() {\n\t\treturn {\n\t\t\tx: this._model.x,\n\t\t\ty: this._model.y\n\t\t};\n\t},\n\n\thasValue: function() {\n\t\treturn helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\n\t}\n});\n\nElement.extend = helpers.inherits;\n\nmodule.exports = Element;\n","/* MIT license */\n\nmodule.exports = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n}\n\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0]/255,\n      g = rgb[1]/255,\n      b = rgb[2]/255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, l;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g)/ delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  l = (min + max) / 2;\n\n  if (max == min)\n    s = 0;\n  else if (l <= 0.5)\n    s = delta / (max + min);\n  else\n    s = delta / (2 - max - min);\n\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, v;\n\n  if (max == 0)\n    s = 0;\n  else\n    s = (delta/max * 1000)/10;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g) / delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  v = ((max / 255) * 1000) / 10;\n\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1/255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1/255 * Math.max(r, Math.max(g, b));\n\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c, m, y, k;\n\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255;\n\n  // assume sRGB\n  r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n  g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n  b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n  var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n  var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n  var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n  return [x * 100, y *100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1, t2, t3, rgb, val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5)\n    t2 = l * (1 + s);\n  else\n    t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n\n  rgb = [0, 0, 0];\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * - (i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n\n    if (6 * t3 < 1)\n      val = t1 + (t2 - t1) * 6 * t3;\n    else if (2 * t3 < 1)\n      val = t2;\n    else if (3 * t3 < 2)\n      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n    else\n      val = t1;\n\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv, v;\n\n  if(l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= (l <= 1) ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = (2 * s) / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - (s * f)),\n      t = 255 * v * (1 - (s * (1 - f))),\n      v = 255 * v;\n\n  switch(hi) {\n    case 0:\n      return [v, t, p];\n    case 1:\n      return [q, v, p];\n    case 2:\n      return [p, v, t];\n    case 3:\n      return [p, q, v];\n    case 4:\n      return [t, p, v];\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl, l;\n\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= (l <= 1) ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args))\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n}\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i, v, f, n;\n\n  // wh + bl cant be > 1\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n  n = wh + f * (v - wh);  // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0: r = v; g = n; b = wh; break;\n    case 1: r = n; g = v; b = wh; break;\n    case 2: r = wh; g = v; b = n; break;\n    case 3: r = wh; g = n; b = v; break;\n    case 4: r = n; g = wh; b = v; break;\n    case 5: r = v; g = wh; b = n; break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r, g, b;\n\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r, g, b;\n\n  r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n  g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n  b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n  // assume sRGB\n  r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n    : r = (r * 12.92);\n\n  g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n    : g = (g * 12.92);\n\n  b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n    : b = (b * 12.92);\n\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x, y, z, y2;\n\n  if (l <= 8) {\n    y = (l * 100) / 903.3;\n    y2 = (7.787 * (y / 100)) + (16 / 116);\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1/3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\n\n  z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\n\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr, h, c;\n\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n  if (h < 0) {\n    h += 360;\n  }\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a, b, hr;\n\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue:  [240,248,255],\n  antiquewhite: [250,235,215],\n  aqua: [0,255,255],\n  aquamarine: [127,255,212],\n  azure:  [240,255,255],\n  beige:  [245,245,220],\n  bisque: [255,228,196],\n  black:  [0,0,0],\n  blanchedalmond: [255,235,205],\n  blue: [0,0,255],\n  blueviolet: [138,43,226],\n  brown:  [165,42,42],\n  burlywood:  [222,184,135],\n  cadetblue:  [95,158,160],\n  chartreuse: [127,255,0],\n  chocolate:  [210,105,30],\n  coral:  [255,127,80],\n  cornflowerblue: [100,149,237],\n  cornsilk: [255,248,220],\n  crimson:  [220,20,60],\n  cyan: [0,255,255],\n  darkblue: [0,0,139],\n  darkcyan: [0,139,139],\n  darkgoldenrod:  [184,134,11],\n  darkgray: [169,169,169],\n  darkgreen:  [0,100,0],\n  darkgrey: [169,169,169],\n  darkkhaki:  [189,183,107],\n  darkmagenta:  [139,0,139],\n  darkolivegreen: [85,107,47],\n  darkorange: [255,140,0],\n  darkorchid: [153,50,204],\n  darkred:  [139,0,0],\n  darksalmon: [233,150,122],\n  darkseagreen: [143,188,143],\n  darkslateblue:  [72,61,139],\n  darkslategray:  [47,79,79],\n  darkslategrey:  [47,79,79],\n  darkturquoise:  [0,206,209],\n  darkviolet: [148,0,211],\n  deeppink: [255,20,147],\n  deepskyblue:  [0,191,255],\n  dimgray:  [105,105,105],\n  dimgrey:  [105,105,105],\n  dodgerblue: [30,144,255],\n  firebrick:  [178,34,34],\n  floralwhite:  [255,250,240],\n  forestgreen:  [34,139,34],\n  fuchsia:  [255,0,255],\n  gainsboro:  [220,220,220],\n  ghostwhite: [248,248,255],\n  gold: [255,215,0],\n  goldenrod:  [218,165,32],\n  gray: [128,128,128],\n  green:  [0,128,0],\n  greenyellow:  [173,255,47],\n  grey: [128,128,128],\n  honeydew: [240,255,240],\n  hotpink:  [255,105,180],\n  indianred:  [205,92,92],\n  indigo: [75,0,130],\n  ivory:  [255,255,240],\n  khaki:  [240,230,140],\n  lavender: [230,230,250],\n  lavenderblush:  [255,240,245],\n  lawngreen:  [124,252,0],\n  lemonchiffon: [255,250,205],\n  lightblue:  [173,216,230],\n  lightcoral: [240,128,128],\n  lightcyan:  [224,255,255],\n  lightgoldenrodyellow: [250,250,210],\n  lightgray:  [211,211,211],\n  lightgreen: [144,238,144],\n  lightgrey:  [211,211,211],\n  lightpink:  [255,182,193],\n  lightsalmon:  [255,160,122],\n  lightseagreen:  [32,178,170],\n  lightskyblue: [135,206,250],\n  lightslategray: [119,136,153],\n  lightslategrey: [119,136,153],\n  lightsteelblue: [176,196,222],\n  lightyellow:  [255,255,224],\n  lime: [0,255,0],\n  limegreen:  [50,205,50],\n  linen:  [250,240,230],\n  magenta:  [255,0,255],\n  maroon: [128,0,0],\n  mediumaquamarine: [102,205,170],\n  mediumblue: [0,0,205],\n  mediumorchid: [186,85,211],\n  mediumpurple: [147,112,219],\n  mediumseagreen: [60,179,113],\n  mediumslateblue:  [123,104,238],\n  mediumspringgreen:  [0,250,154],\n  mediumturquoise:  [72,209,204],\n  mediumvioletred:  [199,21,133],\n  midnightblue: [25,25,112],\n  mintcream:  [245,255,250],\n  mistyrose:  [255,228,225],\n  moccasin: [255,228,181],\n  navajowhite:  [255,222,173],\n  navy: [0,0,128],\n  oldlace:  [253,245,230],\n  olive:  [128,128,0],\n  olivedrab:  [107,142,35],\n  orange: [255,165,0],\n  orangered:  [255,69,0],\n  orchid: [218,112,214],\n  palegoldenrod:  [238,232,170],\n  palegreen:  [152,251,152],\n  paleturquoise:  [175,238,238],\n  palevioletred:  [219,112,147],\n  papayawhip: [255,239,213],\n  peachpuff:  [255,218,185],\n  peru: [205,133,63],\n  pink: [255,192,203],\n  plum: [221,160,221],\n  powderblue: [176,224,230],\n  purple: [128,0,128],\n  rebeccapurple: [102, 51, 153],\n  red:  [255,0,0],\n  rosybrown:  [188,143,143],\n  royalblue:  [65,105,225],\n  saddlebrown:  [139,69,19],\n  salmon: [250,128,114],\n  sandybrown: [244,164,96],\n  seagreen: [46,139,87],\n  seashell: [255,245,238],\n  sienna: [160,82,45],\n  silver: [192,192,192],\n  skyblue:  [135,206,235],\n  slateblue:  [106,90,205],\n  slategray:  [112,128,144],\n  slategrey:  [112,128,144],\n  snow: [255,250,250],\n  springgreen:  [0,255,127],\n  steelblue:  [70,130,180],\n  tan:  [210,180,140],\n  teal: [0,128,128],\n  thistle:  [216,191,216],\n  tomato: [255,99,71],\n  turquoise:  [64,224,208],\n  violet: [238,130,238],\n  wheat:  [245,222,179],\n  white:  [255,255,255],\n  whitesmoke: [245,245,245],\n  yellow: [255,255,0],\n  yellowgreen:  [154,205,50]\n};\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Bar = function(context, config) {\n\t\tconfig.type = 'bar';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\n\nvar defaultColor = defaults.global.defaultColor;\n\ndefaults._set('global', {\n\telements: {\n\t\tpoint: {\n\t\t\tradius: 3,\n\t\t\tpointStyle: 'circle',\n\t\t\tbackgroundColor: defaultColor,\n\t\t\tborderColor: defaultColor,\n\t\t\tborderWidth: 1,\n\t\t\t// Hover\n\t\t\thitRadius: 1,\n\t\t\thoverRadius: 4,\n\t\t\thoverBorderWidth: 1\n\t\t}\n\t}\n});\n\nfunction xRange(mouseX) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius) : false;\n}\n\nfunction yRange(mouseY) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius) : false;\n}\n\nmodule.exports = Element.extend({\n\tinRange: function(mouseX, mouseY) {\n\t\tvar vm = this._view;\n\t\treturn vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\n\t},\n\n\tinLabelRange: xRange,\n\tinXRange: xRange,\n\tinYRange: yRange,\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\treturn Math.PI * Math.pow(this._view.radius, 2);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y,\n\t\t\tpadding: vm.radius + vm.borderWidth\n\t\t};\n\t},\n\n\tdraw: function(chartArea) {\n\t\tvar vm = this._view;\n\t\tvar model = this._model;\n\t\tvar ctx = this._chart.ctx;\n\t\tvar pointStyle = vm.pointStyle;\n\t\tvar radius = vm.radius;\n\t\tvar x = vm.x;\n\t\tvar y = vm.y;\n\t\tvar color = helpers.color;\n\t\tvar errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)\n\t\tvar ratio = 0;\n\n\t\tif (vm.skip) {\n\t\t\treturn;\n\t\t}\n\n\t\tctx.strokeStyle = vm.borderColor || defaultColor;\n\t\tctx.lineWidth = helpers.valueOrDefault(vm.borderWidth, defaults.global.elements.point.borderWidth);\n\t\tctx.fillStyle = vm.backgroundColor || defaultColor;\n\n\t\t// Cliping for Points.\n\t\t// going out from inner charArea?\n\t\tif ((chartArea !== undefined) && ((model.x < chartArea.left) || (chartArea.right * errMargin < model.x) || (model.y < chartArea.top) || (chartArea.bottom * errMargin < model.y))) {\n\t\t\t// Point fade out\n\t\t\tif (model.x < chartArea.left) {\n\t\t\t\tratio = (x - model.x) / (chartArea.left - model.x);\n\t\t\t} else if (chartArea.right * errMargin < model.x) {\n\t\t\t\tratio = (model.x - x) / (model.x - chartArea.right);\n\t\t\t} else if (model.y < chartArea.top) {\n\t\t\t\tratio = (y - model.y) / (chartArea.top - model.y);\n\t\t\t} else if (chartArea.bottom * errMargin < model.y) {\n\t\t\t\tratio = (model.y - y) / (model.y - chartArea.bottom);\n\t\t\t}\n\t\t\tratio = Math.round(ratio * 100) / 100;\n\t\t\tctx.strokeStyle = color(ctx.strokeStyle).alpha(ratio).rgbString();\n\t\t\tctx.fillStyle = color(ctx.fillStyle).alpha(ratio).rgbString();\n\t\t}\n\n\t\thelpers.canvas.drawPoint(ctx, pointStyle, radius, x, y);\n\t}\n});\n","var conversions = require(\"./conversions\");\n\nvar convert = function() {\n   return new Converter();\n}\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] =  (function(func) {\n    // accept array or plain args\n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    }\n  })(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2];\n\n  // export rgb2hsl and [\"rgb\"][\"hsl\"]\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = (function(func) { \n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      \n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined)\n        return val; // keyword\n\n      for (var i = 0; i < val.length; i++)\n        val[i] = Math.round(val[i]);\n      return val;\n    }\n  })(func);\n}\n\n\n/* Converter does lazy conversion and caching */\nvar Converter = function() {\n   this.convs = {};\n};\n\n/* Either get the values for a space or\n  set the values for a space, depending on args */\nConverter.prototype.routeSpace = function(space, args) {\n   var values = args[0];\n   if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n   }\n   // color.rgb(10, 10, 10)\n   if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);        \n   }\n\n   return this.setValues(space, values);\n};\n  \n/* Set the values for a space, invalidating cache */\nConverter.prototype.setValues = function(space, values) {\n   this.space = space;\n   this.convs = {};\n   this.convs[space] = values;\n   return this;\n};\n\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\nConverter.prototype.getValues = function(space) {\n   var vals = this.convs[space];\n   if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n\n      this.convs[space] = vals;\n   }\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\n   Converter.prototype[space] = function(vals) {\n      return this.routeSpace(space, arguments);\n   }\n});\n\nmodule.exports = convert;","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Bubble = function(context, config) {\n\t\tconfig.type = 'bubble';\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","/* global window: false */\n'use strict';\n\nvar moment = require('moment');\nmoment = typeof moment === 'function' ? moment : window.moment;\n\nvar defaults = require('../core/core.defaults');\nvar helpers = require('../helpers/index');\n\n// Integer constants are from the ES6 spec.\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\nvar INTERVALS = {\n\tmillisecond: {\n\t\tcommon: true,\n\t\tsize: 1,\n\t\tsteps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n\t},\n\tsecond: {\n\t\tcommon: true,\n\t\tsize: 1000,\n\t\tsteps: [1, 2, 5, 10, 30]\n\t},\n\tminute: {\n\t\tcommon: true,\n\t\tsize: 60000,\n\t\tsteps: [1, 2, 5, 10, 30]\n\t},\n\thour: {\n\t\tcommon: true,\n\t\tsize: 3600000,\n\t\tsteps: [1, 2, 3, 6, 12]\n\t},\n\tday: {\n\t\tcommon: true,\n\t\tsize: 86400000,\n\t\tsteps: [1, 2, 5]\n\t},\n\tweek: {\n\t\tcommon: false,\n\t\tsize: 604800000,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tmonth: {\n\t\tcommon: true,\n\t\tsize: 2.628e9,\n\t\tsteps: [1, 2, 3]\n\t},\n\tquarter: {\n\t\tcommon: false,\n\t\tsize: 7.884e9,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tyear: {\n\t\tcommon: true,\n\t\tsize: 3.154e10\n\t}\n};\n\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n\treturn a - b;\n}\n\nfunction arrayUnique(items) {\n\tvar hash = {};\n\tvar out = [];\n\tvar i, ilen, item;\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\titem = items[i];\n\t\tif (!hash[item]) {\n\t\t\thash[item] = true;\n\t\t\tout.push(item);\n\t\t}\n\t}\n\n\treturn out;\n}\n\n/**\n * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n * extremity (left + width or top + height). Note that it would be more optimized to directly\n * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n *\n * @param {Number[]} timestamps - timestamps sorted from lowest to highest.\n * @param {String} distribution - If 'linear', timestamps will be spread linearly along the min\n * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n * If 'series', timestamps will be positioned at the same distance from each other. In this\n * case, only timestamps that break the time linearity are registered, meaning that in the\n * best case, all timestamps are linear, the table contains only min and max.\n */\nfunction buildLookupTable(timestamps, min, max, distribution) {\n\tif (distribution === 'linear' || !timestamps.length) {\n\t\treturn [\n\t\t\t{time: min, pos: 0},\n\t\t\t{time: max, pos: 1}\n\t\t];\n\t}\n\n\tvar table = [];\n\tvar items = [min];\n\tvar i, ilen, prev, curr, next;\n\n\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\tcurr = timestamps[i];\n\t\tif (curr > min && curr < max) {\n\t\t\titems.push(curr);\n\t\t}\n\t}\n\n\titems.push(max);\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\tnext = items[i + 1];\n\t\tprev = items[i - 1];\n\t\tcurr = items[i];\n\n\t\t// only add points that breaks the scale linearity\n\t\tif (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n\t\t\ttable.push({time: curr, pos: i / (ilen - 1)});\n\t\t}\n\t}\n\n\treturn table;\n}\n\n// @see adapted from http://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\nfunction lookup(table, key, value) {\n\tvar lo = 0;\n\tvar hi = table.length - 1;\n\tvar mid, i0, i1;\n\n\twhile (lo >= 0 && lo <= hi) {\n\t\tmid = (lo + hi) >> 1;\n\t\ti0 = table[mid - 1] || null;\n\t\ti1 = table[mid];\n\n\t\tif (!i0) {\n\t\t\t// given value is outside table (before first item)\n\t\t\treturn {lo: null, hi: i1};\n\t\t} else if (i1[key] < value) {\n\t\t\tlo = mid + 1;\n\t\t} else if (i0[key] > value) {\n\t\t\thi = mid - 1;\n\t\t} else {\n\t\t\treturn {lo: i0, hi: i1};\n\t\t}\n\t}\n\n\t// given value is outside table (after last item)\n\treturn {lo: i1, hi: null};\n}\n\n/**\n * Linearly interpolates the given source `value` using the table items `skey` values and\n * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n * index [0, 1] or [n - 1, n] are used for the interpolation.\n */\nfunction interpolate(table, skey, sval, tkey) {\n\tvar range = lookup(table, skey, sval);\n\n\t// Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\tvar prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n\tvar next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n\n\tvar span = next[skey] - prev[skey];\n\tvar ratio = span ? (sval - prev[skey]) / span : 0;\n\tvar offset = (next[tkey] - prev[tkey]) * ratio;\n\n\treturn prev[tkey] + offset;\n}\n\n/**\n * Convert the given value to a moment object using the given time options.\n * @see http://momentjs.com/docs/#/parsing/\n */\nfunction momentify(value, options) {\n\tvar parser = options.parser;\n\tvar format = options.parser || options.format;\n\n\tif (typeof parser === 'function') {\n\t\treturn parser(value);\n\t}\n\n\tif (typeof value === 'string' && typeof format === 'string') {\n\t\treturn moment(value, format);\n\t}\n\n\tif (!(value instanceof moment)) {\n\t\tvalue = moment(value);\n\t}\n\n\tif (value.isValid()) {\n\t\treturn value;\n\t}\n\n\t// Labels are in an incompatible moment format and no `parser` has been provided.\n\t// The user might still use the deprecated `format` option to convert his inputs.\n\tif (typeof format === 'function') {\n\t\treturn format(value);\n\t}\n\n\treturn value;\n}\n\nfunction parse(input, scale) {\n\tif (helpers.isNullOrUndef(input)) {\n\t\treturn null;\n\t}\n\n\tvar options = scale.options.time;\n\tvar value = momentify(scale.getRightValue(input), options);\n\tif (!value.isValid()) {\n\t\treturn null;\n\t}\n\n\tif (options.round) {\n\t\tvalue.startOf(options.round);\n\t}\n\n\treturn value.valueOf();\n}\n\n/**\n * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n */\nfunction determineStepSize(min, max, unit, capacity) {\n\tvar range = max - min;\n\tvar interval = INTERVALS[unit];\n\tvar milliseconds = interval.size;\n\tvar steps = interval.steps;\n\tvar i, ilen, factor;\n\n\tif (!steps) {\n\t\treturn Math.ceil(range / (capacity * milliseconds));\n\t}\n\n\tfor (i = 0, ilen = steps.length; i < ilen; ++i) {\n\t\tfactor = steps[i];\n\t\tif (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn factor;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n\tvar ilen = UNITS.length;\n\tvar i, interval, factor;\n\n\tfor (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n\t\tinterval = INTERVALS[UNITS[i]];\n\t\tfactor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n\t\tif (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n\n\treturn UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n */\nfunction determineUnitForFormatting(ticks, minUnit, min, max) {\n\tvar duration = moment.duration(moment(max).diff(moment(min)));\n\tvar ilen = UNITS.length;\n\tvar i, unit;\n\n\tfor (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n\t\tunit = UNITS[i];\n\t\tif (INTERVALS[unit].common && duration.as(unit) >= ticks.length) {\n\t\t\treturn unit;\n\t\t}\n\t}\n\n\treturn UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n\tfor (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n\t\tif (INTERVALS[UNITS[i]].common) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n}\n\n/**\n * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n * Important: this method can return ticks outside the min and max range, it's the\n * responsibility of the calling code to clamp values if needed.\n */\nfunction generate(min, max, capacity, options) {\n\tvar timeOpts = options.time;\n\tvar minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n\tvar major = determineMajorUnit(minor);\n\tvar stepSize = helpers.valueOrDefault(timeOpts.stepSize, timeOpts.unitStepSize);\n\tvar weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n\tvar majorTicksEnabled = options.ticks.major.enabled;\n\tvar interval = INTERVALS[minor];\n\tvar first = moment(min);\n\tvar last = moment(max);\n\tvar ticks = [];\n\tvar time;\n\n\tif (!stepSize) {\n\t\tstepSize = determineStepSize(min, max, minor, capacity);\n\t}\n\n\t// For 'week' unit, handle the first day of week option\n\tif (weekday) {\n\t\tfirst = first.isoWeekday(weekday);\n\t\tlast = last.isoWeekday(weekday);\n\t}\n\n\t// Align first/last ticks on unit\n\tfirst = first.startOf(weekday ? 'day' : minor);\n\tlast = last.startOf(weekday ? 'day' : minor);\n\n\t// Make sure that the last tick include max\n\tif (last < max) {\n\t\tlast.add(1, minor);\n\t}\n\n\ttime = moment(first);\n\n\tif (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n\t\t// Align the first tick on the previous `minor` unit aligned on the `major` unit:\n\t\t// we first aligned time on the previous `major` unit then add the number of full\n\t\t// stepSize there is between first and the previous major time.\n\t\ttime.startOf(major);\n\t\ttime.add(~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n\t}\n\n\tfor (; time < last; time.add(stepSize, minor)) {\n\t\tticks.push(+time);\n\t}\n\n\tticks.push(+time);\n\n\treturn ticks;\n}\n\n/**\n * Returns the right and left offsets from edges in the form of {left, right}.\n * Offsets are added when the `offset` option is true.\n */\nfunction computeOffsets(table, ticks, min, max, options) {\n\tvar left = 0;\n\tvar right = 0;\n\tvar upper, lower;\n\n\tif (options.offset && ticks.length) {\n\t\tif (!options.time.min) {\n\t\t\tupper = ticks.length > 1 ? ticks[1] : max;\n\t\t\tlower = ticks[0];\n\t\t\tleft = (\n\t\t\t\tinterpolate(table, 'time', upper, 'pos') -\n\t\t\t\tinterpolate(table, 'time', lower, 'pos')\n\t\t\t) / 2;\n\t\t}\n\t\tif (!options.time.max) {\n\t\t\tupper = ticks[ticks.length - 1];\n\t\t\tlower = ticks.length > 1 ? ticks[ticks.length - 2] : min;\n\t\t\tright = (\n\t\t\t\tinterpolate(table, 'time', upper, 'pos') -\n\t\t\t\tinterpolate(table, 'time', lower, 'pos')\n\t\t\t) / 2;\n\t\t}\n\t}\n\n\treturn {left: left, right: right};\n}\n\nfunction ticksFromTimestamps(values, majorUnit) {\n\tvar ticks = [];\n\tvar i, ilen, value, major;\n\n\tfor (i = 0, ilen = values.length; i < ilen; ++i) {\n\t\tvalue = values[i];\n\t\tmajor = majorUnit ? value === +moment(value).startOf(majorUnit) : false;\n\n\t\tticks.push({\n\t\t\tvalue: value,\n\t\t\tmajor: major\n\t\t});\n\t}\n\n\treturn ticks;\n}\n\nfunction determineLabelFormat(data, timeOpts) {\n\tvar i, momentDate, hasTime;\n\tvar ilen = data.length;\n\n\t// find the label with the most parts (milliseconds, minutes, etc.)\n\t// format all labels with the same level of detail as the most specific label\n\tfor (i = 0; i < ilen; i++) {\n\t\tmomentDate = momentify(data[i], timeOpts);\n\t\tif (momentDate.millisecond() !== 0) {\n\t\t\treturn 'MMM D, YYYY h:mm:ss.SSS a';\n\t\t}\n\t\tif (momentDate.second() !== 0 || momentDate.minute() !== 0 || momentDate.hour() !== 0) {\n\t\t\thasTime = true;\n\t\t}\n\t}\n\tif (hasTime) {\n\t\treturn 'MMM D, YYYY h:mm:ss a';\n\t}\n\treturn 'MMM D, YYYY';\n}\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'bottom',\n\n\t\t/**\n\t\t * Data distribution along the scale:\n\t\t * - 'linear': data are spread according to their time (distances can vary),\n\t\t * - 'series': data are spread at the same distance from each other.\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t * @since 2.7.0\n\t\t */\n\t\tdistribution: 'linear',\n\n\t\t/**\n\t\t * Scale boundary strategy (bypassed by min/max time options)\n\t\t * - `data`: make sure data are fully visible, ticks outside are removed\n\t\t * - `ticks`: make sure ticks are fully visible, data outside are truncated\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4556\n\t\t * @since 2.7.0\n\t\t */\n\t\tbounds: 'data',\n\n\t\ttime: {\n\t\t\tparser: false, // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n\t\t\tformat: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/\n\t\t\tunit: false, // false == automatic or override with week, month, year, etc.\n\t\t\tround: false, // none, or override with week, month, year, etc.\n\t\t\tdisplayFormat: false, // DEPRECATED\n\t\t\tisoWeekday: false, // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/\n\t\t\tminUnit: 'millisecond',\n\n\t\t\t// defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/\n\t\t\tdisplayFormats: {\n\t\t\t\tmillisecond: 'h:mm:ss.SSS a', // 11:20:01.123 AM,\n\t\t\t\tsecond: 'h:mm:ss a', // 11:20:01 AM\n\t\t\t\tminute: 'h:mm a', // 11:20 AM\n\t\t\t\thour: 'hA', // 5PM\n\t\t\t\tday: 'MMM D', // Sep 4\n\t\t\t\tweek: 'll', // Week 46, or maybe \"[W]WW - YYYY\" ?\n\t\t\t\tmonth: 'MMM YYYY', // Sept 2015\n\t\t\t\tquarter: '[Q]Q - YYYY', // Q3\n\t\t\t\tyear: 'YYYY' // 2015\n\t\t\t},\n\t\t},\n\t\tticks: {\n\t\t\tautoSkip: false,\n\n\t\t\t/**\n\t\t\t * Ticks generation input values:\n\t\t\t * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n\t\t\t * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n\t\t\t * - 'labels': generates ticks from user given `data.labels` values ONLY.\n\t\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t\t * @since 2.7.0\n\t\t\t */\n\t\t\tsource: 'auto',\n\n\t\t\tmajor: {\n\t\t\t\tenabled: false\n\t\t\t}\n\t\t}\n\t};\n\n\tvar TimeScale = Chart.Scale.extend({\n\t\tinitialize: function() {\n\t\t\tif (!moment) {\n\t\t\t\tthrow new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');\n\t\t\t}\n\n\t\t\tthis.mergeTicksOptions();\n\n\t\t\tChart.Scale.prototype.initialize.call(this);\n\t\t},\n\n\t\tupdate: function() {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\n\t\t\t// DEPRECATIONS: output a message only one time per update\n\t\t\tif (options.time && options.time.format) {\n\t\t\t\tconsole.warn('options.time.format is deprecated and replaced by options.time.parser.');\n\t\t\t}\n\n\t\t\treturn Chart.Scale.prototype.update.apply(me, arguments);\n\t\t},\n\n\t\t/**\n\t\t * Allows data to be referenced via 't' attribute\n\t\t */\n\t\tgetRightValue: function(rawValue) {\n\t\t\tif (rawValue && rawValue.t !== undefined) {\n\t\t\t\trawValue = rawValue.t;\n\t\t\t}\n\t\t\treturn Chart.Scale.prototype.getRightValue.call(this, rawValue);\n\t\t},\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar timeOpts = me.options.time;\n\t\t\tvar unit = timeOpts.unit || 'day';\n\t\t\tvar min = MAX_INTEGER;\n\t\t\tvar max = MIN_INTEGER;\n\t\t\tvar timestamps = [];\n\t\t\tvar datasets = [];\n\t\t\tvar labels = [];\n\t\t\tvar i, j, ilen, jlen, data, timestamp;\n\n\t\t\t// Convert labels to timestamps\n\t\t\tfor (i = 0, ilen = chart.data.labels.length; i < ilen; ++i) {\n\t\t\t\tlabels.push(parse(chart.data.labels[i], me));\n\t\t\t}\n\n\t\t\t// Convert data to timestamps\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\t\tdata = chart.data.datasets[i].data;\n\n\t\t\t\t\t// Let's consider that all data have the same format.\n\t\t\t\t\tif (helpers.isObject(data[0])) {\n\t\t\t\t\t\tdatasets[i] = [];\n\n\t\t\t\t\t\tfor (j = 0, jlen = data.length; j < jlen; ++j) {\n\t\t\t\t\t\t\ttimestamp = parse(data[j], me);\n\t\t\t\t\t\t\ttimestamps.push(timestamp);\n\t\t\t\t\t\t\tdatasets[i][j] = timestamp;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttimestamps.push.apply(timestamps, labels);\n\t\t\t\t\t\tdatasets[i] = labels.slice(0);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdatasets[i] = [];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (labels.length) {\n\t\t\t\t// Sort labels **after** data have been converted\n\t\t\t\tlabels = arrayUnique(labels).sort(sorter);\n\t\t\t\tmin = Math.min(min, labels[0]);\n\t\t\t\tmax = Math.max(max, labels[labels.length - 1]);\n\t\t\t}\n\n\t\t\tif (timestamps.length) {\n\t\t\t\ttimestamps = arrayUnique(timestamps).sort(sorter);\n\t\t\t\tmin = Math.min(min, timestamps[0]);\n\t\t\t\tmax = Math.max(max, timestamps[timestamps.length - 1]);\n\t\t\t}\n\n\t\t\tmin = parse(timeOpts.min, me) || min;\n\t\t\tmax = parse(timeOpts.max, me) || max;\n\n\t\t\t// In case there is no valid min/max, set limits based on unit time option\n\t\t\tmin = min === MAX_INTEGER ? +moment().startOf(unit) : min;\n\t\t\tmax = max === MIN_INTEGER ? +moment().endOf(unit) + 1 : max;\n\n\t\t\t// Make sure that max is strictly higher than min (required by the lookup table)\n\t\t\tme.min = Math.min(min, max);\n\t\t\tme.max = Math.max(min + 1, max);\n\n\t\t\t// PRIVATE\n\t\t\tme._horizontal = me.isHorizontal();\n\t\t\tme._table = [];\n\t\t\tme._timestamps = {\n\t\t\t\tdata: timestamps,\n\t\t\t\tdatasets: datasets,\n\t\t\t\tlabels: labels\n\t\t\t};\n\t\t},\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\t\t\tvar options = me.options;\n\t\t\tvar timeOpts = options.time;\n\t\t\tvar timestamps = [];\n\t\t\tvar ticks = [];\n\t\t\tvar i, ilen, timestamp;\n\n\t\t\tswitch (options.ticks.source) {\n\t\t\tcase 'data':\n\t\t\t\ttimestamps = me._timestamps.data;\n\t\t\t\tbreak;\n\t\t\tcase 'labels':\n\t\t\t\ttimestamps = me._timestamps.labels;\n\t\t\t\tbreak;\n\t\t\tcase 'auto':\n\t\t\tdefault:\n\t\t\t\ttimestamps = generate(min, max, me.getLabelCapacity(min), options);\n\t\t\t}\n\n\t\t\tif (options.bounds === 'ticks' && timestamps.length) {\n\t\t\t\tmin = timestamps[0];\n\t\t\t\tmax = timestamps[timestamps.length - 1];\n\t\t\t}\n\n\t\t\t// Enforce limits with user min/max options\n\t\t\tmin = parse(timeOpts.min, me) || min;\n\t\t\tmax = parse(timeOpts.max, me) || max;\n\n\t\t\t// Remove ticks outside the min/max range\n\t\t\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\t\t\ttimestamp = timestamps[i];\n\t\t\t\tif (timestamp >= min && timestamp <= max) {\n\t\t\t\t\tticks.push(timestamp);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.min = min;\n\t\t\tme.max = max;\n\n\t\t\t// PRIVATE\n\t\t\tme._unit = timeOpts.unit || determineUnitForFormatting(ticks, timeOpts.minUnit, me.min, me.max);\n\t\t\tme._majorUnit = determineMajorUnit(me._unit);\n\t\t\tme._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n\t\t\tme._offsets = computeOffsets(me._table, ticks, min, max, options);\n\t\t\tme._labelFormat = determineLabelFormat(me._timestamps.data, timeOpts);\n\n\t\t\treturn ticksFromTimestamps(ticks, me._majorUnit);\n\t\t},\n\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar data = me.chart.data;\n\t\t\tvar timeOpts = me.options.time;\n\t\t\tvar label = data.labels && index < data.labels.length ? data.labels[index] : '';\n\t\t\tvar value = data.datasets[datasetIndex].data[index];\n\n\t\t\tif (helpers.isObject(value)) {\n\t\t\t\tlabel = me.getRightValue(value);\n\t\t\t}\n\t\t\tif (timeOpts.tooltipFormat) {\n\t\t\t\treturn momentify(label, timeOpts).format(timeOpts.tooltipFormat);\n\t\t\t}\n\t\t\tif (typeof label === 'string') {\n\t\t\t\treturn label;\n\t\t\t}\n\n\t\t\treturn momentify(label, timeOpts).format(me._labelFormat);\n\t\t},\n\n\t\t/**\n\t\t * Function to format an individual tick mark\n\t\t * @private\n\t\t */\n\t\ttickFormatFunction: function(tick, index, ticks, formatOverride) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar time = tick.valueOf();\n\t\t\tvar formats = options.time.displayFormats;\n\t\t\tvar minorFormat = formats[me._unit];\n\t\t\tvar majorUnit = me._majorUnit;\n\t\t\tvar majorFormat = formats[majorUnit];\n\t\t\tvar majorTime = tick.clone().startOf(majorUnit).valueOf();\n\t\t\tvar majorTickOpts = options.ticks.major;\n\t\t\tvar major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n\t\t\tvar label = tick.format(formatOverride ? formatOverride : major ? majorFormat : minorFormat);\n\t\t\tvar tickOpts = major ? majorTickOpts : options.ticks.minor;\n\t\t\tvar formatter = helpers.valueOrDefault(tickOpts.callback, tickOpts.userCallback);\n\n\t\t\treturn formatter ? formatter(label, index, ticks) : label;\n\t\t},\n\n\t\tconvertTicksToLabels: function(ticks) {\n\t\t\tvar labels = [];\n\t\t\tvar i, ilen;\n\n\t\t\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\t\t\tlabels.push(this.tickFormatFunction(moment(ticks[i].value), i, ticks));\n\t\t\t}\n\n\t\t\treturn labels;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetPixelForOffset: function(time) {\n\t\t\tvar me = this;\n\t\t\tvar size = me._horizontal ? me.width : me.height;\n\t\t\tvar start = me._horizontal ? me.left : me.top;\n\t\t\tvar pos = interpolate(me._table, 'time', time, 'pos');\n\n\t\t\treturn start + size * (me._offsets.left + pos) / (me._offsets.left + 1 + me._offsets.right);\n\t\t},\n\n\t\tgetPixelForValue: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar time = null;\n\n\t\t\tif (index !== undefined && datasetIndex !== undefined) {\n\t\t\t\ttime = me._timestamps.datasets[datasetIndex][index];\n\t\t\t}\n\n\t\t\tif (time === null) {\n\t\t\t\ttime = parse(value, me);\n\t\t\t}\n\n\t\t\tif (time !== null) {\n\t\t\t\treturn me.getPixelForOffset(time);\n\t\t\t}\n\t\t},\n\n\t\tgetPixelForTick: function(index) {\n\t\t\tvar ticks = this.getTicks();\n\t\t\treturn index >= 0 && index < ticks.length ?\n\t\t\t\tthis.getPixelForOffset(ticks[index].value) :\n\t\t\t\tnull;\n\t\t},\n\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar size = me._horizontal ? me.width : me.height;\n\t\t\tvar start = me._horizontal ? me.left : me.top;\n\t\t\tvar pos = (size ? (pixel - start) / size : 0) * (me._offsets.left + 1 + me._offsets.left) - me._offsets.right;\n\t\t\tvar time = interpolate(me._table, 'pos', pos, 'time');\n\n\t\t\treturn moment(time);\n\t\t},\n\n\t\t/**\n\t\t * Crude approximation of what the label width might be\n\t\t * @private\n\t\t */\n\t\tgetLabelWidth: function(label) {\n\t\t\tvar me = this;\n\t\t\tvar ticksOpts = me.options.ticks;\n\t\t\tvar tickLabelWidth = me.ctx.measureText(label).width;\n\t\t\tvar angle = helpers.toRadians(ticksOpts.maxRotation);\n\t\t\tvar cosRotation = Math.cos(angle);\n\t\t\tvar sinRotation = Math.sin(angle);\n\t\t\tvar tickFontSize = helpers.valueOrDefault(ticksOpts.fontSize, defaults.global.defaultFontSize);\n\n\t\t\treturn (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetLabelCapacity: function(exampleTime) {\n\t\t\tvar me = this;\n\n\t\t\tvar formatOverride = me.options.time.displayFormats.millisecond;\t// Pick the longest format for guestimation\n\n\t\t\tvar exampleLabel = me.tickFormatFunction(moment(exampleTime), 0, [], formatOverride);\n\t\t\tvar tickLabelWidth = me.getLabelWidth(exampleLabel);\n\t\t\tvar innerWidth = me.isHorizontal() ? me.width : me.height;\n\n\t\t\tvar capacity = Math.floor(innerWidth / tickLabelWidth);\n\t\t\treturn capacity > 0 ? capacity : 1;\n\t\t}\n\t});\n\n\tChart.scaleService.registerScaleType('time', TimeScale, defaultConfig);\n};\n","'use strict';\n\nmodule.exports = require('./helpers.core');\nmodule.exports.easing = require('./helpers.easing');\nmodule.exports.canvas = require('./helpers.canvas');\nmodule.exports.options = require('./helpers.options');\n","'use strict';\n\nvar helpers = require('./helpers.core');\n\n/**\n * @namespace Chart.helpers.canvas\n */\nvar exports = module.exports = {\n\t/**\n\t * Clears the entire canvas associated to the given `chart`.\n\t * @param {Chart} chart - The chart for which to clear the canvas.\n\t */\n\tclear: function(chart) {\n\t\tchart.ctx.clearRect(0, 0, chart.width, chart.height);\n\t},\n\n\t/**\n\t * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n\t * given size (width, height) and the same `radius` for all corners.\n\t * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n\t * @param {Number} x - The x axis of the coordinate for the rectangle starting point.\n\t * @param {Number} y - The y axis of the coordinate for the rectangle starting point.\n\t * @param {Number} width - The rectangle's width.\n\t * @param {Number} height - The rectangle's height.\n\t * @param {Number} radius - The rounded amount (in pixels) for the four corners.\n\t * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n\t */\n\troundedRect: function(ctx, x, y, width, height, radius) {\n\t\tif (radius) {\n\t\t\tvar rx = Math.min(radius, width / 2);\n\t\t\tvar ry = Math.min(radius, height / 2);\n\n\t\t\tctx.moveTo(x + rx, y);\n\t\t\tctx.lineTo(x + width - rx, y);\n\t\t\tctx.quadraticCurveTo(x + width, y, x + width, y + ry);\n\t\t\tctx.lineTo(x + width, y + height - ry);\n\t\t\tctx.quadraticCurveTo(x + width, y + height, x + width - rx, y + height);\n\t\t\tctx.lineTo(x + rx, y + height);\n\t\t\tctx.quadraticCurveTo(x, y + height, x, y + height - ry);\n\t\t\tctx.lineTo(x, y + ry);\n\t\t\tctx.quadraticCurveTo(x, y, x + rx, y);\n\t\t} else {\n\t\t\tctx.rect(x, y, width, height);\n\t\t}\n\t},\n\n\tdrawPoint: function(ctx, style, radius, x, y) {\n\t\tvar type, edgeLength, xOffset, yOffset, height, size;\n\n\t\tif (style && typeof style === 'object') {\n\t\t\ttype = style.toString();\n\t\t\tif (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n\t\t\t\tctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (isNaN(radius) || radius <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (style) {\n\t\t// Default includes circle\n\t\tdefault:\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(x, y, radius, 0, Math.PI * 2);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'triangle':\n\t\t\tctx.beginPath();\n\t\t\tedgeLength = 3 * radius / Math.sqrt(3);\n\t\t\theight = edgeLength * Math.sqrt(3) / 2;\n\t\t\tctx.moveTo(x - edgeLength / 2, y + height / 3);\n\t\t\tctx.lineTo(x + edgeLength / 2, y + height / 3);\n\t\t\tctx.lineTo(x, y - 2 * height / 3);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'rect':\n\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\tctx.beginPath();\n\t\t\tctx.fillRect(x - size, y - size, 2 * size, 2 * size);\n\t\t\tctx.strokeRect(x - size, y - size, 2 * size, 2 * size);\n\t\t\tbreak;\n\t\tcase 'rectRounded':\n\t\t\tvar offset = radius / Math.SQRT2;\n\t\t\tvar leftX = x - offset;\n\t\t\tvar topY = y - offset;\n\t\t\tvar sideSize = Math.SQRT2 * radius;\n\t\t\tctx.beginPath();\n\t\t\tthis.roundedRect(ctx, leftX, topY, sideSize, sideSize, radius / 2);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'rectRot':\n\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x - size, y);\n\t\t\tctx.lineTo(x, y + size);\n\t\t\tctx.lineTo(x + size, y);\n\t\t\tctx.lineTo(x, y - size);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'cross':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y + radius);\n\t\t\tctx.lineTo(x, y - radius);\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'crossRot':\n\t\t\tctx.beginPath();\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x - xOffset, y + yOffset);\n\t\t\tctx.lineTo(x + xOffset, y - yOffset);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'star':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y + radius);\n\t\t\tctx.lineTo(x, y - radius);\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x - xOffset, y + yOffset);\n\t\t\tctx.lineTo(x + xOffset, y - yOffset);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'line':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'dash':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\t}\n\n\t\tctx.stroke();\n\t},\n\n\tclipArea: function(ctx, area) {\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n\t\tctx.clip();\n\t},\n\n\tunclipArea: function(ctx) {\n\t\tctx.restore();\n\t},\n\n\tlineTo: function(ctx, previous, target, flip) {\n\t\tif (target.steppedLine) {\n\t\t\tif ((target.steppedLine === 'after' && !flip) || (target.steppedLine !== 'after' && flip)) {\n\t\t\t\tctx.lineTo(previous.x, target.y);\n\t\t\t} else {\n\t\t\t\tctx.lineTo(target.x, previous.y);\n\t\t\t}\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!target.tension) {\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tctx.bezierCurveTo(\n\t\t\tflip ? previous.controlPointPreviousX : previous.controlPointNextX,\n\t\t\tflip ? previous.controlPointPreviousY : previous.controlPointNextY,\n\t\t\tflip ? target.controlPointNextX : target.controlPointPreviousX,\n\t\t\tflip ? target.controlPointNextY : target.controlPointPreviousY,\n\t\t\ttarget.x,\n\t\t\ttarget.y);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n * @namespace Chart.helpers.clear\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.clear = exports.clear;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n * @namespace Chart.helpers.drawRoundedRectangle\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.drawRoundedRectangle = function(ctx) {\n\tctx.beginPath();\n\texports.roundedRect.apply(exports, arguments);\n\tctx.closePath();\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\tChart.Scatter = function(context, config) {\n\t\tconfig.type = 'scatter';\n\t\treturn new Chart(context, config);\n\t};\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Doughnut = function(context, config) {\n\t\tconfig.type = 'doughnut';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\n/**\n * @namespace Chart.helpers\n */\nvar helpers = {\n\t/**\n\t * An empty function that can be used, for example, for optional callback.\n\t */\n\tnoop: function() {},\n\n\t/**\n\t * Returns a unique id, sequentially generated from a global variable.\n\t * @returns {Number}\n\t * @function\n\t */\n\tuid: (function() {\n\t\tvar id = 0;\n\t\treturn function() {\n\t\t\treturn id++;\n\t\t};\n\t}()),\n\n\t/**\n\t * Returns true if `value` is neither null nor undefined, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @since 2.7.0\n\t */\n\tisNullOrUndef: function(value) {\n\t\treturn value === null || typeof value === 'undefined';\n\t},\n\n\t/**\n\t * Returns true if `value` is an array, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @function\n\t */\n\tisArray: Array.isArray ? Array.isArray : function(value) {\n\t\treturn Object.prototype.toString.call(value) === '[object Array]';\n\t},\n\n\t/**\n\t * Returns true if `value` is an object (excluding null), else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @since 2.7.0\n\t */\n\tisObject: function(value) {\n\t\treturn value !== null && Object.prototype.toString.call(value) === '[object Object]';\n\t},\n\n\t/**\n\t * Returns `value` if defined, else returns `defaultValue`.\n\t * @param {*} value - The value to return if defined.\n\t * @param {*} defaultValue - The value to return if `value` is undefined.\n\t * @returns {*}\n\t */\n\tvalueOrDefault: function(value, defaultValue) {\n\t\treturn typeof value === 'undefined' ? defaultValue : value;\n\t},\n\n\t/**\n\t * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n\t * @param {Array} value - The array to lookup for value at `index`.\n\t * @param {Number} index - The index in `value` to lookup for value.\n\t * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n\t * @returns {*}\n\t */\n\tvalueAtIndexOrDefault: function(value, index, defaultValue) {\n\t\treturn helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n\t},\n\n\t/**\n\t * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n\t * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n\t * @param {Function} fn - The function to call.\n\t * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n\t * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @returns {*}\n\t */\n\tcallback: function(fn, args, thisArg) {\n\t\tif (fn && typeof fn.call === 'function') {\n\t\t\treturn fn.apply(thisArg, args);\n\t\t}\n\t},\n\n\t/**\n\t * Note(SB) for performance sake, this method should only be used when loopable type\n\t * is unknown or in none intensive code (not called often and small loopable). Else\n\t * it's preferable to use a regular for() loop and save extra function calls.\n\t * @param {Object|Array} loopable - The object or array to be iterated.\n\t * @param {Function} fn - The function to call for each item.\n\t * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @param {Boolean} [reverse] - If true, iterates backward on the loopable.\n\t */\n\teach: function(loopable, fn, thisArg, reverse) {\n\t\tvar i, len, keys;\n\t\tif (helpers.isArray(loopable)) {\n\t\t\tlen = loopable.length;\n\t\t\tif (reverse) {\n\t\t\t\tfor (i = len - 1; i >= 0; i--) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (helpers.isObject(loopable)) {\n\t\t\tkeys = Object.keys(loopable);\n\t\t\tlen = keys.length;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tfn.call(thisArg, loopable[keys[i]], keys[i]);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n\t * @see http://stackoverflow.com/a/14853974\n\t * @param {Array} a0 - The array to compare\n\t * @param {Array} a1 - The array to compare\n\t * @returns {Boolean}\n\t */\n\tarrayEquals: function(a0, a1) {\n\t\tvar i, ilen, v0, v1;\n\n\t\tif (!a0 || !a1 || a0.length !== a1.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (i = 0, ilen = a0.length; i < ilen; ++i) {\n\t\t\tv0 = a0[i];\n\t\t\tv1 = a1[i];\n\n\t\t\tif (v0 instanceof Array && v1 instanceof Array) {\n\t\t\t\tif (!helpers.arrayEquals(v0, v1)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if (v0 !== v1) {\n\t\t\t\t// NOTE: two different object instances will never be equal: {x:20} != {x:20}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns a deep copy of `source` without keeping references on objects and arrays.\n\t * @param {*} source - The value to clone.\n\t * @returns {*}\n\t */\n\tclone: function(source) {\n\t\tif (helpers.isArray(source)) {\n\t\t\treturn source.map(helpers.clone);\n\t\t}\n\n\t\tif (helpers.isObject(source)) {\n\t\t\tvar target = {};\n\t\t\tvar keys = Object.keys(source);\n\t\t\tvar klen = keys.length;\n\t\t\tvar k = 0;\n\n\t\t\tfor (; k < klen; ++k) {\n\t\t\t\ttarget[keys[k]] = helpers.clone(source[keys[k]]);\n\t\t\t}\n\n\t\t\treturn target;\n\t\t}\n\n\t\treturn source;\n\t},\n\n\t/**\n\t * The default merger when Chart.helpers.merge is called without merger option.\n\t * Note(SB): this method is also used by configMerge and scaleMerge as fallback.\n\t * @private\n\t */\n\t_merger: function(key, target, source, options) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.merge(tval, sval, options);\n\t\t} else {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Merges source[key] in target[key] only if target[key] is undefined.\n\t * @private\n\t */\n\t_mergerIf: function(key, target, source) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.mergeIf(tval, sval);\n\t\t} else if (!target.hasOwnProperty(key)) {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` with the given `options`.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {Object} target - The target object in which all sources are merged into.\n\t * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n\t * @param {Object} [options] - Merging options:\n\t * @param {Function} [options.merger] - The merge method (key, target, source, options)\n\t * @returns {Object} The `target` object.\n\t */\n\tmerge: function(target, source, options) {\n\t\tvar sources = helpers.isArray(source) ? source : [source];\n\t\tvar ilen = sources.length;\n\t\tvar merge, i, keys, klen, k;\n\n\t\tif (!helpers.isObject(target)) {\n\t\t\treturn target;\n\t\t}\n\n\t\toptions = options || {};\n\t\tmerge = options.merger || helpers._merger;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!helpers.isObject(source)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tkeys = Object.keys(source);\n\t\t\tfor (k = 0, klen = keys.length; k < klen; ++k) {\n\t\t\t\tmerge(keys[k], target, source, options);\n\t\t\t}\n\t\t}\n\n\t\treturn target;\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {Object} target - The target object in which all sources are merged into.\n\t * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n\t * @returns {Object} The `target` object.\n\t */\n\tmergeIf: function(target, source) {\n\t\treturn helpers.merge(target, source, {merger: helpers._mergerIf});\n\t},\n\n\t/**\n\t * Applies the contents of two or more objects together into the first object.\n\t * @param {Object} target - The target object in which all objects are merged into.\n\t * @param {Object} arg1 - Object containing additional properties to merge in target.\n\t * @param {Object} argN - Additional objects containing properties to merge in target.\n\t * @returns {Object} The `target` object.\n\t */\n\textend: function(target) {\n\t\tvar setFn = function(value, key) {\n\t\t\ttarget[key] = value;\n\t\t};\n\t\tfor (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n\t\t\thelpers.each(arguments[i], setFn);\n\t\t}\n\t\treturn target;\n\t},\n\n\t/**\n\t * Basic javascript inheritance based on the model created in Backbone.js\n\t */\n\tinherits: function(extensions) {\n\t\tvar me = this;\n\t\tvar ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {\n\t\t\treturn me.apply(this, arguments);\n\t\t};\n\n\t\tvar Surrogate = function() {\n\t\t\tthis.constructor = ChartElement;\n\t\t};\n\n\t\tSurrogate.prototype = me.prototype;\n\t\tChartElement.prototype = new Surrogate();\n\t\tChartElement.extend = helpers.inherits;\n\n\t\tif (extensions) {\n\t\t\thelpers.extend(ChartElement.prototype, extensions);\n\t\t}\n\n\t\tChartElement.__super__ = me.prototype;\n\t\treturn ChartElement;\n\t}\n};\n\nmodule.exports = helpers;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.callback instead.\n * @function Chart.helpers.callCallback\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nhelpers.callCallback = helpers.callback;\n\n/**\n * Provided for backward compatibility, use Array.prototype.indexOf instead.\n * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n * @function Chart.helpers.indexOf\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.indexOf = function(array, item, fromIndex) {\n\treturn Array.prototype.indexOf.call(array, item, fromIndex);\n};\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n * @function Chart.helpers.getValueOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueOrDefault = helpers.valueOrDefault;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n * @function Chart.helpers.getValueAtIndexOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarChart.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarChart.vue?vue&type=style&index=0&lang=css&\"","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\n\nvar globalDefaults = defaults.global;\n\ndefaults._set('global', {\n\telements: {\n\t\tline: {\n\t\t\ttension: 0.4,\n\t\t\tbackgroundColor: globalDefaults.defaultColor,\n\t\t\tborderWidth: 3,\n\t\t\tborderColor: globalDefaults.defaultColor,\n\t\t\tborderCapStyle: 'butt',\n\t\t\tborderDash: [],\n\t\t\tborderDashOffset: 0.0,\n\t\t\tborderJoinStyle: 'miter',\n\t\t\tcapBezierPoints: true,\n\t\t\tfill: true, // do we fill in the area between the line and its base axis\n\t\t}\n\t}\n});\n\nmodule.exports = Element.extend({\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar vm = me._view;\n\t\tvar ctx = me._chart.ctx;\n\t\tvar spanGaps = vm.spanGaps;\n\t\tvar points = me._children.slice(); // clone array\n\t\tvar globalOptionLineElements = globalDefaults.elements.line;\n\t\tvar lastDrawnIndex = -1;\n\t\tvar index, current, previous, currentVM;\n\n\t\t// If we are looping, adding the first point again\n\t\tif (me._loop && points.length) {\n\t\t\tpoints.push(points[0]);\n\t\t}\n\n\t\tctx.save();\n\n\t\t// Stroke Line Options\n\t\tctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\n\n\t\t// IE 9 and 10 do not support line dash\n\t\tif (ctx.setLineDash) {\n\t\t\tctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n\t\t}\n\n\t\tctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\n\t\tctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n\t\tctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\n\t\tctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\n\n\t\t// Stroke Line\n\t\tctx.beginPath();\n\t\tlastDrawnIndex = -1;\n\n\t\tfor (index = 0; index < points.length; ++index) {\n\t\t\tcurrent = points[index];\n\t\t\tprevious = helpers.previousItem(points, index);\n\t\t\tcurrentVM = current._view;\n\n\t\t\t// First point moves to it's starting position no matter what\n\t\t\tif (index === 0) {\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprevious = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tif ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {\n\t\t\t\t\t\t// There was a gap and this is the first point after the gap\n\t\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Line to next point\n\t\t\t\t\t\thelpers.canvas.lineTo(ctx, previous._view, current._view);\n\t\t\t\t\t}\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tctx.stroke();\n\t\tctx.restore();\n\t}\n});\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\tplugins: {}\n});\n\n/**\n * The plugin service singleton\n * @namespace Chart.plugins\n * @since 2.1.0\n */\nmodule.exports = {\n\t/**\n\t * Globally registered plugins.\n\t * @private\n\t */\n\t_plugins: [],\n\n\t/**\n\t * This identifier is used to invalidate the descriptors cache attached to each chart\n\t * when a global plugin is registered or unregistered. In this case, the cache ID is\n\t * incremented and descriptors are regenerated during following API calls.\n\t * @private\n\t */\n\t_cacheId: 0,\n\n\t/**\n\t * Registers the given plugin(s) if not already registered.\n\t * @param {Array|Object} plugins plugin instance(s).\n\t */\n\tregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tif (p.indexOf(plugin) === -1) {\n\t\t\t\tp.push(plugin);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Unregisters the given plugin(s) only if registered.\n\t * @param {Array|Object} plugins plugin instance(s).\n\t */\n\tunregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tvar idx = p.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\tp.splice(idx, 1);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Remove all registered plugins.\n\t * @since 2.1.5\n\t */\n\tclear: function() {\n\t\tthis._plugins = [];\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Returns the number of registered plugins?\n\t * @returns {Number}\n\t * @since 2.1.5\n\t */\n\tcount: function() {\n\t\treturn this._plugins.length;\n\t},\n\n\t/**\n\t * Returns all registered plugin instances.\n\t * @returns {Array} array of plugin objects.\n\t * @since 2.1.5\n\t */\n\tgetAll: function() {\n\t\treturn this._plugins;\n\t},\n\n\t/**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Object} chart - The chart instance for which plugins should be called.\n\t * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Array} [args] - Extra arguments to apply to the hook call.\n\t * @returns {Boolean} false if any of the plugins return false, else returns true.\n\t */\n\tnotify: function(chart, hook, args) {\n\t\tvar descriptors = this.descriptors(chart);\n\t\tvar ilen = descriptors.length;\n\t\tvar i, descriptor, plugin, params, method;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tdescriptor = descriptors[i];\n\t\t\tplugin = descriptor.plugin;\n\t\t\tmethod = plugin[hook];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\tparams = [chart].concat(args || []);\n\t\t\t\tparams.push(descriptor.options);\n\t\t\t\tif (method.apply(plugin, params) === false) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns descriptors of enabled plugins for the given chart.\n\t * @returns {Array} [{ plugin, options }]\n\t * @private\n\t */\n\tdescriptors: function(chart) {\n\t\tvar cache = chart.$plugins || (chart.$plugins = {});\n\t\tif (cache.id === this._cacheId) {\n\t\t\treturn cache.descriptors;\n\t\t}\n\n\t\tvar plugins = [];\n\t\tvar descriptors = [];\n\t\tvar config = (chart && chart.config) || {};\n\t\tvar options = (config.options && config.options.plugins) || {};\n\n\t\tthis._plugins.concat(config.plugins || []).forEach(function(plugin) {\n\t\t\tvar idx = plugins.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar id = plugin.id;\n\t\t\tvar opts = options[id];\n\t\t\tif (opts === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (opts === true) {\n\t\t\t\topts = helpers.clone(defaults.global.plugins[id]);\n\t\t\t}\n\n\t\t\tplugins.push(plugin);\n\t\t\tdescriptors.push({\n\t\t\t\tplugin: plugin,\n\t\t\t\toptions: opts || {}\n\t\t\t});\n\t\t});\n\n\t\tcache.descriptors = descriptors;\n\t\tcache.id = this._cacheId;\n\t\treturn descriptors;\n\t},\n\n\t/**\n\t * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n\t * but in some cases, this reference can be changed by the user when updating options.\n\t * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t * @private\n\t */\n\t_invalidate: function(chart) {\n\t\tdelete chart.$plugins;\n\t}\n};\n\n/**\n * Plugin extension hooks.\n * @interface IPlugin\n * @since 2.1.0\n */\n/**\n * @method IPlugin#beforeInit\n * @desc Called before initializing `chart`.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#afterInit\n * @desc Called after `chart` has been initialized and before the first update.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeUpdate\n * @desc Called before updating `chart`. If any plugin returns `false`, the update\n * is cancelled (and thus subsequent render(s)) until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart update.\n */\n/**\n * @method IPlugin#afterUpdate\n * @desc Called after `chart` has been updated and before rendering. Note that this\n * hook will not be called if the chart update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetsUpdate\n * @desc Called before updating the `chart` datasets. If any plugin returns `false`,\n * the datasets update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} false to cancel the datasets update.\n * @since version 2.1.5\n*/\n/**\n * @method IPlugin#afterDatasetsUpdate\n * @desc Called after the `chart` datasets have been updated. Note that this hook\n * will not be called if the datasets update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @since version 2.1.5\n */\n/**\n * @method IPlugin#beforeDatasetUpdate\n * @desc Called before updating the `chart` dataset at the given `args.index`. If any plugin\n * returns `false`, the datasets update is cancelled until another `update` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetUpdate\n * @desc Called after the `chart` datasets at the given `args.index` has been updated. Note\n * that this hook will not be called if the datasets update has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeLayout\n * @desc Called before laying out `chart`. If any plugin returns `false`,\n * the layout update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart layout.\n */\n/**\n * @method IPlugin#afterLayout\n * @desc Called after the `chart` has been layed out. Note that this hook will not\n * be called if the layout update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeRender\n * @desc Called before rendering `chart`. If any plugin returns `false`,\n * the rendering is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart rendering.\n */\n/**\n * @method IPlugin#afterRender\n * @desc Called after the `chart` has been fully rendered (and animation completed). Note\n * that this hook will not be called if the rendering has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDraw\n * @desc Called before drawing `chart` at every animation frame specified by the given\n * easing value. If any plugin returns `false`, the frame drawing is cancelled until\n * another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart drawing.\n */\n/**\n * @method IPlugin#afterDraw\n * @desc Called after the `chart` has been drawn for the specific easing value. Note\n * that this hook will not be called if the drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetsDraw\n * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,\n * the datasets drawing is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetsDraw\n * @desc Called after the `chart` datasets have been drawn. Note that this hook\n * will not be called if the datasets drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetDraw\n * @desc Called before drawing the `chart` dataset at the given `args.index` (datasets\n * are drawn in the reverse order). If any plugin returns `false`, the datasets drawing\n * is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetDraw\n * @desc Called after the `chart` datasets at the given `args.index` have been drawn\n * (datasets are drawn in the reverse order). Note that this hook will not be called\n * if the datasets drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeTooltipDraw\n * @desc Called before drawing the `tooltip`. If any plugin returns `false`,\n * the tooltip drawing is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart tooltip drawing.\n */\n/**\n * @method IPlugin#afterTooltipDraw\n * @desc Called after drawing the `tooltip`. Note that this hook will not\n * be called if the tooltip drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeEvent\n * @desc Called before processing the specified `event`. If any plugin returns `false`,\n * the event will be discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#afterEvent\n * @desc Called after the `event` has been consumed. Note that this hook\n * will not be called if the `event` has been previously discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#resize\n * @desc Called after the chart as been resized.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} size - The new canvas display size (eq. canvas.style width & height).\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#destroy\n * @desc Called after the chart as been destroyed.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LineChart.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LineChart.vue?vue&type=style&index=0&lang=css&\"","/**\n * @namespace Chart\n */\nvar Chart = require('./core/core')();\n\nChart.helpers = require('./helpers/index');\n\n// @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\nrequire('./core/core.helpers')(Chart);\n\nChart.defaults = require('./core/core.defaults');\nChart.Element = require('./core/core.element');\nChart.elements = require('./elements/index');\nChart.Interaction = require('./core/core.interaction');\nChart.layouts = require('./core/core.layouts');\nChart.platform = require('./platforms/platform');\nChart.plugins = require('./core/core.plugins');\nChart.Ticks = require('./core/core.ticks');\n\nrequire('./core/core.animation')(Chart);\nrequire('./core/core.controller')(Chart);\nrequire('./core/core.datasetController')(Chart);\nrequire('./core/core.scaleService')(Chart);\nrequire('./core/core.scale')(Chart);\nrequire('./core/core.tooltip')(Chart);\n\nrequire('./scales/scale.linearbase')(Chart);\nrequire('./scales/scale.category')(Chart);\nrequire('./scales/scale.linear')(Chart);\nrequire('./scales/scale.logarithmic')(Chart);\nrequire('./scales/scale.radialLinear')(Chart);\nrequire('./scales/scale.time')(Chart);\n\n// Controllers must be loaded after elements\n// See Chart.core.datasetController.dataElementType\nrequire('./controllers/controller.bar')(Chart);\nrequire('./controllers/controller.bubble')(Chart);\nrequire('./controllers/controller.doughnut')(Chart);\nrequire('./controllers/controller.line')(Chart);\nrequire('./controllers/controller.polarArea')(Chart);\nrequire('./controllers/controller.radar')(Chart);\nrequire('./controllers/controller.scatter')(Chart);\n\nrequire('./charts/Chart.Bar')(Chart);\nrequire('./charts/Chart.Bubble')(Chart);\nrequire('./charts/Chart.Doughnut')(Chart);\nrequire('./charts/Chart.Line')(Chart);\nrequire('./charts/Chart.PolarArea')(Chart);\nrequire('./charts/Chart.Radar')(Chart);\nrequire('./charts/Chart.Scatter')(Chart);\n\n// Loading built-it plugins\nvar plugins = require('./plugins');\nfor (var k in plugins) {\n\tif (plugins.hasOwnProperty(k)) {\n\t\tChart.plugins.register(plugins[k]);\n\t}\n}\n\nChart.platform.initialize();\n\nmodule.exports = Chart;\nif (typeof window !== 'undefined') {\n\twindow.Chart = Chart;\n}\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Legend\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.Legend = plugins.legend._element;\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Title\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.Title = plugins.title._element;\n\n/**\n * Provided for backward compatibility, use Chart.plugins instead\n * @namespace Chart.pluginService\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.pluginService = Chart.plugins;\n\n/**\n * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n * effect, instead simply create/register plugins via plain JavaScript objects.\n * @interface Chart.PluginBase\n * @deprecated since version 2.5.0\n * @todo remove at version 3\n * @private\n */\nChart.PluginBase = Chart.Element.extend({});\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas instead.\n * @namespace Chart.canvasHelpers\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nChart.canvasHelpers = Chart.helpers.canvas;\n\n/**\n * Provided for backward compatibility, use Chart.layouts instead.\n * @namespace Chart.layoutService\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\nChart.layoutService = Chart.layouts;\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('doughnut', {\n\tanimation: {\n\t\t// Boolean - Whether we animate the rotation of the Doughnut\n\t\tanimateRotate: true,\n\t\t// Boolean - Whether we animate scaling the Doughnut from the centre\n\t\tanimateScale: false\n\t},\n\thover: {\n\t\tmode: 'single'\n\t},\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc && arc.custom || {};\n\t\t\t\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t// toggle visibility of index if exists\n\t\t\t\tif (meta.data[index]) {\n\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// The percentage of the chart that we cut out of the middle.\n\tcutoutPercentage: 50,\n\n\t// The rotation of the chart, where the first data arc begins.\n\trotation: Math.PI * -0.5,\n\n\t// The total circumference of the chart.\n\tcircumference: Math.PI * 2.0,\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar dataLabel = data.labels[tooltipItem.index];\n\t\t\t\tvar value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n\t\t\t\tif (helpers.isArray(dataLabel)) {\n\t\t\t\t\t// show value on first line of multiline label\n\t\t\t\t\t// need to clone because we are changing the value\n\t\t\t\t\tdataLabel = dataLabel.slice();\n\t\t\t\t\tdataLabel[0] += value;\n\t\t\t\t} else {\n\t\t\t\t\tdataLabel += value;\n\t\t\t\t}\n\n\t\t\t\treturn dataLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\ndefaults._set('pie', helpers.clone(defaults.doughnut));\ndefaults._set('pie', {\n\tcutoutPercentage: 0\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Arc,\n\n\t\tlinkScales: helpers.noop,\n\n\t\t// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n\t\tgetRingIndex: function(datasetIndex) {\n\t\t\tvar ringIndex = 0;\n\n\t\t\tfor (var j = 0; j < datasetIndex; ++j) {\n\t\t\t\tif (this.chart.isDatasetVisible(j)) {\n\t\t\t\t\t++ringIndex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn ringIndex;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar opts = chart.options;\n\t\t\tvar arcOpts = opts.elements.arc;\n\t\t\tvar availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth;\n\t\t\tvar availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth;\n\t\t\tvar minSize = Math.min(availableWidth, availableHeight);\n\t\t\tvar offset = {x: 0, y: 0};\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar cutoutPercentage = opts.cutoutPercentage;\n\t\t\tvar circumference = opts.circumference;\n\n\t\t\t// If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\t\t\tif (circumference < Math.PI * 2.0) {\n\t\t\t\tvar startAngle = opts.rotation % (Math.PI * 2.0);\n\t\t\t\tstartAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n\t\t\t\tvar endAngle = startAngle + circumference;\n\t\t\t\tvar start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};\n\t\t\t\tvar end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};\n\t\t\t\tvar contains0 = (startAngle <= 0 && endAngle >= 0) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\n\t\t\t\tvar contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\n\t\t\t\tvar contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\n\t\t\t\tvar contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\n\t\t\t\tvar cutout = cutoutPercentage / 100.0;\n\t\t\t\tvar min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};\n\t\t\t\tvar max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};\n\t\t\t\tvar size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};\n\t\t\t\tminSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n\t\t\t\toffset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};\n\t\t\t}\n\n\t\t\tchart.borderWidth = me.getMaxBorderWidth(meta.data);\n\t\t\tchart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\t\t\tchart.offsetX = offset.x * chart.outerRadius;\n\t\t\tchart.offsetY = offset.y * chart.outerRadius;\n\n\t\t\tmeta.total = me.calculateTotal();\n\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.getRingIndex(me.index));\n\t\t\tme.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\n\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar opts = chart.options;\n\t\t\tvar animationOpts = opts.animation;\n\t\t\tvar centerX = (chartArea.left + chartArea.right) / 2;\n\t\t\tvar centerY = (chartArea.top + chartArea.bottom) / 2;\n\t\t\tvar startAngle = opts.rotation; // non reset case handled later\n\t\t\tvar endAngle = opts.rotation; // non reset case handled later\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n\t\t\tvar innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n\t\t\tvar outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX + chart.offsetX,\n\t\t\t\t\ty: centerY + chart.offsetY,\n\t\t\t\t\tstartAngle: startAngle,\n\t\t\t\t\tendAngle: endAngle,\n\t\t\t\t\tcircumference: circumference,\n\t\t\t\t\touterRadius: outerRadius,\n\t\t\t\t\tinnerRadius: innerRadius,\n\t\t\t\t\tlabel: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tvar model = arc._model;\n\t\t\t// Resets the visual styles\n\t\t\tthis.removeHoverStyle(arc);\n\n\t\t\t// Set correct angles if not resetting\n\t\t\tif (!reset || !animationOpts.animateRotate) {\n\t\t\t\tif (index === 0) {\n\t\t\t\t\tmodel.startAngle = opts.rotation;\n\t\t\t\t} else {\n\t\t\t\t\tmodel.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n\t\t\t\t}\n\n\t\t\t\tmodel.endAngle = model.startAngle + model.circumference;\n\t\t\t}\n\n\t\t\tarc.pivot();\n\t\t},\n\n\t\tremoveHoverStyle: function(arc) {\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\n\t\t},\n\n\t\tcalculateTotal: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar total = 0;\n\t\t\tvar value;\n\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tvalue = dataset.data[index];\n\t\t\t\tif (!isNaN(value) && !element.hidden) {\n\t\t\t\t\ttotal += Math.abs(value);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t/* if (total === 0) {\n\t\t\t\ttotal = NaN;\n\t\t\t}*/\n\n\t\t\treturn total;\n\t\t},\n\n\t\tcalculateCircumference: function(value) {\n\t\t\tvar total = this.getMeta().total;\n\t\t\tif (total > 0 && !isNaN(value)) {\n\t\t\t\treturn (Math.PI * 2.0) * (Math.abs(value) / total);\n\t\t\t}\n\t\t\treturn 0;\n\t\t},\n\n\t\t// gets the max border or hover width to properly scale pie charts\n\t\tgetMaxBorderWidth: function(arcs) {\n\t\t\tvar max = 0;\n\t\t\tvar index = this.index;\n\t\t\tvar length = arcs.length;\n\t\t\tvar borderWidth;\n\t\t\tvar hoverWidth;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tborderWidth = arcs[i]._model ? arcs[i]._model.borderWidth : 0;\n\t\t\t\thoverWidth = arcs[i]._chart ? arcs[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\n\n\t\t\t\tmax = borderWidth > max ? borderWidth : max;\n\t\t\t\tmax = hoverWidth > max ? hoverWidth : max;\n\t\t\t}\n\t\t\treturn max;\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\telements: {\n\t\tarc: {\n\t\t\tbackgroundColor: defaults.global.defaultColor,\n\t\t\tborderColor: '#fff',\n\t\t\tborderWidth: 2\n\t\t}\n\t}\n});\n\nmodule.exports = Element.extend({\n\tinLabelRange: function(mouseX) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\treturn (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\n\t\t}\n\t\treturn false;\n\t},\n\n\tinRange: function(chartX, chartY) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\tvar pointRelativePosition = helpers.getAngleFromPoint(vm, {x: chartX, y: chartY});\n\t\t\tvar\tangle = pointRelativePosition.angle;\n\t\t\tvar distance = pointRelativePosition.distance;\n\n\t\t\t// Sanitise angle range\n\t\t\tvar startAngle = vm.startAngle;\n\t\t\tvar endAngle = vm.endAngle;\n\t\t\twhile (endAngle < startAngle) {\n\t\t\t\tendAngle += 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle > endAngle) {\n\t\t\t\tangle -= 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle < startAngle) {\n\t\t\t\tangle += 2.0 * Math.PI;\n\t\t\t}\n\n\t\t\t// Check if within the range of the open/close angle\n\t\t\tvar betweenAngles = (angle >= startAngle && angle <= endAngle);\n\t\t\tvar withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\n\n\t\t\treturn (betweenAngles && withinRadius);\n\t\t}\n\t\treturn false;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar halfAngle = (vm.startAngle + vm.endAngle) / 2;\n\t\tvar halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n\t\treturn {\n\t\t\tx: vm.x + Math.cos(halfAngle) * halfRadius,\n\t\t\ty: vm.y + Math.sin(halfAngle) * halfRadius\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\tvar centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2);\n\t\tvar rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n\n\t\treturn {\n\t\t\tx: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\n\t\t\ty: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\n\t\t};\n\t},\n\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar sA = vm.startAngle;\n\t\tvar eA = vm.endAngle;\n\n\t\tctx.beginPath();\n\n\t\tctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n\t\tctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n\n\t\tctx.closePath();\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = vm.borderWidth;\n\n\t\tctx.fillStyle = vm.backgroundColor;\n\n\t\tctx.fill();\n\t\tctx.lineJoin = 'bevel';\n\n\t\tif (vm.borderWidth) {\n\t\t\tctx.stroke();\n\t\t}\n\t}\n});\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('l-map',{staticClass:\"oehu-map\",attrs:{\"zoom\":_vm.map.zoom,\"center\":_vm.map.center,\"options\":{zoomControl: true, touchZoom: true, scrollWheelZoom: false, doubleClickZoom: true, boxZoom: true}},on:{\"update:center\":_vm.centerUpdate,\"update:zoom\":_vm.zoomUpdate}},[_c('l-tile-layer',{attrs:{\"url\":_vm.map.url,\"attribution\":_vm.map.attribution}}),_vm._l((_vm.markers),function(marker){return _c('l-marker',{key:marker.id,attrs:{\"icon\":_vm.LIcon,\"lat-lng\":marker.position}},[_c('LTooltip',{attrs:{\"content\":marker.tooltip}})],1)})],2)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <l-map\n                class=\"oehu-map\"\n                :zoom=\"map.zoom\"\n                :center=\"map.center\"\n                :options=\"{zoomControl: true, touchZoom: true, scrollWheelZoom: false, doubleClickZoom: true, boxZoom: true}\"\n                @update:center=\"centerUpdate\"\n                @update:zoom=\"zoomUpdate\">\n            <l-tile-layer :url=\"map.url\" :attribution=\"map.attribution\"/>\n            <l-marker\n                    v-for=\"marker in markers\"\n                    :key=\"marker.id\"\n                    :icon=\"LIcon\"\n                    :lat-lng=\"marker.position\">\n                <!--<l-popup :content=\"marker.tooltip\" />-->\n                <LTooltip :content=\"marker.tooltip\"/>\n            </l-marker>\n        </l-map>\n    </div>\n</template>\n\n<script>\n    import {LMap, LTileLayer, LMarker, LTooltip} from 'vue2-leaflet';\n    import L from 'leaflet';\n\n    export default {\n        name: 'Map',\n        components: {\n            LMap,\n            LTileLayer,\n            LMarker,\n            LTooltip\n        },\n        props: ['markers'],\n        data() {\n            return {\n                map: {\n                    zoom: 7,\n                    currentZoom: 10,\n                    center: {lat: 52.0182305, lng: 4.6910549},\n                    currentCenter: {lat: 52.0182305, lng: 4.6910549},\n                    url: 'https://stamen-tiles-{s}.a.ssl.fastly.net/toner/{z}/{x}/{y}{r}.png',\n                    attribution: '&copy; <a target=\"_blank\" href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n                },\n                LIcon: L.icon({\n                    iconUrl: '/marker-icon.png',\n                    iconRetinaUrl: '/marker-icon-2x.png',\n                    iconSize: [50, 50],\n                    iconAnchor: [25, 25],\n                    popupAnchor: [0, 0],\n                })\n            }\n        },\n        methods: {\n            zoomUpdate(zoom) {\n                this.map.currentZoom = zoom;\n            },\n            centerUpdate(center) {\n                this.map.currentCenter = center;\n            },\n        },\n    }\n</script>\n\n<style scoped lang=\"scss\">\n    @import '../../assets/sass/mix.scss';\n\n    .oehu-map {\n        margin: 0 auto;\n        width: 100%;\n        overflow: hidden;\n        height: 400px;\n        z-index: 8;\n        position: relative;\n\n        @include mobile() {\n            width: 90%;\n        }\n    }\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Map.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Map.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Map.vue?vue&type=template&id=c31ff5d0&scoped=true&\"\nimport script from \"./Map.vue?vue&type=script&lang=js&\"\nexport * from \"./Map.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Map.vue?vue&type=style&index=0&id=c31ff5d0&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"c31ff5d0\",\n  null\n  \n)\n\ncomponent.options.__file = \"Map.vue\"\nexport default component.exports","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar helpers = require('../helpers/index');\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\t\tticks: {\n\t\t\tcallback: Ticks.formatters.linear\n\t\t}\n\t};\n\n\tvar LinearScale = Chart.LinearScaleBase.extend({\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar DEFAULT_MIN = 0;\n\t\t\tvar DEFAULT_MAX = 1;\n\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\n\t\t\t// First Calculate the range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\n\t\t\tvar hasStacks = opts.stacked;\n\t\t\tif (hasStacks === undefined) {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tif (hasStacks) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\t\thasStacks = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (opts.stacked || hasStacks) {\n\t\t\t\tvar valuesPerStack = {};\n\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tvar key = [\n\t\t\t\t\t\tmeta.type,\n\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\t\tmeta.stack\n\t\t\t\t\t].join('.');\n\n\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\tvaluesPerStack[key] = {\n\t\t\t\t\t\t\tpositiveValues: [],\n\t\t\t\t\t\t\tnegativeValues: []\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store these per type\n\t\t\t\t\tvar positiveValues = valuesPerStack[key].positiveValues;\n\t\t\t\t\tvar negativeValues = valuesPerStack[key].negativeValues;\n\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tpositiveValues[index] = positiveValues[index] || 0;\n\t\t\t\t\t\t\tnegativeValues[index] = negativeValues[index] || 0;\n\n\t\t\t\t\t\t\tif (opts.relativePoints) {\n\t\t\t\t\t\t\t\tpositiveValues[index] = 100;\n\t\t\t\t\t\t\t} else if (value < 0) {\n\t\t\t\t\t\t\t\tnegativeValues[index] += value;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tpositiveValues[index] += value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\n\t\t\t\t\tvar values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n\t\t\t\t\tvar minVal = helpers.min(values);\n\t\t\t\t\tvar maxVal = helpers.max(values);\n\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n\t\t\tme.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX;\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tthis.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar maxTicks;\n\t\t\tvar me = this;\n\t\t\tvar tickOpts = me.options.ticks;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\n\t\t\t} else {\n\t\t\t\t// The factor of 2 used to scale the font size has been experimentally determined.\n\t\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize);\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\n\t\t\t}\n\n\t\t\treturn maxTicks;\n\t\t},\n\t\t// Called after the ticks are built. We need\n\t\thandleDirectionalChanges: function() {\n\t\t\tif (!this.isHorizontal()) {\n\t\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\n\t\t\t\tthis.ticks.reverse();\n\t\t\t}\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\t// Utils\n\t\tgetPixelForValue: function(value) {\n\t\t\t// This must be called after fit has been run so that\n\t\t\t// this.left, this.top, this.right, and this.bottom have been defined\n\t\t\tvar me = this;\n\t\t\tvar start = me.start;\n\n\t\t\tvar rightValue = +me.getRightValue(value);\n\t\t\tvar pixel;\n\t\t\tvar range = me.end - start;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tpixel = me.left + (me.width / range * (rightValue - start));\n\t\t\t} else {\n\t\t\t\tpixel = me.bottom - (me.height / range * (rightValue - start));\n\t\t\t}\n\t\t\treturn pixel;\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar innerDimension = isHorizontal ? me.width : me.height;\n\t\t\tvar offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n\t\t\treturn me.start + ((me.end - me.start) * offset);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.ticksAsNumbers[index]);\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('linear', LinearScale, defaultConfig);\n\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\nvar Ticks = require('../core/core.ticks');\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t// Figure out what the max number of ticks we can support it is based on the size of\n\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t// the graph\n\tvar tickVal = valueOrDefault(generationOptions.min, Math.pow(10, Math.floor(helpers.log10(dataRange.min))));\n\n\tvar endExp = Math.floor(helpers.log10(dataRange.max));\n\tvar endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n\tvar exp, significand;\n\n\tif (tickVal === 0) {\n\t\texp = Math.floor(helpers.log10(dataRange.minNotZero));\n\t\tsignificand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n\n\t\tticks.push(tickVal);\n\t\ttickVal = significand * Math.pow(10, exp);\n\t} else {\n\t\texp = Math.floor(helpers.log10(tickVal));\n\t\tsignificand = Math.floor(tickVal / Math.pow(10, exp));\n\t}\n\tvar precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n\tdo {\n\t\tticks.push(tickVal);\n\n\t\t++significand;\n\t\tif (significand === 10) {\n\t\t\tsignificand = 1;\n\t\t\t++exp;\n\t\t\tprecision = exp >= 0 ? 1 : precision;\n\t\t}\n\n\t\ttickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n\t} while (exp < endExp || (exp === endExp && significand < endSignificand));\n\n\tvar lastTick = valueOrDefault(generationOptions.max, tickVal);\n\tticks.push(lastTick);\n\n\treturn ticks;\n}\n\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\n\t\t// label settings\n\t\tticks: {\n\t\t\tcallback: Ticks.formatters.logarithmic\n\t\t}\n\t};\n\n\tvar LogarithmicScale = Chart.Scale.extend({\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\n\t\t\t// Calculate Range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\t\t\tme.minNotZero = null;\n\n\t\t\tvar hasStacks = opts.stacked;\n\t\t\tif (hasStacks === undefined) {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tif (hasStacks) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\t\thasStacks = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (opts.stacked || hasStacks) {\n\t\t\t\tvar valuesPerStack = {};\n\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tvar key = [\n\t\t\t\t\t\tmeta.type,\n\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\t\tmeta.stack\n\t\t\t\t\t].join('.');\n\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\t\tvaluesPerStack[key] = [];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar values = valuesPerStack[key];\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvalues[index] = values[index] || 0;\n\t\t\t\t\t\t\tvalues[index] += value;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\n\t\t\t\t\tif (valuesForType.length > 0) {\n\t\t\t\t\t\tvar minVal = helpers.min(valuesForType);\n\t\t\t\t\t\tvar maxVal = helpers.max(valuesForType);\n\t\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n\t\t\t\t\t\t\t\tme.minNotZero = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max\n\t\t\tthis.handleTickRangeOptions();\n\t\t},\n\t\thandleTickRangeOptions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\t\tvar DEFAULT_MIN = 1;\n\t\t\tvar DEFAULT_MAX = 10;\n\n\t\t\tme.min = valueOrDefault(tickOpts.min, me.min);\n\t\t\tme.max = valueOrDefault(tickOpts.max, me.max);\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tif (me.min !== 0 && me.min !== null) {\n\t\t\t\t\tme.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);\n\t\t\t\t\tme.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);\n\t\t\t\t} else {\n\t\t\t\t\tme.min = DEFAULT_MIN;\n\t\t\t\t\tme.max = DEFAULT_MAX;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (me.min === null) {\n\t\t\t\tme.min = Math.pow(10, Math.floor(helpers.log10(me.max)) - 1);\n\t\t\t}\n\t\t\tif (me.max === null) {\n\t\t\t\tme.max = me.min !== 0\n\t\t\t\t\t? Math.pow(10, Math.floor(helpers.log10(me.min)) + 1)\n\t\t\t\t\t: DEFAULT_MAX;\n\t\t\t}\n\t\t\tif (me.minNotZero === null) {\n\t\t\t\tif (me.min > 0) {\n\t\t\t\t\tme.minNotZero = me.min;\n\t\t\t\t} else if (me.max < 1) {\n\t\t\t\t\tme.minNotZero = Math.pow(10, Math.floor(helpers.log10(me.max)));\n\t\t\t\t} else {\n\t\t\t\t\tme.minNotZero = DEFAULT_MIN;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar reverse = !me.isHorizontal();\n\n\t\t\tvar generationOptions = {\n\t\t\t\tmin: tickOpts.min,\n\t\t\t\tmax: tickOpts.max\n\t\t\t};\n\t\t\tvar ticks = me.ticks = generateTicks(generationOptions, me);\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\treverse = !reverse;\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t\tif (reverse) {\n\t\t\t\tticks.reverse();\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tthis.tickValues = this.ticks.slice();\n\n\t\t\tChart.Scale.prototype.convertTicksToLabels.call(this);\n\t\t},\n\t\t// Get the correct tooltip label\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.tickValues[index]);\n\t\t},\n\t\t/**\n\t\t * Returns the value of the first tick.\n\t\t * @param {Number} value - The minimum not zero value.\n\t\t * @return {Number} The first tick value.\n\t\t * @private\n\t\t */\n\t\t_getFirstTickValue: function(value) {\n\t\t\tvar exp = Math.floor(helpers.log10(value));\n\t\t\tvar significand = Math.floor(value / Math.pow(10, exp));\n\n\t\t\treturn significand * Math.pow(10, exp);\n\t\t},\n\t\tgetPixelForValue: function(value) {\n\t\t\tvar me = this;\n\t\t\tvar reverse = me.options.ticks.reverse;\n\t\t\tvar log10 = helpers.log10;\n\t\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\t\tvar offset = 0;\n\t\t\tvar innerDimension, pixel, start, end, sign;\n\n\t\t\tvalue = +me.getRightValue(value);\n\t\t\tif (reverse) {\n\t\t\t\tstart = me.end;\n\t\t\t\tend = me.start;\n\t\t\t\tsign = -1;\n\t\t\t} else {\n\t\t\t\tstart = me.start;\n\t\t\t\tend = me.end;\n\t\t\t\tsign = 1;\n\t\t\t}\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tinnerDimension = me.width;\n\t\t\t\tpixel = reverse ? me.right : me.left;\n\t\t\t} else {\n\t\t\t\tinnerDimension = me.height;\n\t\t\t\tsign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\t\t\t\tpixel = reverse ? me.top : me.bottom;\n\t\t\t}\n\t\t\tif (value !== start) {\n\t\t\t\tif (start === 0) { // include zero tick\n\t\t\t\t\toffset = helpers.getValueOrDefault(\n\t\t\t\t\t\tme.options.ticks.fontSize,\n\t\t\t\t\t\tChart.defaults.global.defaultFontSize\n\t\t\t\t\t);\n\t\t\t\t\tinnerDimension -= offset;\n\t\t\t\t\tstart = firstTickValue;\n\t\t\t\t}\n\t\t\t\tif (value !== 0) {\n\t\t\t\t\toffset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n\t\t\t\t}\n\t\t\t\tpixel += sign * offset;\n\t\t\t}\n\t\t\treturn pixel;\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar reverse = me.options.ticks.reverse;\n\t\t\tvar log10 = helpers.log10;\n\t\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\t\tvar innerDimension, start, end, value;\n\n\t\t\tif (reverse) {\n\t\t\t\tstart = me.end;\n\t\t\t\tend = me.start;\n\t\t\t} else {\n\t\t\t\tstart = me.start;\n\t\t\t\tend = me.end;\n\t\t\t}\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tinnerDimension = me.width;\n\t\t\t\tvalue = reverse ? me.right - pixel : pixel - me.left;\n\t\t\t} else {\n\t\t\t\tinnerDimension = me.height;\n\t\t\t\tvalue = reverse ? pixel - me.top : me.bottom - pixel;\n\t\t\t}\n\t\t\tif (value !== start) {\n\t\t\t\tif (start === 0) { // include zero tick\n\t\t\t\t\tvar offset = helpers.getValueOrDefault(\n\t\t\t\t\t\tme.options.ticks.fontSize,\n\t\t\t\t\t\tChart.defaults.global.defaultFontSize\n\t\t\t\t\t);\n\t\t\t\t\tvalue -= offset;\n\t\t\t\t\tinnerDimension -= offset;\n\t\t\t\t\tstart = firstTickValue;\n\t\t\t\t}\n\t\t\t\tvalue *= log10(end) - log10(start);\n\t\t\t\tvalue /= innerDimension;\n\t\t\t\tvalue = Math.pow(10, log10(start) + value);\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('logarithmic', LogarithmicScale, defaultConfig);\n\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('bar', {\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\n\t\t\t// Specific to Bar Controller\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\n\t\t\t// offset settings\n\t\t\toffset: true,\n\n\t\t\t// grid line settings\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\ttype: 'linear'\n\t\t}]\n\t}\n});\n\ndefaults._set('horizontalBar', {\n\thover: {\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'bottom'\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\tposition: 'left',\n\t\t\ttype: 'category',\n\n\t\t\t// Specific to Horizontal Bar Controller\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\n\t\t\t// offset settings\n\t\t\toffset: true,\n\n\t\t\t// grid line settings\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}]\n\t},\n\n\telements: {\n\t\trectangle: {\n\t\t\tborderSkipped: 'left'\n\t\t}\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function(item, data) {\n\t\t\t\t// Pick first xLabel for now\n\t\t\t\tvar title = '';\n\n\t\t\t\tif (item.length > 0) {\n\t\t\t\t\tif (item[0].yLabel) {\n\t\t\t\t\t\ttitle = item[0].yLabel;\n\t\t\t\t\t} else if (data.labels.length > 0 && item[0].index < data.labels.length) {\n\t\t\t\t\t\ttitle = data.labels[item[0].index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\treturn datasetLabel + ': ' + item.xLabel;\n\t\t\t}\n\t\t},\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t}\n});\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(scale, pixels) {\n\tvar min = scale.isHorizontal() ? scale.width : scale.height;\n\tvar ticks = scale.getTicks();\n\tvar prev, curr, i, ilen;\n\n\tfor (i = 1, ilen = pixels.length; i < ilen; ++i) {\n\t\tmin = Math.min(min, pixels[i] - pixels[i - 1]);\n\t}\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tcurr = scale.getPixelForTick(i);\n\t\tmin = i > 0 ? Math.min(min, curr - prev) : min;\n\t\tprev = curr;\n\t}\n\n\treturn min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options) {\n\tvar thickness = options.barThickness;\n\tvar count = ruler.stackCount;\n\tvar curr = ruler.pixels[index];\n\tvar size, ratio;\n\n\tif (helpers.isNullOrUndef(thickness)) {\n\t\tsize = ruler.min * options.categoryPercentage;\n\t\tratio = options.barPercentage;\n\t} else {\n\t\t// When bar thickness is enforced, category and bar percentages are ignored.\n\t\t// Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n\t\t// and deprecate barPercentage since this value is ignored when thickness is absolute.\n\t\tsize = thickness * count;\n\t\tratio = 1;\n\t}\n\n\treturn {\n\t\tchunk: size / count,\n\t\tratio: ratio,\n\t\tstart: curr - (size / 2)\n\t};\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options) {\n\tvar pixels = ruler.pixels;\n\tvar curr = pixels[index];\n\tvar prev = index > 0 ? pixels[index - 1] : null;\n\tvar next = index < pixels.length - 1 ? pixels[index + 1] : null;\n\tvar percent = options.categoryPercentage;\n\tvar start, size;\n\n\tif (prev === null) {\n\t\t// first data: its size is double based on the next point or,\n\t\t// if it's also the last data, we use the scale end extremity.\n\t\tprev = curr - (next === null ? ruler.end - curr : next - curr);\n\t}\n\n\tif (next === null) {\n\t\t// last data: its size is also double based on the previous point.\n\t\tnext = curr + curr - prev;\n\t}\n\n\tstart = curr - ((curr - prev) / 2) * percent;\n\tsize = ((next - prev) / 2) * percent;\n\n\treturn {\n\t\tchunk: size / ruler.stackCount,\n\t\tratio: options.barPercentage,\n\t\tstart: start\n\t};\n}\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.bar = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Rectangle,\n\n\t\tinitialize: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta;\n\n\t\t\tChart.DatasetController.prototype.initialize.apply(me, arguments);\n\n\t\t\tmeta = me.getMeta();\n\t\t\tmeta.stack = me.getDataset().stack;\n\t\t\tmeta.bar = true;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar rects = me.getMeta().data;\n\t\t\tvar i, ilen;\n\n\t\t\tme._ruler = me.getRuler();\n\n\t\t\tfor (i = 0, ilen = rects.length; i < ilen; ++i) {\n\t\t\t\tme.updateElement(rects[i], i, reset);\n\t\t\t}\n\t\t},\n\n\t\tupdateElement: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar rectangleOptions = chart.options.elements.rectangle;\n\n\t\t\trectangle._xScale = me.getScaleForId(meta.xAxisID);\n\t\t\trectangle._yScale = me.getScaleForId(meta.yAxisID);\n\t\t\trectangle._datasetIndex = me.index;\n\t\t\trectangle._index = index;\n\n\t\t\trectangle._model = {\n\t\t\t\tdatasetLabel: dataset.label,\n\t\t\t\tlabel: chart.data.labels[index],\n\t\t\t\tborderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,\n\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),\n\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),\n\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)\n\t\t\t};\n\n\t\t\tme.updateElementGeometry(rectangle, index, reset);\n\n\t\t\trectangle.pivot();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tupdateElementGeometry: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar model = rectangle._model;\n\t\t\tvar vscale = me.getValueScale();\n\t\t\tvar base = vscale.getBasePixel();\n\t\t\tvar horizontal = vscale.isHorizontal();\n\t\t\tvar ruler = me._ruler || me.getRuler();\n\t\t\tvar vpixels = me.calculateBarValuePixels(me.index, index);\n\t\t\tvar ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n\n\t\t\tmodel.horizontal = horizontal;\n\t\t\tmodel.base = reset ? base : vpixels.base;\n\t\t\tmodel.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n\t\t\tmodel.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n\t\t\tmodel.height = horizontal ? ipixels.size : undefined;\n\t\t\tmodel.width = horizontal ? undefined : ipixels.size;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScaleId: function() {\n\t\t\treturn this.getMeta().yAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScaleId: function() {\n\t\t\treturn this.getMeta().xAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScale: function() {\n\t\t\treturn this.getScaleForId(this.getValueScaleId());\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScale: function() {\n\t\t\treturn this.getScaleForId(this.getIndexScaleId());\n\t\t},\n\n\t\t/**\n\t\t * Returns the stacks based on groups and bar visibility.\n\t\t * @param {Number} [last] - The dataset index\n\t\t * @returns {Array} The stack list\n\t\t * @private\n\t\t */\n\t\t_getStacks: function(last) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar scale = me.getIndexScale();\n\t\t\tvar stacked = scale.options.stacked;\n\t\t\tvar ilen = last === undefined ? chart.data.datasets.length : last + 1;\n\t\t\tvar stacks = [];\n\t\t\tvar i, meta;\n\n\t\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tif (meta.bar && chart.isDatasetVisible(i) &&\n\t\t\t\t\t(stacked === false ||\n\t\t\t\t\t(stacked === true && stacks.indexOf(meta.stack) === -1) ||\n\t\t\t\t\t(stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1)))) {\n\t\t\t\t\tstacks.push(meta.stack);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn stacks;\n\t\t},\n\n\t\t/**\n\t\t * Returns the effective number of stacks based on groups and bar visibility.\n\t\t * @private\n\t\t */\n\t\tgetStackCount: function() {\n\t\t\treturn this._getStacks().length;\n\t\t},\n\n\t\t/**\n\t\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t\t * @param {Number} [datasetIndex] - The dataset index\n\t\t * @param {String} [name] - The stack name to find\n\t\t * @returns {Number} The stack index\n\t\t * @private\n\t\t */\n\t\tgetStackIndex: function(datasetIndex, name) {\n\t\t\tvar stacks = this._getStacks(datasetIndex);\n\t\t\tvar index = (name !== undefined)\n\t\t\t\t? stacks.indexOf(name)\n\t\t\t\t: -1; // indexOf returns -1 if element is not present\n\n\t\t\treturn (index === -1)\n\t\t\t\t? stacks.length - 1\n\t\t\t\t: index;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetRuler: function() {\n\t\t\tvar me = this;\n\t\t\tvar scale = me.getIndexScale();\n\t\t\tvar stackCount = me.getStackCount();\n\t\t\tvar datasetIndex = me.index;\n\t\t\tvar isHorizontal = scale.isHorizontal();\n\t\t\tvar start = isHorizontal ? scale.left : scale.top;\n\t\t\tvar end = start + (isHorizontal ? scale.width : scale.height);\n\t\t\tvar pixels = [];\n\t\t\tvar i, ilen, min;\n\n\t\t\tfor (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n\t\t\t\tpixels.push(scale.getPixelForValue(null, i, datasetIndex));\n\t\t\t}\n\n\t\t\tmin = helpers.isNullOrUndef(scale.options.barThickness)\n\t\t\t\t? computeMinSampleSize(scale, pixels)\n\t\t\t\t: -1;\n\n\t\t\treturn {\n\t\t\t\tmin: min,\n\t\t\t\tpixels: pixels,\n\t\t\t\tstart: start,\n\t\t\t\tend: end,\n\t\t\t\tstackCount: stackCount,\n\t\t\t\tscale: scale\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Note: pixel values are not clamped to the scale area.\n\t\t * @private\n\t\t */\n\t\tcalculateBarValuePixels: function(datasetIndex, index) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar scale = me.getValueScale();\n\t\t\tvar datasets = chart.data.datasets;\n\t\t\tvar value = scale.getRightValue(datasets[datasetIndex].data[index]);\n\t\t\tvar stacked = scale.options.stacked;\n\t\t\tvar stack = meta.stack;\n\t\t\tvar start = 0;\n\t\t\tvar i, imeta, ivalue, base, head, size;\n\n\t\t\tif (stacked || (stacked === undefined && stack !== undefined)) {\n\t\t\t\tfor (i = 0; i < datasetIndex; ++i) {\n\t\t\t\t\timeta = chart.getDatasetMeta(i);\n\n\t\t\t\t\tif (imeta.bar &&\n\t\t\t\t\t\timeta.stack === stack &&\n\t\t\t\t\t\timeta.controller.getValueScaleId() === scale.id &&\n\t\t\t\t\t\tchart.isDatasetVisible(i)) {\n\n\t\t\t\t\t\tivalue = scale.getRightValue(datasets[i].data[index]);\n\t\t\t\t\t\tif ((value < 0 && ivalue < 0) || (value >= 0 && ivalue > 0)) {\n\t\t\t\t\t\t\tstart += ivalue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbase = scale.getPixelForValue(start);\n\t\t\thead = scale.getPixelForValue(start + value);\n\t\t\tsize = (head - base) / 2;\n\n\t\t\treturn {\n\t\t\t\tsize: size,\n\t\t\t\tbase: base,\n\t\t\t\thead: head,\n\t\t\t\tcenter: head + size / 2\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tcalculateBarIndexPixels: function(datasetIndex, index, ruler) {\n\t\t\tvar me = this;\n\t\t\tvar options = ruler.scale.options;\n\t\t\tvar range = options.barThickness === 'flex'\n\t\t\t\t? computeFlexCategoryTraits(index, ruler, options)\n\t\t\t\t: computeFitCategoryTraits(index, ruler, options);\n\n\t\t\tvar stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n\t\t\tvar center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n\t\t\tvar size = Math.min(\n\t\t\t\thelpers.valueOrDefault(options.maxBarThickness, Infinity),\n\t\t\t\trange.chunk * range.ratio);\n\n\t\t\treturn {\n\t\t\t\tbase: center - size / 2,\n\t\t\t\thead: center + size / 2,\n\t\t\t\tcenter: center,\n\t\t\t\tsize: size\n\t\t\t};\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar scale = me.getValueScale();\n\t\t\tvar rects = me.getMeta().data;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar ilen = rects.length;\n\t\t\tvar i = 0;\n\n\t\t\thelpers.canvas.clipArea(chart.ctx, chart.chartArea);\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\tif (!isNaN(scale.getRightValue(dataset.data[i]))) {\n\t\t\t\t\trects[i].draw();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thelpers.canvas.unclipArea(chart.ctx);\n\t\t},\n\n\t\tsetHoverStyle: function(rectangle) {\n\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\n\t\t\tvar index = rectangle._index;\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar model = rectangle._model;\n\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.hoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.hoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(rectangle) {\n\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\n\t\t\tvar index = rectangle._index;\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar model = rectangle._model;\n\t\t\tvar rectangleElementOptions = this.chart.options.elements.rectangle;\n\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth);\n\t\t}\n\t});\n\n\tChart.controllers.horizontalBar = Chart.controllers.bar.extend({\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScaleId: function() {\n\t\t\treturn this.getMeta().xAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScaleId: function() {\n\t\t\treturn this.getMeta().yAxisID;\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('radar', {\n\tscale: {\n\t\ttype: 'radialLinear'\n\t},\n\telements: {\n\t\tline: {\n\t\t\ttension: 0 // no bezier in radar\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.radar = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: elements.Line,\n\n\t\tdataElementType: elements.Point,\n\n\t\tlinkScales: helpers.noop,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data;\n\t\t\tvar custom = line.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar lineElementOptions = me.chart.options.elements.line;\n\t\t\tvar scale = me.chart.scale;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t}\n\n\t\t\thelpers.extend(meta.dataset, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_scale: scale,\n\t\t\t\t// Data\n\t\t\t\t_children: points,\n\t\t\t\t_loop: true,\n\t\t\t\t// Model\n\t\t\t\t_model: {\n\t\t\t\t\t// Appearance\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmeta.dataset.pivot();\n\n\t\t\t// Update Points\n\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t}, me);\n\n\t\t\t// Update bezier control points\n\t\t\tme.updateBezierControlPoints();\n\t\t},\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar scale = me.chart.scale;\n\t\t\tvar pointElementOptions = me.chart.options.elements.point;\n\t\t\tvar pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\n\t\t\t}\n\n\t\t\thelpers.extend(point, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\t\t\t\t_scale: scale,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: reset ? scale.xCenter : pointPosition.x, // value not used in dataset scale, but we want a consistent API between scales\n\t\t\t\t\ty: reset ? scale.yCenter : pointPosition.y,\n\n\t\t\t\t\t// Appearance\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, me.chart.options.elements.line.tension),\n\t\t\t\t\tradius: custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),\n\t\t\t\t\tpointStyle: custom.pointStyle ? custom.pointStyle : helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),\n\n\t\t\t\t\t// Tooltip\n\t\t\t\t\thitRadius: custom.hitRadius ? custom.hitRadius : helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointElementOptions.hitRadius)\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tpoint._model.skip = custom.skip ? custom.skip : (isNaN(point._model.x) || isNaN(point._model.y));\n\t\t},\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar chartArea = this.chart.chartArea;\n\t\t\tvar meta = this.getMeta();\n\n\t\t\thelpers.each(meta.data, function(point, index) {\n\t\t\t\tvar model = point._model;\n\t\t\t\tvar controlPoints = helpers.splineCurve(\n\t\t\t\t\thelpers.previousItem(meta.data, index, true)._model,\n\t\t\t\t\tmodel,\n\t\t\t\t\thelpers.nextItem(meta.data, index, true)._model,\n\t\t\t\t\tmodel.tension\n\t\t\t\t);\n\n\t\t\t\t// Prevent the bezier going outside of the bounds of the graph\n\t\t\t\tmodel.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);\n\t\t\t\tmodel.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);\n\n\t\t\t\tmodel.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);\n\t\t\t\tmodel.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top);\n\n\t\t\t\t// Now pivot the point for animation\n\t\t\t\tpoint.pivot();\n\t\t\t});\n\t\t},\n\n\t\tsetHoverStyle: function(point) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar index = point._index;\n\t\t\tvar model = point._model;\n\n\t\t\tmodel.radius = custom.hoverRadius ? custom.hoverRadius : helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar index = point._index;\n\t\t\tvar model = point._model;\n\t\t\tvar pointElementOptions = this.chart.options.elements.point;\n\n\t\t\tmodel.radius = custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius);\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth);\n\t\t}\n\t});\n};\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/lib/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Dashboard.vue?vue&type=style&index=0&id=02fe3418&scoped=true&lang=scss&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/lib/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Dashboard.vue?vue&type=style&index=0&id=02fe3418&scoped=true&lang=scss&\"","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('bubble', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear', // bubble should probably use a linear scale by default\n\t\t\tposition: 'bottom',\n\t\t\tid: 'x-axis-0' // need an ID so datasets can reference the scale\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\tvar dataPoint = data.datasets[item.datasetIndex].data[item.index];\n\t\t\t\treturn datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.bubble = Chart.DatasetController.extend({\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tdataElementType: elements.Point,\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data;\n\n\t\t\t// Update Points\n\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar options = me._resolveElementOptions(point, index);\n\t\t\tvar data = me.getDataset().data[index];\n\t\t\tvar dsIndex = me.index;\n\n\t\t\tvar x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n\t\t\tvar y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n\n\t\t\tpoint._xScale = xScale;\n\t\t\tpoint._yScale = yScale;\n\t\t\tpoint._options = options;\n\t\t\tpoint._datasetIndex = dsIndex;\n\t\t\tpoint._index = index;\n\t\t\tpoint._model = {\n\t\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\t\tborderColor: options.borderColor,\n\t\t\t\tborderWidth: options.borderWidth,\n\t\t\t\thitRadius: options.hitRadius,\n\t\t\t\tpointStyle: options.pointStyle,\n\t\t\t\tradius: reset ? 0 : options.radius,\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t};\n\n\t\t\tpoint.pivot();\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tsetHoverStyle: function(point) {\n\t\t\tvar model = point._model;\n\t\t\tvar options = point._options;\n\n\t\t\tmodel.backgroundColor = helpers.valueOrDefault(options.hoverBackgroundColor, helpers.getHoverColor(options.backgroundColor));\n\t\t\tmodel.borderColor = helpers.valueOrDefault(options.hoverBorderColor, helpers.getHoverColor(options.borderColor));\n\t\t\tmodel.borderWidth = helpers.valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n\t\t\tmodel.radius = options.radius + options.hoverRadius;\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar model = point._model;\n\t\t\tvar options = point._options;\n\n\t\t\tmodel.backgroundColor = options.backgroundColor;\n\t\t\tmodel.borderColor = options.borderColor;\n\t\t\tmodel.borderWidth = options.borderWidth;\n\t\t\tmodel.radius = options.radius;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\t_resolveElementOptions: function(point, index) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar datasets = chart.data.datasets;\n\t\t\tvar dataset = datasets[me.index];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar options = chart.options.elements.point;\n\t\t\tvar resolve = helpers.options.resolve;\n\t\t\tvar data = dataset.data[index];\n\t\t\tvar values = {};\n\t\t\tvar i, ilen, key;\n\n\t\t\t// Scriptable options\n\t\t\tvar context = {\n\t\t\t\tchart: chart,\n\t\t\t\tdataIndex: index,\n\t\t\t\tdataset: dataset,\n\t\t\t\tdatasetIndex: me.index\n\t\t\t};\n\n\t\t\tvar keys = [\n\t\t\t\t'backgroundColor',\n\t\t\t\t'borderColor',\n\t\t\t\t'borderWidth',\n\t\t\t\t'hoverBackgroundColor',\n\t\t\t\t'hoverBorderColor',\n\t\t\t\t'hoverBorderWidth',\n\t\t\t\t'hoverRadius',\n\t\t\t\t'hitRadius',\n\t\t\t\t'pointStyle'\n\t\t\t];\n\n\t\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\t\tkey = keys[i];\n\t\t\t\tvalues[key] = resolve([\n\t\t\t\t\tcustom[key],\n\t\t\t\t\tdataset[key],\n\t\t\t\t\toptions[key]\n\t\t\t\t], context, index);\n\t\t\t}\n\n\t\t\t// Custom radius resolution\n\t\t\tvalues.radius = resolve([\n\t\t\t\tcustom.radius,\n\t\t\t\tdata ? data.r : undefined,\n\t\t\t\tdataset.radius,\n\t\t\t\toptions.radius\n\t\t\t], context, index);\n\n\t\t\treturn values;\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar Element = require('./core.element');\nvar helpers = require('../helpers/index');\nvar Ticks = require('./core.ticks');\n\ndefaults._set('scale', {\n\tdisplay: true,\n\tposition: 'left',\n\toffset: false,\n\n\t// grid line settings\n\tgridLines: {\n\t\tdisplay: true,\n\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\tlineWidth: 1,\n\t\tdrawBorder: true,\n\t\tdrawOnChartArea: true,\n\t\tdrawTicks: true,\n\t\ttickMarkLength: 10,\n\t\tzeroLineWidth: 1,\n\t\tzeroLineColor: 'rgba(0,0,0,0.25)',\n\t\tzeroLineBorderDash: [],\n\t\tzeroLineBorderDashOffset: 0.0,\n\t\toffsetGridLines: false,\n\t\tborderDash: [],\n\t\tborderDashOffset: 0.0\n\t},\n\n\t// scale label\n\tscaleLabel: {\n\t\t// display property\n\t\tdisplay: false,\n\n\t\t// actual label\n\t\tlabelString: '',\n\n\t\t// line height\n\t\tlineHeight: 1.2,\n\n\t\t// top/bottom padding\n\t\tpadding: {\n\t\t\ttop: 4,\n\t\t\tbottom: 4\n\t\t}\n\t},\n\n\t// label settings\n\tticks: {\n\t\tbeginAtZero: false,\n\t\tminRotation: 0,\n\t\tmaxRotation: 50,\n\t\tmirror: false,\n\t\tpadding: 0,\n\t\treverse: false,\n\t\tdisplay: true,\n\t\tautoSkip: true,\n\t\tautoSkipPadding: 0,\n\t\tlabelOffset: 0,\n\t\t// We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n\t\tcallback: Ticks.formatters.values,\n\t\tminor: {},\n\t\tmajor: {}\n\t}\n});\n\nfunction labelsFromTicks(ticks) {\n\tvar labels = [];\n\tvar i, ilen;\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tlabels.push(ticks[i].label);\n\t}\n\n\treturn labels;\n}\n\nfunction getLineValue(scale, index, offsetGridLines) {\n\tvar lineValue = scale.getPixelForTick(index);\n\n\tif (offsetGridLines) {\n\t\tif (index === 0) {\n\t\t\tlineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n\t\t} else {\n\t\t\tlineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n\t\t}\n\t}\n\treturn lineValue;\n}\n\nmodule.exports = function(Chart) {\n\n\tfunction computeTextSize(context, tick, font) {\n\t\treturn helpers.isArray(tick) ?\n\t\t\thelpers.longestText(context, font, tick) :\n\t\t\tcontext.measureText(tick).width;\n\t}\n\n\tfunction parseFontOptions(options) {\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar globalDefaults = defaults.global;\n\t\tvar size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n\t\tvar style = valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);\n\t\tvar family = valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);\n\n\t\treturn {\n\t\t\tsize: size,\n\t\t\tstyle: style,\n\t\t\tfamily: family,\n\t\t\tfont: helpers.fontString(size, style, family)\n\t\t};\n\t}\n\n\tfunction parseLineHeight(options) {\n\t\treturn helpers.options.toLineHeight(\n\t\t\thelpers.valueOrDefault(options.lineHeight, 1.2),\n\t\t\thelpers.valueOrDefault(options.fontSize, defaults.global.defaultFontSize));\n\t}\n\n\tChart.Scale = Element.extend({\n\t\t/**\n\t\t * Get the padding needed for the scale\n\t\t * @method getPadding\n\t\t * @private\n\t\t * @returns {Padding} the necessary padding\n\t\t */\n\t\tgetPadding: function() {\n\t\t\tvar me = this;\n\t\t\treturn {\n\t\t\t\tleft: me.paddingLeft || 0,\n\t\t\t\ttop: me.paddingTop || 0,\n\t\t\t\tright: me.paddingRight || 0,\n\t\t\t\tbottom: me.paddingBottom || 0\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Returns the scale tick objects ({label, major})\n\t\t * @since 2.7\n\t\t */\n\t\tgetTicks: function() {\n\t\t\treturn this._ticks;\n\t\t},\n\n\t\t// These methods are ordered by lifecyle. Utilities then follow.\n\t\t// Any function defined here is inherited by all scale types.\n\t\t// Any function can be extended by the scale type\n\n\t\tmergeTicksOptions: function() {\n\t\t\tvar ticks = this.options.ticks;\n\t\t\tif (ticks.minor === false) {\n\t\t\t\tticks.minor = {\n\t\t\t\t\tdisplay: false\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (ticks.major === false) {\n\t\t\t\tticks.major = {\n\t\t\t\t\tdisplay: false\n\t\t\t\t};\n\t\t\t}\n\t\t\tfor (var key in ticks) {\n\t\t\t\tif (key !== 'major' && key !== 'minor') {\n\t\t\t\t\tif (typeof ticks.minor[key] === 'undefined') {\n\t\t\t\t\t\tticks.minor[key] = ticks[key];\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof ticks.major[key] === 'undefined') {\n\t\t\t\t\t\tticks.major[key] = ticks[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tbeforeUpdate: function() {\n\t\t\thelpers.callback(this.options.beforeUpdate, [this]);\n\t\t},\n\t\tupdate: function(maxWidth, maxHeight, margins) {\n\t\t\tvar me = this;\n\t\t\tvar i, ilen, labels, label, ticks, tick;\n\n\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\t\tme.beforeUpdate();\n\n\t\t\t// Absorb the master measurements\n\t\t\tme.maxWidth = maxWidth;\n\t\t\tme.maxHeight = maxHeight;\n\t\t\tme.margins = helpers.extend({\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: 0,\n\t\t\t\tbottom: 0\n\t\t\t}, margins);\n\t\t\tme.longestTextCache = me.longestTextCache || {};\n\n\t\t\t// Dimensions\n\t\t\tme.beforeSetDimensions();\n\t\t\tme.setDimensions();\n\t\t\tme.afterSetDimensions();\n\n\t\t\t// Data min/max\n\t\t\tme.beforeDataLimits();\n\t\t\tme.determineDataLimits();\n\t\t\tme.afterDataLimits();\n\n\t\t\t// Ticks - `this.ticks` is now DEPRECATED!\n\t\t\t// Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n\t\t\t// and must not be accessed directly from outside this class. `this.ticks` being\n\t\t\t// around for long time and not marked as private, we can't change its structure\n\t\t\t// without unexpected breaking changes. If you need to access the scale ticks,\n\t\t\t// use scale.getTicks() instead.\n\n\t\t\tme.beforeBuildTicks();\n\n\t\t\t// New implementations should return an array of objects but for BACKWARD COMPAT,\n\t\t\t// we still support no return (`this.ticks` internally set by calling this method).\n\t\t\tticks = me.buildTicks() || [];\n\n\t\t\tme.afterBuildTicks();\n\n\t\t\tme.beforeTickToLabelConversion();\n\n\t\t\t// New implementations should return the formatted tick labels but for BACKWARD\n\t\t\t// COMPAT, we still support no return (`this.ticks` internally changed by calling\n\t\t\t// this method and supposed to contain only string values).\n\t\t\tlabels = me.convertTicksToLabels(ticks) || me.ticks;\n\n\t\t\tme.afterTickToLabelConversion();\n\n\t\t\tme.ticks = labels;   // BACKWARD COMPATIBILITY\n\n\t\t\t// IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n\n\t\t\t// BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\t\t\tfor (i = 0, ilen = labels.length; i < ilen; ++i) {\n\t\t\t\tlabel = labels[i];\n\t\t\t\ttick = ticks[i];\n\t\t\t\tif (!tick) {\n\t\t\t\t\tticks.push(tick = {\n\t\t\t\t\t\tlabel: label,\n\t\t\t\t\t\tmajor: false\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\ttick.label = label;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme._ticks = ticks;\n\n\t\t\t// Tick Rotation\n\t\t\tme.beforeCalculateTickRotation();\n\t\t\tme.calculateTickRotation();\n\t\t\tme.afterCalculateTickRotation();\n\t\t\t// Fit\n\t\t\tme.beforeFit();\n\t\t\tme.fit();\n\t\t\tme.afterFit();\n\t\t\t//\n\t\t\tme.afterUpdate();\n\n\t\t\treturn me.minSize;\n\n\t\t},\n\t\tafterUpdate: function() {\n\t\t\thelpers.callback(this.options.afterUpdate, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeSetDimensions: function() {\n\t\t\thelpers.callback(this.options.beforeSetDimensions, [this]);\n\t\t},\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.width = me.maxWidth;\n\t\t\t\tme.left = 0;\n\t\t\t\tme.right = me.width;\n\t\t\t} else {\n\t\t\t\tme.height = me.maxHeight;\n\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.top = 0;\n\t\t\t\tme.bottom = me.height;\n\t\t\t}\n\n\t\t\t// Reset padding\n\t\t\tme.paddingLeft = 0;\n\t\t\tme.paddingTop = 0;\n\t\t\tme.paddingRight = 0;\n\t\t\tme.paddingBottom = 0;\n\t\t},\n\t\tafterSetDimensions: function() {\n\t\t\thelpers.callback(this.options.afterSetDimensions, [this]);\n\t\t},\n\n\t\t// Data limits\n\t\tbeforeDataLimits: function() {\n\t\t\thelpers.callback(this.options.beforeDataLimits, [this]);\n\t\t},\n\t\tdetermineDataLimits: helpers.noop,\n\t\tafterDataLimits: function() {\n\t\t\thelpers.callback(this.options.afterDataLimits, [this]);\n\t\t},\n\n\t\t//\n\t\tbeforeBuildTicks: function() {\n\t\t\thelpers.callback(this.options.beforeBuildTicks, [this]);\n\t\t},\n\t\tbuildTicks: helpers.noop,\n\t\tafterBuildTicks: function() {\n\t\t\thelpers.callback(this.options.afterBuildTicks, [this]);\n\t\t},\n\n\t\tbeforeTickToLabelConversion: function() {\n\t\t\thelpers.callback(this.options.beforeTickToLabelConversion, [this]);\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\t// Convert ticks to strings\n\t\t\tvar tickOpts = me.options.ticks;\n\t\t\tme.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n\t\t},\n\t\tafterTickToLabelConversion: function() {\n\t\t\thelpers.callback(this.options.afterTickToLabelConversion, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeCalculateTickRotation: function() {\n\t\t\thelpers.callback(this.options.beforeCalculateTickRotation, [this]);\n\t\t},\n\t\tcalculateTickRotation: function() {\n\t\t\tvar me = this;\n\t\t\tvar context = me.ctx;\n\t\t\tvar tickOpts = me.options.ticks;\n\t\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\t\t// Get the width of each grid by calculating the difference\n\t\t\t// between x offsets between 0 and 1.\n\t\t\tvar tickFont = parseFontOptions(tickOpts);\n\t\t\tcontext.font = tickFont.font;\n\n\t\t\tvar labelRotation = tickOpts.minRotation || 0;\n\n\t\t\tif (labels.length && me.options.display && me.isHorizontal()) {\n\t\t\t\tvar originalLabelWidth = helpers.longestText(context, tickFont.font, labels, me.longestTextCache);\n\t\t\t\tvar labelWidth = originalLabelWidth;\n\t\t\t\tvar cosRotation, sinRotation;\n\n\t\t\t\t// Allow 3 pixels x2 padding either side for label readability\n\t\t\t\tvar tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\n\n\t\t\t\t// Max label rotation can be set or default to 90 - also act as a loop counter\n\t\t\t\twhile (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n\t\t\t\t\tvar angleRadians = helpers.toRadians(labelRotation);\n\t\t\t\t\tcosRotation = Math.cos(angleRadians);\n\t\t\t\t\tsinRotation = Math.sin(angleRadians);\n\n\t\t\t\t\tif (sinRotation * originalLabelWidth > me.maxHeight) {\n\t\t\t\t\t\t// go back one step\n\t\t\t\t\t\tlabelRotation--;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tlabelRotation++;\n\t\t\t\t\tlabelWidth = cosRotation * originalLabelWidth;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.labelRotation = labelRotation;\n\t\t},\n\t\tafterCalculateTickRotation: function() {\n\t\t\thelpers.callback(this.options.afterCalculateTickRotation, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeFit: function() {\n\t\t\thelpers.callback(this.options.beforeFit, [this]);\n\t\t},\n\t\tfit: function() {\n\t\t\tvar me = this;\n\t\t\t// Reset\n\t\t\tvar minSize = me.minSize = {\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0\n\t\t\t};\n\n\t\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar scaleLabelOpts = opts.scaleLabel;\n\t\t\tvar gridLineOpts = opts.gridLines;\n\t\t\tvar display = opts.display;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tvar tickFont = parseFontOptions(tickOpts);\n\t\t\tvar tickMarkLength = opts.gridLines.tickMarkLength;\n\n\t\t\t// Width\n\t\t\tif (isHorizontal) {\n\t\t\t\t// subtract the margins to line up with the chartArea if we are a full width scale\n\t\t\t\tminSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n\t\t\t} else {\n\t\t\t\tminSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t\t}\n\n\t\t\t// height\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t\t} else {\n\t\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t\t}\n\n\t\t\t// Are we showing a title for the scale?\n\t\t\tif (scaleLabelOpts.display && display) {\n\t\t\t\tvar scaleLabelLineHeight = parseLineHeight(scaleLabelOpts);\n\t\t\t\tvar scaleLabelPadding = helpers.options.toPadding(scaleLabelOpts.padding);\n\t\t\t\tvar deltaHeight = scaleLabelLineHeight + scaleLabelPadding.height;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tminSize.height += deltaHeight;\n\t\t\t\t} else {\n\t\t\t\t\tminSize.width += deltaHeight;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Don't bother fitting the ticks if we are not showing them\n\t\t\tif (tickOpts.display && display) {\n\t\t\t\tvar largestTextWidth = helpers.longestText(me.ctx, tickFont.font, labels, me.longestTextCache);\n\t\t\t\tvar tallestLabelHeightInLines = helpers.numberOfLabelLines(labels);\n\t\t\t\tvar lineSpace = tickFont.size * 0.5;\n\t\t\t\tvar tickPadding = me.options.ticks.padding;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\t// A horizontal axis is more constrained by the height.\n\t\t\t\t\tme.longestLabelWidth = largestTextWidth;\n\n\t\t\t\t\tvar angleRadians = helpers.toRadians(me.labelRotation);\n\t\t\t\t\tvar cosRotation = Math.cos(angleRadians);\n\t\t\t\t\tvar sinRotation = Math.sin(angleRadians);\n\n\t\t\t\t\t// TODO - improve this calculation\n\t\t\t\t\tvar labelHeight = (sinRotation * largestTextWidth)\n\t\t\t\t\t\t+ (tickFont.size * tallestLabelHeightInLines)\n\t\t\t\t\t\t+ (lineSpace * (tallestLabelHeightInLines - 1))\n\t\t\t\t\t\t+ lineSpace; // padding\n\n\t\t\t\t\tminSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n\n\t\t\t\t\tme.ctx.font = tickFont.font;\n\t\t\t\t\tvar firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.font);\n\t\t\t\t\tvar lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.font);\n\n\t\t\t\t\t// Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n\t\t\t\t\t// which means that the right padding is dominated by the font height\n\t\t\t\t\tif (me.labelRotation !== 0) {\n\t\t\t\t\t\tme.paddingLeft = opts.position === 'bottom' ? (cosRotation * firstLabelWidth) + 3 : (cosRotation * lineSpace) + 3; // add 3 px to move away from canvas edges\n\t\t\t\t\t\tme.paddingRight = opts.position === 'bottom' ? (cosRotation * lineSpace) + 3 : (cosRotation * lastLabelWidth) + 3;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\n\t\t\t\t\t\tme.paddingRight = lastLabelWidth / 2 + 3;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// A vertical axis is more constrained by the width. Labels are the\n\t\t\t\t\t// dominant factor here, so get that length first and account for padding\n\t\t\t\t\tif (tickOpts.mirror) {\n\t\t\t\t\t\tlargestTextWidth = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// use lineSpace for consistency with horizontal axis\n\t\t\t\t\t\t// tickPadding is not implemented for horizontal\n\t\t\t\t\t\tlargestTextWidth += tickPadding + lineSpace;\n\t\t\t\t\t}\n\n\t\t\t\t\tminSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n\n\t\t\t\t\tme.paddingTop = tickFont.size / 2;\n\t\t\t\t\tme.paddingBottom = tickFont.size / 2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.handleMargins();\n\n\t\t\tme.width = minSize.width;\n\t\t\tme.height = minSize.height;\n\t\t},\n\n\t\t/**\n\t\t * Handle margins and padding interactions\n\t\t * @private\n\t\t */\n\t\thandleMargins: function() {\n\t\t\tvar me = this;\n\t\t\tif (me.margins) {\n\t\t\t\tme.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n\t\t\t\tme.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n\t\t\t\tme.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n\t\t\t\tme.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n\t\t\t}\n\t\t},\n\n\t\tafterFit: function() {\n\t\t\thelpers.callback(this.options.afterFit, [this]);\n\t\t},\n\n\t\t// Shared Methods\n\t\tisHorizontal: function() {\n\t\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t\t},\n\t\tisFullWidth: function() {\n\t\t\treturn (this.options.fullWidth);\n\t\t},\n\n\t\t// Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n\t\tgetRightValue: function(rawValue) {\n\t\t\t// Null and undefined values first\n\t\t\tif (helpers.isNullOrUndef(rawValue)) {\n\t\t\t\treturn NaN;\n\t\t\t}\n\t\t\t// isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\t\t\tif (typeof rawValue === 'number' && !isFinite(rawValue)) {\n\t\t\t\treturn NaN;\n\t\t\t}\n\t\t\t// If it is in fact an object, dive in one more level\n\t\t\tif (rawValue) {\n\t\t\t\tif (this.isHorizontal()) {\n\t\t\t\t\tif (rawValue.x !== undefined) {\n\t\t\t\t\t\treturn this.getRightValue(rawValue.x);\n\t\t\t\t\t}\n\t\t\t\t} else if (rawValue.y !== undefined) {\n\t\t\t\t\treturn this.getRightValue(rawValue.y);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Value is good, return it\n\t\t\treturn rawValue;\n\t\t},\n\n\t\t/**\n\t\t * Used to get the value to display in the tooltip for the data at the given index\n\t\t * @param index\n\t\t * @param datasetIndex\n\t\t */\n\t\tgetLabelForIndex: helpers.noop,\n\n\t\t/**\n\t\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t * @param value\n\t\t * @param index\n\t\t * @param datasetIndex\n\t\t */\n\t\tgetPixelForValue: helpers.noop,\n\n\t\t/**\n\t\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t * @param pixel\n\t\t */\n\t\tgetValueForPixel: helpers.noop,\n\n\t\t/**\n\t\t * Returns the location of the tick at the given index\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t */\n\t\tgetPixelForTick: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\t\tvar tickWidth = innerWidth / Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\t\tvar pixel = (tickWidth * index) + me.paddingLeft;\n\n\t\t\t\tif (offset) {\n\t\t\t\t\tpixel += tickWidth / 2;\n\t\t\t\t}\n\n\t\t\t\tvar finalVal = me.left + Math.round(pixel);\n\t\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\t\treturn finalVal;\n\t\t\t}\n\t\t\tvar innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n\t\t\treturn me.top + (index * (innerHeight / (me._ticks.length - 1)));\n\t\t},\n\n\t\t/**\n\t\t * Utility for getting the pixel location of a percentage of scale\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t */\n\t\tgetPixelForDecimal: function(decimal) {\n\t\t\tvar me = this;\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\t\tvar valueOffset = (innerWidth * decimal) + me.paddingLeft;\n\n\t\t\t\tvar finalVal = me.left + Math.round(valueOffset);\n\t\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\t\treturn finalVal;\n\t\t\t}\n\t\t\treturn me.top + (decimal * me.height);\n\t\t},\n\n\t\t/**\n\t\t * Returns the pixel for the minimum chart value\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t */\n\t\tgetBasePixel: function() {\n\t\t\treturn this.getPixelForValue(this.getBaseValue());\n\t\t},\n\n\t\tgetBaseValue: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\n\t\t\treturn me.beginAtZero ? 0 :\n\t\t\t\tmin < 0 && max < 0 ? max :\n\t\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t\t0;\n\t\t},\n\n\t\t/**\n\t\t * Returns a subset of ticks to be plotted to avoid overlapping labels.\n\t\t * @private\n\t\t */\n\t\t_autoSkip: function(ticks) {\n\t\t\tvar skipRatio;\n\t\t\tvar me = this;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar optionTicks = me.options.ticks.minor;\n\t\t\tvar tickCount = ticks.length;\n\t\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\n\t\t\tvar cosRotation = Math.cos(labelRotationRadians);\n\t\t\tvar longestRotatedLabel = me.longestLabelWidth * cosRotation;\n\t\t\tvar result = [];\n\t\t\tvar i, tick, shouldSkip;\n\n\t\t\t// figure out the maximum number of gridlines to show\n\t\t\tvar maxTicks;\n\t\t\tif (optionTicks.maxTicksLimit) {\n\t\t\t\tmaxTicks = optionTicks.maxTicksLimit;\n\t\t\t}\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tskipRatio = false;\n\n\t\t\t\tif ((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount > (me.width - (me.paddingLeft + me.paddingRight))) {\n\t\t\t\t\tskipRatio = 1 + Math.floor(((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount) / (me.width - (me.paddingLeft + me.paddingRight)));\n\t\t\t\t}\n\n\t\t\t\t// if they defined a max number of optionTicks,\n\t\t\t\t// increase skipRatio until that number is met\n\t\t\t\tif (maxTicks && tickCount > maxTicks) {\n\t\t\t\t\tskipRatio = Math.max(skipRatio, Math.floor(tickCount / maxTicks));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (i = 0; i < tickCount; i++) {\n\t\t\t\ttick = ticks[i];\n\n\t\t\t\t// Since we always show the last tick,we need may need to hide the last shown one before\n\t\t\t\tshouldSkip = (skipRatio > 1 && i % skipRatio > 0) || (i % skipRatio === 0 && i + skipRatio >= tickCount);\n\t\t\t\tif (shouldSkip && i !== tickCount - 1) {\n\t\t\t\t\t// leave tick in place but make sure it's not displayed (#4635)\n\t\t\t\t\tdelete tick.label;\n\t\t\t\t}\n\t\t\t\tresult.push(tick);\n\t\t\t}\n\t\t\treturn result;\n\t\t},\n\n\t\t// Actually draw the scale on the canvas\n\t\t// @param {rectangle} chartArea : the area of the chart to draw full grid lines on\n\t\tdraw: function(chartArea) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tif (!options.display) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar context = me.ctx;\n\t\t\tvar globalDefaults = defaults.global;\n\t\t\tvar optionTicks = options.ticks.minor;\n\t\t\tvar optionMajorTicks = options.ticks.major || optionTicks;\n\t\t\tvar gridLines = options.gridLines;\n\t\t\tvar scaleLabel = options.scaleLabel;\n\n\t\t\tvar isRotated = me.labelRotation !== 0;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tvar ticks = optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n\t\t\tvar tickFontColor = helpers.valueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar tickFont = parseFontOptions(optionTicks);\n\t\t\tvar majorTickFontColor = helpers.valueOrDefault(optionMajorTicks.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar majorTickFont = parseFontOptions(optionMajorTicks);\n\n\t\t\tvar tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n\n\t\t\tvar scaleLabelFontColor = helpers.valueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar scaleLabelFont = parseFontOptions(scaleLabel);\n\t\t\tvar scaleLabelPadding = helpers.options.toPadding(scaleLabel.padding);\n\t\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\n\n\t\t\tvar itemsToDraw = [];\n\n\t\t\tvar axisWidth = me.options.gridLines.lineWidth;\n\t\t\tvar xTickStart = options.position === 'right' ? me.right : me.right - axisWidth - tl;\n\t\t\tvar xTickEnd = options.position === 'right' ? me.right + tl : me.right;\n\t\t\tvar yTickStart = options.position === 'bottom' ? me.top + axisWidth : me.bottom - tl - axisWidth;\n\t\t\tvar yTickEnd = options.position === 'bottom' ? me.top + axisWidth + tl : me.bottom + axisWidth;\n\n\t\t\thelpers.each(ticks, function(tick, index) {\n\t\t\t\t// autoskipper skipped this tick (#4635)\n\t\t\t\tif (helpers.isNullOrUndef(tick.label)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar label = tick.label;\n\t\t\t\tvar lineWidth, lineColor, borderDash, borderDashOffset;\n\t\t\t\tif (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n\t\t\t\t\t// Draw the first index specially\n\t\t\t\t\tlineWidth = gridLines.zeroLineWidth;\n\t\t\t\t\tlineColor = gridLines.zeroLineColor;\n\t\t\t\t\tborderDash = gridLines.zeroLineBorderDash;\n\t\t\t\t\tborderDashOffset = gridLines.zeroLineBorderDashOffset;\n\t\t\t\t} else {\n\t\t\t\t\tlineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, index);\n\t\t\t\t\tlineColor = helpers.valueAtIndexOrDefault(gridLines.color, index);\n\t\t\t\t\tborderDash = helpers.valueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\n\t\t\t\t\tborderDashOffset = helpers.valueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\n\t\t\t\t}\n\n\t\t\t\t// Common properties\n\t\t\t\tvar tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\n\t\t\t\tvar textAlign = 'middle';\n\t\t\t\tvar textBaseline = 'middle';\n\t\t\t\tvar tickPadding = optionTicks.padding;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tvar labelYOffset = tl + tickPadding;\n\n\t\t\t\t\tif (options.position === 'bottom') {\n\t\t\t\t\t\t// bottom\n\t\t\t\t\t\ttextBaseline = !isRotated ? 'top' : 'middle';\n\t\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'right';\n\t\t\t\t\t\tlabelY = me.top + labelYOffset;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// top\n\t\t\t\t\t\ttextBaseline = !isRotated ? 'bottom' : 'middle';\n\t\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'left';\n\t\t\t\t\t\tlabelY = me.bottom - labelYOffset;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar xLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\t\t\t\t\tif (xLineValue < me.left) {\n\t\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t\t}\n\t\t\t\t\txLineValue += helpers.aliasPixel(lineWidth);\n\n\t\t\t\t\tlabelX = me.getPixelForTick(index) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n\t\t\t\t\ttx1 = tx2 = x1 = x2 = xLineValue;\n\t\t\t\t\tty1 = yTickStart;\n\t\t\t\t\tty2 = yTickEnd;\n\t\t\t\t\ty1 = chartArea.top;\n\t\t\t\t\ty2 = chartArea.bottom + axisWidth;\n\t\t\t\t} else {\n\t\t\t\t\tvar isLeft = options.position === 'left';\n\t\t\t\t\tvar labelXOffset;\n\n\t\t\t\t\tif (optionTicks.mirror) {\n\t\t\t\t\t\ttextAlign = isLeft ? 'left' : 'right';\n\t\t\t\t\t\tlabelXOffset = tickPadding;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttextAlign = isLeft ? 'right' : 'left';\n\t\t\t\t\t\tlabelXOffset = tl + tickPadding;\n\t\t\t\t\t}\n\n\t\t\t\t\tlabelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;\n\n\t\t\t\t\tvar yLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\t\t\t\t\tif (yLineValue < me.top) {\n\t\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t\t}\n\t\t\t\t\tyLineValue += helpers.aliasPixel(lineWidth);\n\n\t\t\t\t\tlabelY = me.getPixelForTick(index) + optionTicks.labelOffset;\n\n\t\t\t\t\ttx1 = xTickStart;\n\t\t\t\t\ttx2 = xTickEnd;\n\t\t\t\t\tx1 = chartArea.left;\n\t\t\t\t\tx2 = chartArea.right + axisWidth;\n\t\t\t\t\tty1 = ty2 = y1 = y2 = yLineValue;\n\t\t\t\t}\n\n\t\t\t\titemsToDraw.push({\n\t\t\t\t\ttx1: tx1,\n\t\t\t\t\tty1: ty1,\n\t\t\t\t\ttx2: tx2,\n\t\t\t\t\tty2: ty2,\n\t\t\t\t\tx1: x1,\n\t\t\t\t\ty1: y1,\n\t\t\t\t\tx2: x2,\n\t\t\t\t\ty2: y2,\n\t\t\t\t\tlabelX: labelX,\n\t\t\t\t\tlabelY: labelY,\n\t\t\t\t\tglWidth: lineWidth,\n\t\t\t\t\tglColor: lineColor,\n\t\t\t\t\tglBorderDash: borderDash,\n\t\t\t\t\tglBorderDashOffset: borderDashOffset,\n\t\t\t\t\trotation: -1 * labelRotationRadians,\n\t\t\t\t\tlabel: label,\n\t\t\t\t\tmajor: tick.major,\n\t\t\t\t\ttextBaseline: textBaseline,\n\t\t\t\t\ttextAlign: textAlign\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t// Draw all of the tick labels, tick marks, and grid lines at the correct places\n\t\t\thelpers.each(itemsToDraw, function(itemToDraw) {\n\t\t\t\tif (gridLines.display) {\n\t\t\t\t\tcontext.save();\n\t\t\t\t\tcontext.lineWidth = itemToDraw.glWidth;\n\t\t\t\t\tcontext.strokeStyle = itemToDraw.glColor;\n\t\t\t\t\tif (context.setLineDash) {\n\t\t\t\t\t\tcontext.setLineDash(itemToDraw.glBorderDash);\n\t\t\t\t\t\tcontext.lineDashOffset = itemToDraw.glBorderDashOffset;\n\t\t\t\t\t}\n\n\t\t\t\t\tcontext.beginPath();\n\n\t\t\t\t\tif (gridLines.drawTicks) {\n\t\t\t\t\t\tcontext.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n\t\t\t\t\t\tcontext.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (gridLines.drawOnChartArea) {\n\t\t\t\t\t\tcontext.moveTo(itemToDraw.x1, itemToDraw.y1);\n\t\t\t\t\t\tcontext.lineTo(itemToDraw.x2, itemToDraw.y2);\n\t\t\t\t\t}\n\n\t\t\t\t\tcontext.stroke();\n\t\t\t\t\tcontext.restore();\n\t\t\t\t}\n\n\t\t\t\tif (optionTicks.display) {\n\t\t\t\t\t// Make sure we draw text in the correct color and font\n\t\t\t\t\tcontext.save();\n\t\t\t\t\tcontext.translate(itemToDraw.labelX, itemToDraw.labelY);\n\t\t\t\t\tcontext.rotate(itemToDraw.rotation);\n\t\t\t\t\tcontext.font = itemToDraw.major ? majorTickFont.font : tickFont.font;\n\t\t\t\t\tcontext.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n\t\t\t\t\tcontext.textBaseline = itemToDraw.textBaseline;\n\t\t\t\t\tcontext.textAlign = itemToDraw.textAlign;\n\n\t\t\t\t\tvar label = itemToDraw.label;\n\t\t\t\t\tif (helpers.isArray(label)) {\n\t\t\t\t\t\tvar lineCount = label.length;\n\t\t\t\t\t\tvar lineHeight = tickFont.size * 1.5;\n\t\t\t\t\t\tvar y = me.isHorizontal() ? 0 : -lineHeight * (lineCount - 1) / 2;\n\n\t\t\t\t\t\tfor (var i = 0; i < lineCount; ++i) {\n\t\t\t\t\t\t\t// We just make sure the multiline element is a string here..\n\t\t\t\t\t\t\tcontext.fillText('' + label[i], 0, y);\n\t\t\t\t\t\t\t// apply same lineSpacing as calculated @ L#320\n\t\t\t\t\t\t\ty += lineHeight;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontext.fillText(label, 0, 0);\n\t\t\t\t\t}\n\t\t\t\t\tcontext.restore();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (scaleLabel.display) {\n\t\t\t\t// Draw the scale label\n\t\t\t\tvar scaleLabelX;\n\t\t\t\tvar scaleLabelY;\n\t\t\t\tvar rotation = 0;\n\t\t\t\tvar halfLineHeight = parseLineHeight(scaleLabel) / 2;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tscaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\n\t\t\t\t\tscaleLabelY = options.position === 'bottom'\n\t\t\t\t\t\t? me.bottom - halfLineHeight - scaleLabelPadding.bottom\n\t\t\t\t\t\t: me.top + halfLineHeight + scaleLabelPadding.top;\n\t\t\t\t} else {\n\t\t\t\t\tvar isLeft = options.position === 'left';\n\t\t\t\t\tscaleLabelX = isLeft\n\t\t\t\t\t\t? me.left + halfLineHeight + scaleLabelPadding.top\n\t\t\t\t\t\t: me.right - halfLineHeight - scaleLabelPadding.top;\n\t\t\t\t\tscaleLabelY = me.top + ((me.bottom - me.top) / 2);\n\t\t\t\t\trotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n\t\t\t\t}\n\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.translate(scaleLabelX, scaleLabelY);\n\t\t\t\tcontext.rotate(rotation);\n\t\t\t\tcontext.textAlign = 'center';\n\t\t\t\tcontext.textBaseline = 'middle';\n\t\t\t\tcontext.fillStyle = scaleLabelFontColor; // render in correct colour\n\t\t\t\tcontext.font = scaleLabelFont.font;\n\t\t\t\tcontext.fillText(scaleLabel.labelString, 0, 0);\n\t\t\t\tcontext.restore();\n\t\t\t}\n\n\t\t\tif (gridLines.drawBorder) {\n\t\t\t\t// Draw the line at the edge of the axis\n\t\t\t\tcontext.lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, 0);\n\t\t\t\tcontext.strokeStyle = helpers.valueAtIndexOrDefault(gridLines.color, 0);\n\t\t\t\tvar x1 = me.left;\n\t\t\t\tvar x2 = me.right + axisWidth;\n\t\t\t\tvar y1 = me.top;\n\t\t\t\tvar y2 = me.bottom + axisWidth;\n\n\t\t\t\tvar aliasPixel = helpers.aliasPixel(context.lineWidth);\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\ty1 = y2 = options.position === 'top' ? me.bottom : me.top;\n\t\t\t\t\ty1 += aliasPixel;\n\t\t\t\t\ty2 += aliasPixel;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = x2 = options.position === 'left' ? me.right : me.left;\n\t\t\t\t\tx1 += aliasPixel;\n\t\t\t\t\tx2 += aliasPixel;\n\t\t\t\t}\n\n\t\t\t\tcontext.beginPath();\n\t\t\t\tcontext.moveTo(x1, y1);\n\t\t\t\tcontext.lineTo(x2, y2);\n\t\t\t\tcontext.stroke();\n\t\t\t}\n\t\t}\n\t});\n};\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"dashboard\"},[_c('Logo'),_c('div',{staticClass:\"container\"},[_c('Title',{staticClass:\"Title\",attrs:{\"align\":\"center\",\"title\":\"Your Own Dashboard\"}}),_c('div',{staticClass:\"meters-wrapper\"},[_c('Meter',{staticClass:\"meter\",attrs:{\"value\":this.electricityReceived,\"valuePrecision\":\"3\",\"textAbove\":\"\",\"description\":\"Electricity received\"}}),_c('Meter',{staticClass:\"meter\",attrs:{\"value\":this.electricityDelivered,\"valuePrecision\":\"0\",\"textAbove\":\"\",\"description\":\"Electricity delivered\"}}),_c('Meter',{staticClass:\"meter\",attrs:{\"value\":this.gasReceived,\"valuePrecision\":\"0\",\"textAbove\":\"\",\"description\":\"Gas received\"}})],1),_c('Map',{attrs:{\"markers\":_vm.devices}}),_c('br'),_c('h1',[_vm._v(\"KwH usage\")]),_c('br'),_c('b-tabs',{attrs:{\"type\":\"is-boxed\",\"expanded\":\"\"},model:{value:(_vm.activeTab),callback:function ($$v) {_vm.activeTab=$$v},expression:\"activeTab\"}},[_c('b-tab-item',{attrs:{\"label\":\"Last 7 days\"}},[_c('div',{staticClass:\"small\"},[(_vm.loadedKwh7Days)?_c('line-chart',{attrs:{\"chart-data\":_vm.lineChartDataKwh7Days, options: _vm.options}}):_vm._e()],1)]),_c('b-tab-item',{attrs:{\"label\":\"Last 31 days\"}},[_c('div',{staticClass:\"small\"},[(_vm.loadedKwh31Days)?_c('line-chart',{attrs:{\"chart-data\":_vm.lineChartDataKwh31Days, options: _vm.options}}):_vm._e()],1)])],1),_c('h1',[_vm._v(\"Gas usage\")]),_c('br'),_c('b-tabs',{attrs:{\"type\":\"is-boxed\",\"expanded\":\"\"},model:{value:(_vm.activeTab),callback:function ($$v) {_vm.activeTab=$$v},expression:\"activeTab\"}},[_c('b-tab-item',{attrs:{\"label\":\"Last 7 days\"}},[_c('div',{staticClass:\"small\"},[(_vm.loadedGas7Days)?_c('line-chart',{attrs:{\"chart-data\":_vm.lineChartDataGas7Days, options: _vm.options}}):_vm._e()],1)]),_c('b-tab-item',{attrs:{\"label\":\"Last 31 days\"}},[_c('div',{staticClass:\"small\"},[(_vm.loadedGas31Days)?_c('line-chart',{attrs:{\"chart-data\":_vm.lineChartDataGas31Days, options: _vm.options}}):_vm._e()],1)])],1)],1),_c('DeviceDataList',{attrs:{\"deviceId\":this.deviceId}}),_c('Footer'),_c('FooterClosing')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","function dataHandler(newData, oldData) {\n  if (oldData) {\n    var chart = this.$data._chart;\n    var newDatasetLabels = newData.datasets.map(function (dataset) {\n      return dataset.label;\n    });\n    var oldDatasetLabels = oldData.datasets.map(function (dataset) {\n      return dataset.label;\n    });\n    var oldLabels = JSON.stringify(oldDatasetLabels);\n    var newLabels = JSON.stringify(newDatasetLabels);\n\n    if (newLabels === oldLabels && oldData.datasets.length === newData.datasets.length) {\n      newData.datasets.forEach(function (dataset, i) {\n        var oldDatasetKeys = Object.keys(oldData.datasets[i]);\n        var newDatasetKeys = Object.keys(dataset);\n        var deletionKeys = oldDatasetKeys.filter(function (key) {\n          return key !== '_meta' && newDatasetKeys.indexOf(key) === -1;\n        });\n        deletionKeys.forEach(function (deletionKey) {\n          delete chart.data.datasets[i][deletionKey];\n        });\n\n        for (var attribute in dataset) {\n          if (dataset.hasOwnProperty(attribute)) {\n            chart.data.datasets[i][attribute] = dataset[attribute];\n          }\n        }\n      });\n\n      if (newData.hasOwnProperty('labels')) {\n        chart.data.labels = newData.labels;\n        this.$emit('labels:update');\n      }\n\n      if (newData.hasOwnProperty('xLabels')) {\n        chart.data.xLabels = newData.xLabels;\n        this.$emit('xlabels:update');\n      }\n\n      if (newData.hasOwnProperty('yLabels')) {\n        chart.data.yLabels = newData.yLabels;\n        this.$emit('ylabels:update');\n      }\n\n      chart.update();\n      this.$emit('chart:update');\n    } else {\n      if (chart) {\n        chart.destroy();\n        this.$emit('chart:destroy');\n      }\n\n      this.renderChart(this.chartData, this.options);\n      this.$emit('chart:render');\n    }\n  } else {\n    if (this.$data._chart) {\n      this.$data._chart.destroy();\n\n      this.$emit('chart:destroy');\n    }\n\n    this.renderChart(this.chartData, this.options);\n    this.$emit('chart:render');\n  }\n}\n\nexport var reactiveData = {\n  data: function data() {\n    return {\n      chartData: null\n    };\n  },\n  watch: {\n    'chartData': dataHandler\n  }\n};\nexport var reactiveProp = {\n  props: {\n    chartData: {\n      required: true\n    }\n  },\n  watch: {\n    'chartData': dataHandler\n  }\n};\nexport default {\n  reactiveData: reactiveData,\n  reactiveProp: reactiveProp\n};","import Chart from 'chart.js';\nexport function generateChart(chartId, chartType) {\n  return {\n    render: function render(createElement) {\n      return createElement('div', {\n        style: this.styles,\n        class: this.cssClasses\n      }, [createElement('canvas', {\n        attrs: {\n          id: this.chartId,\n          width: this.width,\n          height: this.height\n        },\n        ref: 'canvas'\n      })]);\n    },\n    props: {\n      chartId: {\n        default: chartId,\n        type: String\n      },\n      width: {\n        default: 400,\n        type: Number\n      },\n      height: {\n        default: 400,\n        type: Number\n      },\n      cssClasses: {\n        type: String,\n        default: ''\n      },\n      styles: {\n        type: Object\n      },\n      plugins: {\n        type: Array,\n        default: function _default() {\n          return [];\n        }\n      }\n    },\n    data: function data() {\n      return {\n        _chart: null,\n        _plugins: this.plugins\n      };\n    },\n    methods: {\n      addPlugin: function addPlugin(plugin) {\n        this.$data._plugins.push(plugin);\n      },\n      generateLegend: function generateLegend() {\n        if (this.$data._chart) {\n          return this.$data._chart.generateLegend();\n        }\n      },\n      renderChart: function renderChart(data, options) {\n        if (this.$data._chart) this.$data._chart.destroy();\n        this.$data._chart = new Chart(this.$refs.canvas.getContext('2d'), {\n          type: chartType,\n          data: data,\n          options: options,\n          plugins: this.$data._plugins\n        });\n      }\n    },\n    beforeDestroy: function beforeDestroy() {\n      if (this.$data._chart) {\n        this.$data._chart.destroy();\n      }\n    }\n  };\n}\nexport var Bar = generateChart('bar-chart', 'bar');\nexport var HorizontalBar = generateChart('horizontalbar-chart', 'horizontalBar');\nexport var Doughnut = generateChart('doughnut-chart', 'doughnut');\nexport var Line = generateChart('line-chart', 'line');\nexport var Pie = generateChart('pie-chart', 'pie');\nexport var PolarArea = generateChart('polar-chart', 'polarArea');\nexport var Radar = generateChart('radar-chart', 'radar');\nexport var Bubble = generateChart('bubble-chart', 'bubble');\nexport var Scatter = generateChart('scatter-chart', 'scatter');\nexport default {\n  Bar: Bar,\n  HorizontalBar: HorizontalBar,\n  Doughnut: Doughnut,\n  Line: Line,\n  Pie: Pie,\n  PolarArea: PolarArea,\n  Radar: Radar,\n  Bubble: Bubble,\n  Scatter: Scatter\n};","var render, staticRenderFns\nimport script from \"./BarChart.vue?vue&type=script&lang=js&\"\nexport * from \"./BarChart.vue?vue&type=script&lang=js&\"\nimport style0 from \"./BarChart.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"BarChart.vue\"\nexport default component.exports","<script>\nimport { Bar, mixins } from 'vue-chartjs'\nconst { reactiveProp } = mixins\n\nexport default {\n  extends: Bar,\n  mixins: [reactiveProp],\n  props: ['options'],\n  mounted () {\n    this.renderChart(this.chartData, this.options)\n  }\n}\n</script>\n\n<style>\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarChart.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarChart.vue?vue&type=script&lang=js&\"","var render, staticRenderFns\nimport script from \"./LineChart.vue?vue&type=script&lang=js&\"\nexport * from \"./LineChart.vue?vue&type=script&lang=js&\"\nimport style0 from \"./LineChart.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"LineChart.vue\"\nexport default component.exports","<script>\nimport { Line, mixins } from 'vue-chartjs'\nconst { reactiveProp } = mixins\n\nexport default {\n  extends: Line,\n  mixins: [reactiveProp],\n  props: ['options'],\n  mounted () {\n    this.renderChart(this.chartData, this.options)\n  }\n}\n</script>\n\n<style>\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LineChart.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LineChart.vue?vue&type=script&lang=js&\"","<template>\n  <div class=\"dashboard\">\n    <Logo/>\n    <div class=\"container\">\n      <Title align=\"center\" title=\"Your Own Dashboard\" class=\"Title\"/>\n\n      <div class=\"meters-wrapper\">\n        <Meter\n          class=\"meter\"\n          :value=\"this.electricityReceived\"\n          valuePrecision=\"3\"\n          textAbove\n          description=\"Electricity received\"\n        />\n        <Meter\n          class=\"meter\"\n          :value=\"this.electricityDelivered\"\n          valuePrecision=\"0\"\n          textAbove\n          description=\"Electricity delivered\"\n        />\n        <Meter\n          class=\"meter\"\n          :value=\"this.gasReceived\"\n          valuePrecision=\"0\"\n          textAbove\n          description=\"Gas received\"\n        />\n      </div>\n\n      <Map :markers=\"devices\"></Map>\n\n      <br />\n\n      <h1>KwH usage</h1>\n\n      <br />\n\n      <b-tabs type=\"is-boxed\" v-model=\"activeTab\" expanded>\n        <b-tab-item label=\"Last 7 days\">\n          <div class=\"small\">\n            <line-chart v-if=\"loadedKwh7Days\" :chart-data=\"lineChartDataKwh7Days, options\"></line-chart>\n          </div>\n        </b-tab-item>\n        <b-tab-item label=\"Last 31 days\">\n          <div class=\"small\">\n            <line-chart v-if=\"loadedKwh31Days\" :chart-data=\"lineChartDataKwh31Days, options\"></line-chart>\n          </div>\n        </b-tab-item>\n      </b-tabs>\n\n        <h1>Gas usage</h1>\n\n        <br />\n        <b-tabs type=\"is-boxed\" v-model=\"activeTab\" expanded>\n            <b-tab-item label=\"Last 7 days\">\n                <div class=\"small\">\n                    <line-chart v-if=\"loadedGas7Days\" :chart-data=\"lineChartDataGas7Days, options\"></line-chart>\n                </div>\n            </b-tab-item>\n            <b-tab-item label=\"Last 31 days\">\n                <div class=\"small\">\n                    <line-chart v-if=\"loadedGas31Days\" :chart-data=\"lineChartDataGas31Days, options\"></line-chart>\n                </div>\n            </b-tab-item>\n        </b-tabs>\n    </div>\n\n    <DeviceDataList :deviceId=\"this.deviceId\"/>\n\n    <Footer/>\n    <FooterClosing/>\n  </div>\n</template>\n\n<script>\nimport Button from \"@/components/common/Button.vue\";\nimport DeviceDataList from \"@/components/stats/DeviceDataList.vue\";\n// import DayChart from '@/components/stats/DayChart.vue'\nimport Footer from \"@/components/footer/Footer.vue\";\nimport FooterClosing from \"@/components/footer/FooterClosing.vue\";\nimport Logo from \"@/components/Logo.vue\";\nimport Map from \"@/components/common/Map.vue\";\nimport Meter from \"@/components/common/Meter.vue\";\nimport Title from \"@/components/common/Title.vue\";\nimport BarChart from \"@/components/common/BarChart.vue\";\nimport LineChart from \"@/components/common/LineChart.vue\";\n\nexport default {\n  name: \"dashboard\",\n  data() {\n    return {\n      data: [],\n      loadedKwh7Days: false,\n      loadedKwh31Days: false,\n      dashboardData: [],\n      isCookieSet: false,\n      deviceId: 0,\n      devices: [],\n      electricityReceived: 0,\n      electricityDelivered: 0,\n      gasReceived: 0,\n      barChartData: null,\n      lineChartDataKwh7Days: null,\n      lineChartDataKwh31Days: null,\n      lineChartDataGas7Days: null,\n      lineChartDataGas31Days: null,\n      tab: \"24hours\",\n      activeTab: null,\n      options: {\n        legend: {\n          labels: {\n            fontColor: \"white\",\n            fontSize: 18\n          }\n        },\n        scales: {\n          yAxes: [\n            {\n              ticks: {\n                fontColor: \"white\",\n                fontSize: 16\n              }\n            }\n          ],\n          xAxes: [\n            {\n              ticks: {\n                fontColor: \"white\",\n                fontSize: 14\n              }\n            }\n          ]\n        }\n      }\n    };\n  },\n  components: {\n    Meter,\n    Logo,\n    Button,\n    // DayChart,\n    DeviceDataList,\n    Map,\n    Title,\n    Footer,\n    FooterClosing,\n    BarChart,\n    LineChart\n  },\n  methods: {\n    start: async function() {\n      try {\n        const response = await this.axios.get(\n          \"http://oehu.local:8000/oehu/start\"\n        );\n        console.log(\"Start response: \", response);\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    stop: async function() {\n      try {\n        const response = await this.axios.get(\n          \"http://oehu.local:8000/oehu/stop\"\n        );\n        console.log(\"Stop response: \", response);\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    getDeviceData: async function() {\n      try {\n        let self = this;\n        const response = await this.axios.get(\n          \"https://api.oehu.org/devices?deviceId=\" + self.deviceId\n        );\n        this.handleDevicesData(response.data[0]);\n        // After 10 seconds: reload data\n        setTimeout(function() {\n          self.getDeviceData();\n        }, 10000);\n      } catch (error) {\n        // console.error(error);\n      }\n    },\n    getDashboardStatistics: async function() {\n      this.loadedKwh7Days = false;\n      this.loadedKwh31Days = false;\n      this.loadedGas7Days = false;\n      this.loadedGas31Days = false;\n\n      /**\n       * KwH\n       */\n      try {\n        const response = await this.axios.get(\n          \"https://api.oehu.org/statistics/dashboard?data=kwh&days=7&deviceId=\" + this.deviceId\n        );\n\n        //fill LineChart\n        this.lineChartDataKwh7Days = {\n          labels: response.data.xAxis,\n          datasets: [\n            {\n              label: \"KwH usage\",\n              backgroundColor: \"#FFE200\",\n              data: response.data.yAxis\n            }\n          ]\n        };\n        this.loadedKwh7Days = true;\n      } catch (error) {\n        console.error(error);\n      }\n\n      try {\n        const response = await this.axios.get(\n            \"https://api.oehu.org/statistics/dashboard?data=kwh&days=31&deviceId=\" + this.deviceId\n        );\n\n        //fill LineChart\n        this.lineChartDataKwh31Days = {\n          labels: response.data.xAxis,\n          datasets: [\n            {\n              label: \"KwH usage\",\n              backgroundColor: \"#FFE200\",\n              data: response.data.yAxis\n            }\n          ]\n        };\n        this.loadedKwh31Days = true;\n        } catch (error) {\n          console.error(error);\n        }\n\n        /**\n         * Gas\n         */\n        try {\n            const response = await this.axios.get(\n                \"https://api.oehu.org/statistics/dashboard?data=gas&days=7&deviceId=\" + this.deviceId\n            );\n\n            //fill LineChart\n            this.lineChartDataGas7Days = {\n                labels: response.data.xAxis,\n                datasets: [\n                    {\n                        label: \"Gas usage\",\n                        backgroundColor: \"#FFE200\",\n                        data: response.data.yAxis\n                    }\n                ]\n            };\n            this.loadedGas7Days = true;\n        } catch (error) {\n            console.error(error);\n        }\n\n        try {\n            const response = await this.axios.get(\n                \"https://api.oehu.org/statistics/dashboard?data=gas&days=31&deviceId=\" + this.deviceId\n            );\n\n            //fill LineChart\n            this.lineChartDataGas31Days = {\n                labels: response.data.xAxis,\n                datasets: [\n                    {\n                        label: \"Gas usage\",\n                        backgroundColor: \"#FFE200\",\n                        data: response.data.yAxis\n                    }\n                ]\n            };\n            this.loadedGas31Days = true;\n        } catch (error) {\n            console.error(error);\n        }\n    },\n    handleDevicesData(data) {\n      this.devices.push({\n        id: data.deviceId,\n        position: {\n          lat: data.metadata.metadata.location.coordinates[0],\n          lng: data.metadata.metadata.location.coordinates[1]\n        },\n        electricityReceived: data.metadata.electricityReceived,\n        electricityDelivered: data.metadata.electricityDelivered,\n        gasReceived: data.metadata.gasReceived\n      });\n      this.electricityReceived =\n        data.metadata.metadata.electricityReceived.total;\n      this.electricityDelivered =\n        data.metadata.metadata.electricityDelivered.total;\n      this.gasReceived = data.metadata.metadata.gasReceived;\n    },\n  },\n  beforeMount() {\n    this.deviceId = self.$cookies.get(\"devices\");\n  },\n  mounted() {\n    // Redirect to login if not logged in\n    if (this.deviceId == undefined) {\n        document.location = \"/login\";\n    } else {\n        this.getDeviceData();\n        this.getDashboardStatistics(7);\n    }\n  }\n};\n</script>\n\n<style scoped lang=\"scss\">\n@import \"../assets/sass/mix.scss\";\n\n.dashboard {\n  font-size: 18px;\n  font-weight: 400;\n\n  dl {\n    margin-top: 45px;\n  }\n\n  dd {\n    margin-left: 50px;\n  }\n\n  p {\n    margin: 30px 0;\n  }\n\n  .meters-wrapper {\n    display: flex;\n    flex-wrap: wrap;\n  }\n\n  .container {\n    width: 50vw;\n    max-width: 100vw;\n    margin: 0 auto;\n    padding-bottom: 70px;\n\n    @include mobile() {\n      width: 100%;\n    }\n  }\n}\n\n.small {\n  width: 600px;\n  height: 600px;\n}\n\n.Title {\n  margin-top: 50px;\n}\n\nh2 {\n  margin: 30px 0 15px 0;\n  font-size: 38px;\n  line-height: 64px;\n\n  @include mobile() {\n    font-size: 28px;\n    line-height: 44px;\n  }\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Dashboard.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Dashboard.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Dashboard.vue?vue&type=template&id=02fe3418&scoped=true&\"\nimport script from \"./Dashboard.vue?vue&type=script&lang=js&\"\nexport * from \"./Dashboard.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Dashboard.vue?vue&type=style&index=0&id=02fe3418&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"02fe3418\",\n  null\n  \n)\n\ncomponent.options.__file = \"Dashboard.vue\"\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"device-data-list flex flex-wrap\"},_vm._l((_vm.transactions),function(tx){return _c('div',{staticClass:\"device-data-list_item\"},[_c('div',{staticClass:\"lastUpdateFormatted\"},[_vm._v(\"\\n      \"+_vm._s(tx.metadata.metadata.lastUpdateFormatted)+\"\\n    \")]),_c('div',{staticClass:\"electricityReceived\"},[_c('label',[_vm._v(\"Electricity received\")]),_c('small',[_vm._v(\"Total\")]),_c('span',[_vm._v(_vm._s(tx.metadata.metadata.electricityReceived.total ? tx.metadata.metadata.electricityReceived.total.toFixed(2) : 0))]),_c('small',[_vm._v(\"Tariff1\")]),_c('span',[_vm._v(_vm._s(tx.metadata.metadata.electricityReceived.tariff1 ? tx.metadata.metadata.electricityReceived.tariff1.toFixed(2) : 0))]),_c('small',[_vm._v(\"Tariff2\")]),_c('span',[_vm._v(_vm._s(tx.metadata.metadata.electricityReceived.tariff2 ? tx.metadata.metadata.electricityReceived.tariff2.toFixed(2) : 0))])]),_c('div',{staticClass:\"electricityDelivered\"},[_c('label',[_vm._v(\"Electricity delivered\")]),_c('small',[_vm._v(\"Total\")]),_c('span',[_vm._v(_vm._s(tx.metadata.metadata.electricityDelivered.total ? tx.metadata.metadata.electricityDelivered.total.toFixed(2) : 0))]),_c('small',[_vm._v(\"Tariff1\")]),_c('span',[_vm._v(_vm._s(tx.metadata.metadata.electricityDelivered.tariff1 ? tx.metadata.metadata.electricityDelivered.tariff1.toFixed(2) : 0))]),_c('small',[_vm._v(\"Tariff2\")]),_c('span',[_vm._v(_vm._s(tx.metadata.metadata.electricityDelivered.tariff2 ? tx.metadata.metadata.electricityDelivered.tariff2.toFixed(2) : 0))])]),_c('div',[_c('label',[_vm._v(\"Gas received\")]),_vm._v(\"\\n      \"+_vm._s(tx.metadata.metadata.gasReceived)+\"\\n    \")])])}))}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"device-data-list flex flex-wrap\">\n    <div class=\"device-data-list_item\" v-for=\"tx in transactions\">\n      <div class=\"lastUpdateFormatted\">\n        {{ tx.metadata.metadata.lastUpdateFormatted }}\n      </div>\n\n      <div class=\"electricityReceived\">\n        <label>Electricity received</label>\n        <small>Total</small>\n        <span>{{ tx.metadata.metadata.electricityReceived.total ? tx.metadata.metadata.electricityReceived.total.toFixed(2) : 0 }}</span>\n        <small>Tariff1</small>\n        <span>{{ tx.metadata.metadata.electricityReceived.tariff1 ? tx.metadata.metadata.electricityReceived.tariff1.toFixed(2) : 0 }}</span>\n        <small>Tariff2</small>\n        <span>{{ tx.metadata.metadata.electricityReceived.tariff2 ? tx.metadata.metadata.electricityReceived.tariff2.toFixed(2) : 0 }}</span>\n      </div>\n\n      <div class=\"electricityDelivered\">\n        <label>Electricity delivered</label>\n        <small>Total</small>\n        <span>{{ tx.metadata.metadata.electricityDelivered.total ? tx.metadata.metadata.electricityDelivered.total.toFixed(2) : 0 }}</span>\n        <small>Tariff1</small>\n        <span>{{ tx.metadata.metadata.electricityDelivered.tariff1 ? tx.metadata.metadata.electricityDelivered.tariff1.toFixed(2) : 0 }}</span>\n        <small>Tariff2</small>\n        <span>{{ tx.metadata.metadata.electricityDelivered.tariff2 ? tx.metadata.metadata.electricityDelivered.tariff2.toFixed(2) : 0 }}</span>\n      </div>\n\n      <div>\n        <label>Gas received</label>\n        {{ tx.metadata.metadata.gasReceived }}\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped lang=\"scss\">\n.device-data-list {\n  width: 81%;\n  margin: 0 auto;\n}\n.device-data-list_item {\n  max-width: 100vw;\n  overflow: auto;\n  margin-bottom: 30px;\n  transition: color 0.1s 0.8s;\n  padding: 2px;\n  text-align: center;\n}\n@media(min-width: 1200px) {\n  .device-data-list_item {\n    max-width: 26vw;\n    padding: 15px;\n  }\n}\n.device-data-list_item:hover,\n.device-data-list_item:focus,\n.device-data-list_item.is-active {\n  background-color: #fff;\n  color: #000;\n  transition: color 0s, background 0s 0.8s;\n}\nlabel {\n  font-weight: bold;\n  color: #000;\n  display: block;\n  width: 100%;\n  margin-top: 15px;\n  border-radius: 15px;\n}\nsmall {\n  margin: 0 10px;\n}\n.lastUpdateFormatted {\n  font-size: 1.2em;\n  margin: 15px 0;\n  color: #000;\n  background: #fff;\n  padding: 1px 15px; \n}\n.lastUpdateFormatted label {\n  margin-top: 0;\n}\n\n.flex > div {\n  width: 100%;\n}\n</style>\n\n<script>\n    import moment from 'moment';\n\n    import Button from \"@/components/common/Button.vue\";\n    import Meter from \"@/components/common/Meter.vue\";\n    import Title from '@/components/common/Title.vue'\n\n    let getApiUrl = (deviceId) => {\n        let apiUrl = 'https://api.oehu.org/transactions?raw=true';\n        return apiUrl + (deviceId ? '&deviceId=' + deviceId : '');\n    }\n\n    let onlyOneTransactionPerDevice = (transactions) => {\n        let ret = [], idsDone = [];\n        for (let i in transactions) {\n            if( idsDone[transactions[i].asset.id] == undefined ) {\n                ret.push(transactions[i]);\n                idsDone[transactions[i].asset.id] = true;\n            }\n        }\n        return ret;\n    }\n\n    export default {\n        name: \"device-data-list\",\n        props: [\"deviceId\"],\n        data() {\n            return {\n                transactions: []\n            }\n        },\n        components: {\n            Button,\n            Title\n        },\n        methods: {\n            async getTransactions() {\n                try {\n                    var self = this;\n                    // Get transactions\n                    let transactions = await this.axios.get(getApiUrl(this.deviceId));\n                    // Get formatted date\n                    for (var i = 0; i <= transactions.data.length - 1; i++) {\n                        transactions.data[i].metadata.metadata.lastUpdateFormatted =\n                            moment(transactions.data[i].metadata.metadata.lastUpdate).format('YYYY-MM-DD HH:mm:ss');\n                    }\n                    self.transactions = transactions.data;\n                    // If no deviceId is set: show only 1 tx per device\n                    if( ! this.deviceId) {\n                        self.transactions = onlyOneTransactionPerDevice(self.transactions);\n                    }\n                    // After 60 seconds: reload data\n                    setTimeout(function() {\n                        self.getTransactions();\n                    }, 60000)\n                } catch (error) {\n                    console.error(error);\n                }\n            }\n        },\n        mounted() {\n          this.getTransactions();\n        }\n    }\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DeviceDataList.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DeviceDataList.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./DeviceDataList.vue?vue&type=template&id=b4548df0&scoped=true&\"\nimport script from \"./DeviceDataList.vue?vue&type=script&lang=js&\"\nexport * from \"./DeviceDataList.vue?vue&type=script&lang=js&\"\nimport style0 from \"./DeviceDataList.vue?vue&type=style&index=0&id=b4548df0&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"b4548df0\",\n  null\n  \n)\n\ncomponent.options.__file = \"DeviceDataList.vue\"\nexport default component.exports","'use strict';\n\nvar helpers = require('../helpers/index');\n\nfunction filterByPosition(array, position) {\n\treturn helpers.where(array, function(v) {\n\t\treturn v.position === position;\n\t});\n}\n\nfunction sortByWeight(array, reverse) {\n\tarray.forEach(function(v, i) {\n\t\tv._tmpIndex_ = i;\n\t\treturn v;\n\t});\n\tarray.sort(function(a, b) {\n\t\tvar v0 = reverse ? b : a;\n\t\tvar v1 = reverse ? a : b;\n\t\treturn v0.weight === v1.weight ?\n\t\t\tv0._tmpIndex_ - v1._tmpIndex_ :\n\t\t\tv0.weight - v1.weight;\n\t});\n\tarray.forEach(function(v) {\n\t\tdelete v._tmpIndex_;\n\t});\n}\n\n/**\n * @interface ILayoutItem\n * @prop {String} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {Number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {Boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n * @prop {Function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {Function} update - Takes two parameters: width and height. Returns size of item\n * @prop {Function} getPadding -  Returns an object with padding on the edges\n * @prop {Number} width - Width of item. Must be valid after update()\n * @prop {Number} height - Height of item. Must be valid after update()\n * @prop {Number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nmodule.exports = {\n\tdefaults: {},\n\n\t/**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {ILayoutItem} item - the item to add to be layed out\n\t */\n\taddBox: function(chart, item) {\n\t\tif (!chart.boxes) {\n\t\t\tchart.boxes = [];\n\t\t}\n\n\t\t// initialize item with default values\n\t\titem.fullWidth = item.fullWidth || false;\n\t\titem.position = item.position || 'top';\n\t\titem.weight = item.weight || 0;\n\n\t\tchart.boxes.push(item);\n\t},\n\n\t/**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {Object} layoutItem - the item to remove from the layout\n\t */\n\tremoveBox: function(chart, layoutItem) {\n\t\tvar index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\t\tif (index !== -1) {\n\t\t\tchart.boxes.splice(index, 1);\n\t\t}\n\t},\n\n\t/**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {Object} item - the item to configure with the given options\n\t * @param {Object} options - the new item options.\n\t */\n\tconfigure: function(chart, item, options) {\n\t\tvar props = ['fullWidth', 'position', 'weight'];\n\t\tvar ilen = props.length;\n\t\tvar i = 0;\n\t\tvar prop;\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\tprop = props[i];\n\t\t\tif (options.hasOwnProperty(prop)) {\n\t\t\t\titem[prop] = options[prop];\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {Number} width - the width to fit into\n\t * @param {Number} height - the height to fit into\n\t */\n\tupdate: function(chart, width, height) {\n\t\tif (!chart) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar layoutOptions = chart.options.layout || {};\n\t\tvar padding = helpers.options.toPadding(layoutOptions.padding);\n\t\tvar leftPadding = padding.left;\n\t\tvar rightPadding = padding.right;\n\t\tvar topPadding = padding.top;\n\t\tvar bottomPadding = padding.bottom;\n\n\t\tvar leftBoxes = filterByPosition(chart.boxes, 'left');\n\t\tvar rightBoxes = filterByPosition(chart.boxes, 'right');\n\t\tvar topBoxes = filterByPosition(chart.boxes, 'top');\n\t\tvar bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n\t\tvar chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea');\n\n\t\t// Sort boxes by weight. A higher weight is further away from the chart area\n\t\tsortByWeight(leftBoxes, true);\n\t\tsortByWeight(rightBoxes, false);\n\t\tsortByWeight(topBoxes, true);\n\t\tsortByWeight(bottomBoxes, false);\n\n\t\t// Essentially we now have any number of boxes on each of the 4 sides.\n\t\t// Our canvas looks like the following.\n\t\t// The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n\t\t// B1 is the bottom axis\n\t\t// There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n\t\t// These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n\t\t// an error will be thrown.\n\t\t//\n\t\t// |----------------------------------------------------|\n\t\t// |                  T1 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t// |    |    |                 T2                  |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    | C1 |                           | C2 |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    |                                     |    |\n\t\t// | L1 | L2 |           ChartArea (C0)            | R1 |\n\t\t// |    |    |                                     |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    | C3 |                           | C4 |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    |                 B1                  |    |\n\t\t// |----------------------------------------------------|\n\t\t// |                  B2 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t//\n\t\t// What we do to find the best sizing, we do the following\n\t\t// 1. Determine the minimum size of the chart area.\n\t\t// 2. Split the remaining width equally between each vertical axis\n\t\t// 3. Split the remaining height equally between each horizontal axis\n\t\t// 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n\t\t// 5. Adjust the sizes of each axis based on it's minimum reported size.\n\t\t// 6. Refit each axis\n\t\t// 7. Position each axis in the final location\n\t\t// 8. Tell the chart the final location of the chart area\n\t\t// 9. Tell any axes that overlay the chart area the positions of the chart area\n\n\t\t// Step 1\n\t\tvar chartWidth = width - leftPadding - rightPadding;\n\t\tvar chartHeight = height - topPadding - bottomPadding;\n\t\tvar chartAreaWidth = chartWidth / 2; // min 50%\n\t\tvar chartAreaHeight = chartHeight / 2; // min 50%\n\n\t\t// Step 2\n\t\tvar verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length);\n\n\t\t// Step 3\n\t\tvar horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length);\n\n\t\t// Step 4\n\t\tvar maxChartAreaWidth = chartWidth;\n\t\tvar maxChartAreaHeight = chartHeight;\n\t\tvar minBoxSizes = [];\n\n\t\tfunction getMinimumBoxSize(box) {\n\t\t\tvar minSize;\n\t\t\tvar isHorizontal = box.isHorizontal();\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\n\t\t\t\tmaxChartAreaHeight -= minSize.height;\n\t\t\t} else {\n\t\t\t\tminSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n\t\t\t\tmaxChartAreaWidth -= minSize.width;\n\t\t\t}\n\n\t\t\tminBoxSizes.push({\n\t\t\t\thorizontal: isHorizontal,\n\t\t\t\tminSize: minSize,\n\t\t\t\tbox: box,\n\t\t\t});\n\t\t}\n\n\t\thelpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize);\n\n\t\t// If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\t\tvar maxHorizontalLeftPadding = 0;\n\t\tvar maxHorizontalRightPadding = 0;\n\t\tvar maxVerticalTopPadding = 0;\n\t\tvar maxVerticalBottomPadding = 0;\n\n\t\thelpers.each(topBoxes.concat(bottomBoxes), function(horizontalBox) {\n\t\t\tif (horizontalBox.getPadding) {\n\t\t\t\tvar boxPadding = horizontalBox.getPadding();\n\t\t\t\tmaxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);\n\t\t\t\tmaxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);\n\t\t\t}\n\t\t});\n\n\t\thelpers.each(leftBoxes.concat(rightBoxes), function(verticalBox) {\n\t\t\tif (verticalBox.getPadding) {\n\t\t\t\tvar boxPadding = verticalBox.getPadding();\n\t\t\t\tmaxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);\n\t\t\t\tmaxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);\n\t\t\t}\n\t\t});\n\n\t\t// At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n\t\t// be if the axes are drawn at their minimum sizes.\n\t\t// Steps 5 & 6\n\t\tvar totalLeftBoxesWidth = leftPadding;\n\t\tvar totalRightBoxesWidth = rightPadding;\n\t\tvar totalTopBoxesHeight = topPadding;\n\t\tvar totalBottomBoxesHeight = bottomPadding;\n\n\t\t// Function to fit a box\n\t\tfunction fitBox(box) {\n\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBox) {\n\t\t\t\treturn minBox.box === box;\n\t\t\t});\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tif (box.isHorizontal()) {\n\t\t\t\t\tvar scaleMargin = {\n\t\t\t\t\t\tleft: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),\n\t\t\t\t\t\tright: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tbottom: 0\n\t\t\t\t\t};\n\n\t\t\t\t\t// Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n\t\t\t\t\t// on the margin. Sometimes they need to increase in size slightly\n\t\t\t\t\tbox.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n\t\t\t\t} else {\n\t\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Update, and calculate the left and right margins for the horizontal boxes\n\t\thelpers.each(leftBoxes.concat(rightBoxes), fitBox);\n\n\t\thelpers.each(leftBoxes, function(box) {\n\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(rightBoxes, function(box) {\n\t\t\ttotalRightBoxesWidth += box.width;\n\t\t});\n\n\t\t// Set the Left and Right margins for the horizontal boxes\n\t\thelpers.each(topBoxes.concat(bottomBoxes), fitBox);\n\n\t\t// Figure out how much margin is on the top and bottom of the vertical boxes\n\t\thelpers.each(topBoxes, function(box) {\n\t\t\ttotalTopBoxesHeight += box.height;\n\t\t});\n\n\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t});\n\n\t\tfunction finalFitVerticalBox(box) {\n\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minSize) {\n\t\t\t\treturn minSize.box === box;\n\t\t\t});\n\n\t\t\tvar scaleMargin = {\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: totalTopBoxesHeight,\n\t\t\t\tbottom: totalBottomBoxesHeight\n\t\t\t};\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\n\t\t\t}\n\t\t}\n\n\t\t// Let the left layout know the final margin\n\t\thelpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox);\n\n\t\t// Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\t\ttotalLeftBoxesWidth = leftPadding;\n\t\ttotalRightBoxesWidth = rightPadding;\n\t\ttotalTopBoxesHeight = topPadding;\n\t\ttotalBottomBoxesHeight = bottomPadding;\n\n\t\thelpers.each(leftBoxes, function(box) {\n\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(rightBoxes, function(box) {\n\t\t\ttotalRightBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(topBoxes, function(box) {\n\t\t\ttotalTopBoxesHeight += box.height;\n\t\t});\n\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t});\n\n\t\t// We may be adding some padding to account for rotated x axis labels\n\t\tvar leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);\n\t\ttotalLeftBoxesWidth += leftPaddingAddition;\n\t\ttotalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);\n\n\t\tvar topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);\n\t\ttotalTopBoxesHeight += topPaddingAddition;\n\t\ttotalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0);\n\n\t\t// Figure out if our chart area changed. This would occur if the dataset layout label rotation\n\t\t// changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n\t\t// without calling `fit` again\n\t\tvar newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\n\t\tvar newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\n\n\t\tif (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n\t\t\thelpers.each(leftBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers.each(rightBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers.each(topBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmaxChartAreaHeight = newMaxChartAreaHeight;\n\t\t\tmaxChartAreaWidth = newMaxChartAreaWidth;\n\t\t}\n\n\t\t// Step 7 - Position the boxes\n\t\tvar left = leftPadding + leftPaddingAddition;\n\t\tvar top = topPadding + topPaddingAddition;\n\n\t\tfunction placeBox(box) {\n\t\t\tif (box.isHorizontal()) {\n\t\t\t\tbox.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;\n\t\t\t\tbox.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;\n\t\t\t\tbox.top = top;\n\t\t\t\tbox.bottom = top + box.height;\n\n\t\t\t\t// Move to next point\n\t\t\t\ttop = box.bottom;\n\n\t\t\t} else {\n\n\t\t\t\tbox.left = left;\n\t\t\t\tbox.right = left + box.width;\n\t\t\t\tbox.top = totalTopBoxesHeight;\n\t\t\t\tbox.bottom = totalTopBoxesHeight + maxChartAreaHeight;\n\n\t\t\t\t// Move to next point\n\t\t\t\tleft = box.right;\n\t\t\t}\n\t\t}\n\n\t\thelpers.each(leftBoxes.concat(topBoxes), placeBox);\n\n\t\t// Account for chart width and height\n\t\tleft += maxChartAreaWidth;\n\t\ttop += maxChartAreaHeight;\n\n\t\thelpers.each(rightBoxes, placeBox);\n\t\thelpers.each(bottomBoxes, placeBox);\n\n\t\t// Step 8\n\t\tchart.chartArea = {\n\t\t\tleft: totalLeftBoxesWidth,\n\t\t\ttop: totalTopBoxesHeight,\n\t\t\tright: totalLeftBoxesWidth + maxChartAreaWidth,\n\t\t\tbottom: totalTopBoxesHeight + maxChartAreaHeight\n\t\t};\n\n\t\t// Step 9\n\t\thelpers.each(chartAreaBoxes, function(box) {\n\t\t\tbox.left = chart.chartArea.left;\n\t\t\tbox.top = chart.chartArea.top;\n\t\t\tbox.right = chart.chartArea.right;\n\t\t\tbox.bottom = chart.chartArea.bottom;\n\n\t\t\tbox.update(maxChartAreaWidth, maxChartAreaHeight);\n\t\t});\n\t}\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nmodule.exports = {\n\t/**\n\t * Namespace to hold formatters for different types of ticks\n\t * @namespace Chart.Ticks.formatters\n\t */\n\tformatters: {\n\t\t/**\n\t\t * Formatter for value labels\n\t\t * @method Chart.Ticks.formatters.values\n\t\t * @param value the value to display\n\t\t * @return {String|Array} the label to display\n\t\t */\n\t\tvalues: function(value) {\n\t\t\treturn helpers.isArray(value) ? value : '' + value;\n\t\t},\n\n\t\t/**\n\t\t * Formatter for linear numeric ticks\n\t\t * @method Chart.Ticks.formatters.linear\n\t\t * @param tickValue {Number} the value to be formatted\n\t\t * @param index {Number} the position of the tickValue parameter in the ticks array\n\t\t * @param ticks {Array<Number>} the list of ticks being converted\n\t\t * @return {String} string representation of the tickValue parameter\n\t\t */\n\t\tlinear: function(tickValue, index, ticks) {\n\t\t\t// If we have lots of ticks, don't use the ones\n\t\t\tvar delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\n\n\t\t\t// If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\t\t\tif (Math.abs(delta) > 1) {\n\t\t\t\tif (tickValue !== Math.floor(tickValue)) {\n\t\t\t\t\t// not an integer\n\t\t\t\t\tdelta = tickValue - Math.floor(tickValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar logDelta = helpers.log10(Math.abs(delta));\n\t\t\tvar tickString = '';\n\n\t\t\tif (tickValue !== 0) {\n\t\t\t\tvar numDecimal = -1 * Math.floor(logDelta);\n\t\t\t\tnumDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\t\t\t\ttickString = tickValue.toFixed(numDecimal);\n\t\t\t} else {\n\t\t\t\ttickString = '0'; // never show decimal places for 0\n\t\t\t}\n\n\t\t\treturn tickString;\n\t\t},\n\n\t\tlogarithmic: function(tickValue, index, ticks) {\n\t\t\tvar remain = tickValue / (Math.pow(10, Math.floor(helpers.log10(tickValue))));\n\n\t\t\tif (tickValue === 0) {\n\t\t\t\treturn '0';\n\t\t\t} else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n\t\t\t\treturn tickValue.toExponential();\n\t\t\t}\n\t\t\treturn '';\n\t\t}\n\t}\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\nvar basic = require('./platform.basic');\nvar dom = require('./platform.dom');\n\n// @TODO Make possible to select another platform at build time.\nvar implementation = dom._enabled ? dom : basic;\n\n/**\n * @namespace Chart.platform\n * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n * @since 2.4.0\n */\nmodule.exports = helpers.extend({\n\t/**\n\t * @since 2.7.0\n\t */\n\tinitialize: function() {},\n\n\t/**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {*} item - The native item from which to acquire context (platform specific)\n\t * @param {Object} options - The chart options\n\t * @returns {CanvasRenderingContext2D} context2d instance\n\t */\n\tacquireContext: function() {},\n\n\t/**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {Boolean} true if the method succeeded, else false\n\t */\n\treleaseContext: function() {},\n\n\t/**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {String} type - The ({@link IEvent}) type to listen for\n\t * @param {Function} listener - Receives a notification (an object that implements\n\t * the {@link IEvent} interface) when an event of the specified type occurs.\n\t */\n\taddEventListener: function() {},\n\n\t/**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart -Chart from which to remove the listener\n\t * @param {String} type - The ({@link IEvent}) type to remove\n\t * @param {Function} listener - The listener function to remove from the event target.\n\t */\n\tremoveEventListener: function() {}\n\n}, implementation);\n\n/**\n * @interface IPlatform\n * Allows abstracting platform dependencies away from the chart\n * @borrows Chart.platform.acquireContext as acquireContext\n * @borrows Chart.platform.releaseContext as releaseContext\n * @borrows Chart.platform.addEventListener as addEventListener\n * @borrows Chart.platform.removeEventListener as removeEventListener\n */\n\n/**\n * @interface IEvent\n * @prop {String} type - The event type name, possible values are:\n * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',\n * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'\n * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')\n * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)\n * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)\n */\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Radar = function(context, config) {\n\t\tconfig.type = 'radar';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nmodule.exports = {};\nmodule.exports.filler = require('./plugin.filler');\nmodule.exports.legend = require('./plugin.legend');\nmodule.exports.title = require('./plugin.title');\n","/* MIT license */\nvar colorNames = require('color-name');\n\nmodule.exports = {\n   getRgba: getRgba,\n   getHsla: getHsla,\n   getRgb: getRgb,\n   getHsl: getHsl,\n   getHwb: getHwb,\n   getAlpha: getAlpha,\n\n   hexString: hexString,\n   rgbString: rgbString,\n   rgbaString: rgbaString,\n   percentString: percentString,\n   percentaString: percentaString,\n   hslString: hslString,\n   hslaString: hslaString,\n   hwbString: hwbString,\n   keyword: keyword\n}\n\nfunction getRgba(string) {\n   if (!string) {\n      return;\n   }\n   var abbr =  /^#([a-fA-F0-9]{3})$/i,\n       hex =  /^#([a-fA-F0-9]{6})$/i,\n       rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       keyword = /(\\w+)/;\n\n   var rgb = [0, 0, 0],\n       a = 1,\n       match = string.match(abbr);\n   if (match) {\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n   }\n   else if (match = string.match(hex)) {\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n   }\n   else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i + 1]);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n         return [0, 0, 0, 0];\n      }\n      rgb = colorNames[match[1]];\n      if (!rgb) {\n         return;\n      }\n   }\n\n   for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n   }\n   if (!a && a != 0) {\n      a = 1;\n   }\n   else {\n      a = scale(a, 0, 1);\n   }\n   rgb[3] = a;\n   return rgb;\n}\n\nfunction getHsla(string) {\n   if (!string) {\n      return;\n   }\n   var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hsl);\n   if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n   }\n}\n\nfunction getHwb(string) {\n   if (!string) {\n      return;\n   }\n   var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hwb);\n   if (match) {\n    var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n   }\n}\n\nfunction getRgb(string) {\n   var rgba = getRgba(string);\n   return rgba && rgba.slice(0, 3);\n}\n\nfunction getHsl(string) {\n  var hsla = getHsla(string);\n  return hsla && hsla.slice(0, 3);\n}\n\nfunction getAlpha(string) {\n   var vals = getRgba(string);\n   if (vals) {\n      return vals[3];\n   }\n   else if (vals = getHsla(string)) {\n      return vals[3];\n   }\n   else if (vals = getHwb(string)) {\n      return vals[3];\n   }\n}\n\n// generators\nfunction hexString(rgb) {\n   return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1])\n              + hexDouble(rgb[2]);\n}\n\nfunction rgbString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return rgbaString(rgba, alpha);\n   }\n   return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n}\n\nfunction rgbaString(rgba, alpha) {\n   if (alpha === undefined) {\n      alpha = (rgba[3] !== undefined ? rgba[3] : 1);\n   }\n   return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\n           + \", \" + alpha + \")\";\n}\n\nfunction percentString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return percentaString(rgba, alpha);\n   }\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n\n   return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n}\n\nfunction percentaString(rgba, alpha) {\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n   return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n}\n\nfunction hslString(hsla, alpha) {\n   if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\n      return hslaString(hsla, alpha);\n   }\n   return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n}\n\nfunction hslaString(hsla, alpha) {\n   if (alpha === undefined) {\n      alpha = (hsla[3] !== undefined ? hsla[3] : 1);\n   }\n   return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\n           + alpha + \")\";\n}\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\nfunction hwbString(hwb, alpha) {\n   if (alpha === undefined) {\n      alpha = (hwb[3] !== undefined ? hwb[3] : 1);\n   }\n   return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\n           + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n}\n\nfunction keyword(rgb) {\n  return reverseNames[rgb.slice(0, 3)];\n}\n\n// helpers\nfunction scale(num, min, max) {\n   return Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n  var str = num.toString(16).toUpperCase();\n  return (str.length < 2) ? \"0\" + str : str;\n}\n\n\n//create a list of reverse color names\nvar reverseNames = {};\nfor (var name in colorNames) {\n   reverseNames[colorNames[name]] = name;\n}\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n\ttitle: {\n\t\tdisplay: false,\n\t\tfontStyle: 'bold',\n\t\tfullWidth: true,\n\t\tlineHeight: 1.2,\n\t\tpadding: 10,\n\t\tposition: 'top',\n\t\ttext: '',\n\t\tweight: 2000         // by default greater than legend (1000) to be above\n\t}\n});\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Title = Element.extend({\n\tinitialize: function(config) {\n\t\tvar me = this;\n\t\thelpers.extend(me, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tme.legendHitBoxes = [];\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\n\tbeforeUpdate: noop,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\n\t},\n\tafterUpdate: noop,\n\n\t//\n\n\tbeforeSetDimensions: noop,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop,\n\n\t//\n\n\tbeforeBuildLabels: noop,\n\tbuildLabels: noop,\n\tafterBuildLabels: noop,\n\n\t//\n\n\tbeforeFit: noop,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar opts = me.options;\n\t\tvar display = opts.display;\n\t\tvar fontSize = valueOrDefault(opts.fontSize, defaults.global.defaultFontSize);\n\t\tvar minSize = me.minSize;\n\t\tvar lineCount = helpers.isArray(opts.text) ? opts.text.length : 1;\n\t\tvar lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n\t\tvar textSize = display ? (lineCount * lineHeight) + (opts.padding * 2) : 0;\n\n\t\tif (me.isHorizontal()) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = textSize;\n\t\t} else {\n\t\t\tminSize.width = textSize;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\n\t},\n\tafterFit: noop,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\tvar pos = this.options.position;\n\t\treturn pos === 'top' || pos === 'bottom';\n\t},\n\n\t// Actually draw the title block on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar ctx = me.ctx;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar opts = me.options;\n\t\tvar globalDefaults = defaults.global;\n\n\t\tif (opts.display) {\n\t\t\tvar fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize);\n\t\t\tvar fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\tvar fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\tvar titleFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\t\t\tvar lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n\t\t\tvar offset = lineHeight / 2 + opts.padding;\n\t\t\tvar rotation = 0;\n\t\t\tvar top = me.top;\n\t\t\tvar left = me.left;\n\t\t\tvar bottom = me.bottom;\n\t\t\tvar right = me.right;\n\t\t\tvar maxWidth, titleX, titleY;\n\n\t\t\tctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\n\t\t\tctx.font = titleFont;\n\n\t\t\t// Horizontal\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\ttitleX = left + ((right - left) / 2); // midpoint of the width\n\t\t\t\ttitleY = top + offset;\n\t\t\t\tmaxWidth = right - left;\n\t\t\t} else {\n\t\t\t\ttitleX = opts.position === 'left' ? left + offset : right - offset;\n\t\t\t\ttitleY = top + ((bottom - top) / 2);\n\t\t\t\tmaxWidth = bottom - top;\n\t\t\t\trotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n\t\t\t}\n\n\t\t\tctx.save();\n\t\t\tctx.translate(titleX, titleY);\n\t\t\tctx.rotate(rotation);\n\t\t\tctx.textAlign = 'center';\n\t\t\tctx.textBaseline = 'middle';\n\n\t\t\tvar text = opts.text;\n\t\t\tif (helpers.isArray(text)) {\n\t\t\t\tvar y = 0;\n\t\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\t\tctx.fillText(text[i], 0, y, maxWidth);\n\t\t\t\t\ty += lineHeight;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tctx.fillText(text, 0, 0, maxWidth);\n\t\t\t}\n\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nfunction createNewTitleBlockAndAttach(chart, titleOpts) {\n\tvar title = new Title({\n\t\tctx: chart.ctx,\n\t\toptions: titleOpts,\n\t\tchart: chart\n\t});\n\n\tlayouts.configure(chart, title, titleOpts);\n\tlayouts.addBox(chart, title);\n\tchart.titleBlock = title;\n}\n\nmodule.exports = {\n\tid: 'title',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n\t * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Title,\n\n\tbeforeInit: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\n\t\tif (titleOpts) {\n\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\t\tvar titleBlock = chart.titleBlock;\n\n\t\tif (titleOpts) {\n\t\t\thelpers.mergeIf(titleOpts, defaults.global.title);\n\n\t\t\tif (titleBlock) {\n\t\t\t\tlayouts.configure(chart, titleBlock, titleOpts);\n\t\t\t\ttitleBlock.options = titleOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t\t}\n\t\t} else if (titleBlock) {\n\t\t\tlayouts.removeBox(chart, titleBlock);\n\t\t\tdelete chart.titleBlock;\n\t\t}\n\t}\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\n/**\n * Helper function to get relative position for an event\n * @param {Event|IEvent} event - The event to get the position for\n * @param {Chart} chart - The chart\n * @returns {Point} the event position\n */\nfunction getRelativePosition(e, chart) {\n\tif (e.native) {\n\t\treturn {\n\t\t\tx: e.x,\n\t\t\ty: e.y\n\t\t};\n\t}\n\n\treturn helpers.getRelativePosition(e, chart);\n}\n\n/**\n * Helper function to traverse all of the visible elements in the chart\n * @param chart {chart} the chart\n * @param handler {Function} the callback to execute for each visible item\n */\nfunction parseVisibleItems(chart, handler) {\n\tvar datasets = chart.data.datasets;\n\tvar meta, i, j, ilen, jlen;\n\n\tfor (i = 0, ilen = datasets.length; i < ilen; ++i) {\n\t\tif (!chart.isDatasetVisible(i)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tmeta = chart.getDatasetMeta(i);\n\t\tfor (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n\t\t\tvar element = meta.data[j];\n\t\t\tif (!element._view.skip) {\n\t\t\t\thandler(element);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param items {ChartElement[]} elements to filter\n * @param position {Point} the point to be nearest to\n * @return {ChartElement[]} the nearest items\n */\nfunction getIntersectItems(chart, position) {\n\tvar elements = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (element.inRange(position.x, position.y)) {\n\t\t\telements.push(element);\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in teh chart\n * @param chart {Chart} the chart to look at elements from\n * @param position {Point} the point to be nearest to\n * @param intersect {Boolean} if true, only consider items that intersect the position\n * @param distanceMetric {Function} function to provide the distance between points\n * @return {ChartElement[]} the nearest items\n */\nfunction getNearestItems(chart, position, intersect, distanceMetric) {\n\tvar minDistance = Number.POSITIVE_INFINITY;\n\tvar nearestItems = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (intersect && !element.inRange(position.x, position.y)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar center = element.getCenterPoint();\n\t\tvar distance = distanceMetric(position, center);\n\n\t\tif (distance < minDistance) {\n\t\t\tnearestItems = [element];\n\t\t\tminDistance = distance;\n\t\t} else if (distance === minDistance) {\n\t\t\t// Can have multiple items at the same distance in which case we sort by size\n\t\t\tnearestItems.push(element);\n\t\t}\n\t});\n\n\treturn nearestItems;\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {String} axis the axis mode. x|y|xy\n */\nfunction getDistanceMetricForAxis(axis) {\n\tvar useX = axis.indexOf('x') !== -1;\n\tvar useY = axis.indexOf('y') !== -1;\n\n\treturn function(pt1, pt2) {\n\t\tvar deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n\t\tvar deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n\t\treturn Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n\t};\n}\n\nfunction indexMode(chart, e, options) {\n\tvar position = getRelativePosition(e, chart);\n\t// Default axis for index mode is 'x' to match old behaviour\n\toptions.axis = options.axis || 'x';\n\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\tvar elements = [];\n\n\tif (!items.length) {\n\t\treturn [];\n\t}\n\n\tchart.data.datasets.forEach(function(dataset, datasetIndex) {\n\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\tvar element = meta.data[items[0]._index];\n\n\t\t\t// don't count items that are skipped (null data)\n\t\t\tif (element && !element._view.skip) {\n\t\t\t\telements.push(element);\n\t\t\t}\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * @interface IInteractionOptions\n */\n/**\n * If true, only consider items that intersect the point\n * @name IInterfaceOptions#boolean\n * @type Boolean\n */\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nmodule.exports = {\n\t// Helper function for different modes\n\tmodes: {\n\t\tsingle: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar elements = [];\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\telements.push(element);\n\t\t\t\t\treturn elements;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn elements.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.label\n\t\t * @deprecated since version 2.4.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tlabel: indexMode,\n\n\t\t/**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tindex: indexMode,\n\n\t\t/**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tdataset: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n\t\t\tif (items.length > 0) {\n\t\t\t\titems = chart.getDatasetMeta(items[0]._datasetIndex).data;\n\t\t\t}\n\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.x-axis\n\t\t * @deprecated since version 2.4.0. Use index mode and intersect == true\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\t'x-axis': function(chart, e) {\n\t\t\treturn indexMode(chart, e, {intersect: false});\n\t\t},\n\n\t\t/**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tpoint: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\treturn getIntersectItems(chart, position);\n\t\t},\n\n\t\t/**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tnearest: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar nearestItems = getNearestItems(chart, position, options.intersect, distanceMetric);\n\n\t\t\t// We have multiple items at the same distance from the event. Now sort by smallest\n\t\t\tif (nearestItems.length > 1) {\n\t\t\t\tnearestItems.sort(function(a, b) {\n\t\t\t\t\tvar sizeA = a.getArea();\n\t\t\t\t\tvar sizeB = b.getArea();\n\t\t\t\t\tvar ret = sizeA - sizeB;\n\n\t\t\t\t\tif (ret === 0) {\n\t\t\t\t\t\t// if equal sort by dataset index\n\t\t\t\t\t\tret = a._datasetIndex - b._datasetIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn ret;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Return only 1 item\n\t\t\treturn nearestItems.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tx: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inXRange(position.x)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\ty: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inYRange(position.y)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n};\n","/* global window: false */\n/* global document: false */\n'use strict';\n\nvar color = require('chartjs-color');\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\n\nmodule.exports = function(Chart) {\n\n\t// -- Basic js utility methods\n\n\thelpers.configMerge = function(/* objects ... */) {\n\t\treturn helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n\t\t\tmerger: function(key, target, source, options) {\n\t\t\t\tvar tval = target[key] || {};\n\t\t\t\tvar sval = source[key];\n\n\t\t\t\tif (key === 'scales') {\n\t\t\t\t\t// scale config merging is complex. Add our own function here for that\n\t\t\t\t\ttarget[key] = helpers.scaleMerge(tval, sval);\n\t\t\t\t} else if (key === 'scale') {\n\t\t\t\t\t// used in polar area & radar charts since there is only one scale\n\t\t\t\t\ttarget[key] = helpers.merge(tval, [Chart.scaleService.getScaleDefaults(sval.type), sval]);\n\t\t\t\t} else {\n\t\t\t\t\thelpers._merger(key, target, source, options);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\thelpers.scaleMerge = function(/* objects ... */) {\n\t\treturn helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n\t\t\tmerger: function(key, target, source, options) {\n\t\t\t\tif (key === 'xAxes' || key === 'yAxes') {\n\t\t\t\t\tvar slen = source[key].length;\n\t\t\t\t\tvar i, type, scale;\n\n\t\t\t\t\tif (!target[key]) {\n\t\t\t\t\t\ttarget[key] = [];\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (i = 0; i < slen; ++i) {\n\t\t\t\t\t\tscale = source[key][i];\n\t\t\t\t\t\ttype = helpers.valueOrDefault(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n\t\t\t\t\t\tif (i >= target[key].length) {\n\t\t\t\t\t\t\ttarget[key].push({});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!target[key][i].type || (scale.type && scale.type !== target[key][i].type)) {\n\t\t\t\t\t\t\t// new/untyped scale or type changed: let's apply the new defaults\n\t\t\t\t\t\t\t// then merge source scale to correctly overwrite the defaults.\n\t\t\t\t\t\t\thelpers.merge(target[key][i], [Chart.scaleService.getScaleDefaults(type), scale]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// scales type are the same\n\t\t\t\t\t\t\thelpers.merge(target[key][i], scale);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\thelpers._merger(key, target, source, options);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\thelpers.where = function(collection, filterCallback) {\n\t\tif (helpers.isArray(collection) && Array.prototype.filter) {\n\t\t\treturn collection.filter(filterCallback);\n\t\t}\n\t\tvar filtered = [];\n\n\t\thelpers.each(collection, function(item) {\n\t\t\tif (filterCallback(item)) {\n\t\t\t\tfiltered.push(item);\n\t\t\t}\n\t\t});\n\n\t\treturn filtered;\n\t};\n\thelpers.findIndex = Array.prototype.findIndex ?\n\t\tfunction(array, callback, scope) {\n\t\t\treturn array.findIndex(callback, scope);\n\t\t} :\n\t\tfunction(array, callback, scope) {\n\t\t\tscope = scope === undefined ? array : scope;\n\t\t\tfor (var i = 0, ilen = array.length; i < ilen; ++i) {\n\t\t\t\tif (callback.call(scope, array[i], i, array)) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t};\n\thelpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to start of the array\n\t\tif (helpers.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = -1;\n\t\t}\n\t\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to end of the array\n\t\tif (helpers.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = arrayToSearch.length;\n\t\t}\n\t\tfor (var i = startIndex - 1; i >= 0; i--) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\n\t// -- Math methods\n\thelpers.isNumber = function(n) {\n\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\n\t};\n\thelpers.almostEquals = function(x, y, epsilon) {\n\t\treturn Math.abs(x - y) < epsilon;\n\t};\n\thelpers.almostWhole = function(x, epsilon) {\n\t\tvar rounded = Math.round(x);\n\t\treturn (((rounded - epsilon) < x) && ((rounded + epsilon) > x));\n\t};\n\thelpers.max = function(array) {\n\t\treturn array.reduce(function(max, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.max(max, value);\n\t\t\t}\n\t\t\treturn max;\n\t\t}, Number.NEGATIVE_INFINITY);\n\t};\n\thelpers.min = function(array) {\n\t\treturn array.reduce(function(min, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.min(min, value);\n\t\t\t}\n\t\t\treturn min;\n\t\t}, Number.POSITIVE_INFINITY);\n\t};\n\thelpers.sign = Math.sign ?\n\t\tfunction(x) {\n\t\t\treturn Math.sign(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tx = +x; // convert to a number\n\t\t\tif (x === 0 || isNaN(x)) {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t\treturn x > 0 ? 1 : -1;\n\t\t};\n\thelpers.log10 = Math.log10 ?\n\t\tfunction(x) {\n\t\t\treturn Math.log10(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tvar exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n\t\t\t// Check for whole powers of 10,\n\t\t\t// which due to floating point rounding error should be corrected.\n\t\t\tvar powerOf10 = Math.round(exponent);\n\t\t\tvar isPowerOf10 = x === Math.pow(10, powerOf10);\n\n\t\t\treturn isPowerOf10 ? powerOf10 : exponent;\n\t\t};\n\thelpers.toRadians = function(degrees) {\n\t\treturn degrees * (Math.PI / 180);\n\t};\n\thelpers.toDegrees = function(radians) {\n\t\treturn radians * (180 / Math.PI);\n\t};\n\t// Gets the angle from vertical upright to the point about a centre.\n\thelpers.getAngleFromPoint = function(centrePoint, anglePoint) {\n\t\tvar distanceFromXCenter = anglePoint.x - centrePoint.x;\n\t\tvar distanceFromYCenter = anglePoint.y - centrePoint.y;\n\t\tvar radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n\t\tvar angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n\t\tif (angle < (-0.5 * Math.PI)) {\n\t\t\tangle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n\t\t}\n\n\t\treturn {\n\t\t\tangle: angle,\n\t\t\tdistance: radialDistanceFromCenter\n\t\t};\n\t};\n\thelpers.distanceBetweenPoints = function(pt1, pt2) {\n\t\treturn Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n\t};\n\thelpers.aliasPixel = function(pixelWidth) {\n\t\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\n\t};\n\thelpers.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\n\t\t// Props to Rob Spencer at scaled innovation for his post on splining between points\n\t\t// http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n\t\t// This function must also respect \"skipped\" points\n\n\t\tvar previous = firstPoint.skip ? middlePoint : firstPoint;\n\t\tvar current = middlePoint;\n\t\tvar next = afterPoint.skip ? middlePoint : afterPoint;\n\n\t\tvar d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n\t\tvar d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n\n\t\tvar s01 = d01 / (d01 + d12);\n\t\tvar s12 = d12 / (d01 + d12);\n\n\t\t// If all points are the same, s01 & s02 will be inf\n\t\ts01 = isNaN(s01) ? 0 : s01;\n\t\ts12 = isNaN(s12) ? 0 : s12;\n\n\t\tvar fa = t * s01; // scaling factor for triangle Ta\n\t\tvar fb = t * s12;\n\n\t\treturn {\n\t\t\tprevious: {\n\t\t\t\tx: current.x - fa * (next.x - previous.x),\n\t\t\t\ty: current.y - fa * (next.y - previous.y)\n\t\t\t},\n\t\t\tnext: {\n\t\t\t\tx: current.x + fb * (next.x - previous.x),\n\t\t\t\ty: current.y + fb * (next.y - previous.y)\n\t\t\t}\n\t\t};\n\t};\n\thelpers.EPSILON = Number.EPSILON || 1e-14;\n\thelpers.splineCurveMonotone = function(points) {\n\t\t// This function calculates Bézier control points in a similar way than |splineCurve|,\n\t\t// but preserves monotonicity of the provided data and ensures no local extremums are added\n\t\t// between the dataset discrete points due to the interpolation.\n\t\t// See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n\n\t\tvar pointsWithTangents = (points || []).map(function(point) {\n\t\t\treturn {\n\t\t\t\tmodel: point._model,\n\t\t\t\tdeltaK: 0,\n\t\t\t\tmK: 0\n\t\t\t};\n\t\t});\n\n\t\t// Calculate slopes (deltaK) and initialize tangents (mK)\n\t\tvar pointsLen = pointsWithTangents.length;\n\t\tvar i, pointBefore, pointCurrent, pointAfter;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tvar slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);\n\n\t\t\t\t// In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\t\t\t\tpointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n\t\t\t}\n\n\t\t\tif (!pointBefore || pointBefore.model.skip) {\n\t\t\t\tpointCurrent.mK = pointCurrent.deltaK;\n\t\t\t} else if (!pointAfter || pointAfter.model.skip) {\n\t\t\t\tpointCurrent.mK = pointBefore.deltaK;\n\t\t\t} else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n\t\t\t\tpointCurrent.mK = 0;\n\t\t\t} else {\n\t\t\t\tpointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n\t\t\t}\n\t\t}\n\n\t\t// Adjust tangents to ensure monotonic properties\n\t\tvar alphaK, betaK, tauK, squaredMagnitude;\n\t\tfor (i = 0; i < pointsLen - 1; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tpointAfter = pointsWithTangents[i + 1];\n\t\t\tif (pointCurrent.model.skip || pointAfter.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n\t\t\t\tpointCurrent.mK = pointAfter.mK = 0;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\talphaK = pointCurrent.mK / pointCurrent.deltaK;\n\t\t\tbetaK = pointAfter.mK / pointCurrent.deltaK;\n\t\t\tsquaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\t\t\tif (squaredMagnitude <= 9) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttauK = 3 / Math.sqrt(squaredMagnitude);\n\t\t\tpointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n\t\t\tpointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n\t\t}\n\n\t\t// Compute control points\n\t\tvar deltaX;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointBefore && !pointBefore.model.skip) {\n\t\t\t\tdeltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n\t\t\t\tpointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tdeltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n\t\t\t\tpointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.nextItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index >= collection.length - 1 ? collection[0] : collection[index + 1];\n\t\t}\n\t\treturn index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n\t};\n\thelpers.previousItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n\t\t}\n\t\treturn index <= 0 ? collection[0] : collection[index - 1];\n\t};\n\t// Implementation of the nice number algorithm used in determining where axis labels will go\n\thelpers.niceNum = function(range, round) {\n\t\tvar exponent = Math.floor(helpers.log10(range));\n\t\tvar fraction = range / Math.pow(10, exponent);\n\t\tvar niceFraction;\n\n\t\tif (round) {\n\t\t\tif (fraction < 1.5) {\n\t\t\t\tniceFraction = 1;\n\t\t\t} else if (fraction < 3) {\n\t\t\t\tniceFraction = 2;\n\t\t\t} else if (fraction < 7) {\n\t\t\t\tniceFraction = 5;\n\t\t\t} else {\n\t\t\t\tniceFraction = 10;\n\t\t\t}\n\t\t} else if (fraction <= 1.0) {\n\t\t\tniceFraction = 1;\n\t\t} else if (fraction <= 2) {\n\t\t\tniceFraction = 2;\n\t\t} else if (fraction <= 5) {\n\t\t\tniceFraction = 5;\n\t\t} else {\n\t\t\tniceFraction = 10;\n\t\t}\n\n\t\treturn niceFraction * Math.pow(10, exponent);\n\t};\n\t// Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\thelpers.requestAnimFrame = (function() {\n\t\tif (typeof window === 'undefined') {\n\t\t\treturn function(callback) {\n\t\t\t\tcallback();\n\t\t\t};\n\t\t}\n\t\treturn window.requestAnimationFrame ||\n\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\twindow.oRequestAnimationFrame ||\n\t\t\twindow.msRequestAnimationFrame ||\n\t\t\tfunction(callback) {\n\t\t\t\treturn window.setTimeout(callback, 1000 / 60);\n\t\t\t};\n\t}());\n\t// -- DOM methods\n\thelpers.getRelativePosition = function(evt, chart) {\n\t\tvar mouseX, mouseY;\n\t\tvar e = evt.originalEvent || evt;\n\t\tvar canvas = evt.currentTarget || evt.srcElement;\n\t\tvar boundingRect = canvas.getBoundingClientRect();\n\n\t\tvar touches = e.touches;\n\t\tif (touches && touches.length > 0) {\n\t\t\tmouseX = touches[0].clientX;\n\t\t\tmouseY = touches[0].clientY;\n\n\t\t} else {\n\t\t\tmouseX = e.clientX;\n\t\t\tmouseY = e.clientY;\n\t\t}\n\n\t\t// Scale mouse coordinates into canvas coordinates\n\t\t// by following the pattern laid out by 'jerryj' in the comments of\n\t\t// http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\t\tvar paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\n\t\tvar paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\n\t\tvar paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\n\t\tvar paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\n\t\tvar width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n\t\tvar height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\n\n\t\t// We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n\t\t// the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\t\tmouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\n\t\tmouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\n\n\t\treturn {\n\t\t\tx: mouseX,\n\t\t\ty: mouseY\n\t\t};\n\n\t};\n\n\t// Private helper function to convert max-width/max-height values that may be percentages into a number\n\tfunction parseMaxStyle(styleValue, node, parentProperty) {\n\t\tvar valueInPixels;\n\t\tif (typeof styleValue === 'string') {\n\t\t\tvalueInPixels = parseInt(styleValue, 10);\n\n\t\t\tif (styleValue.indexOf('%') !== -1) {\n\t\t\t\t// percentage * size in dimension\n\t\t\t\tvalueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n\t\t\t}\n\t\t} else {\n\t\t\tvalueInPixels = styleValue;\n\t\t}\n\n\t\treturn valueInPixels;\n\t}\n\n\t/**\n\t * Returns if the given value contains an effective constraint.\n\t * @private\n\t */\n\tfunction isConstrainedValue(value) {\n\t\treturn value !== undefined && value !== null && value !== 'none';\n\t}\n\n\t// Private helper to get a constraint dimension\n\t// @param domNode : the node to check the constraint on\n\t// @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\n\t// @param percentageProperty : property of parent to use when calculating width as a percentage\n\t// @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\n\tfunction getConstraintDimension(domNode, maxStyle, percentageProperty) {\n\t\tvar view = document.defaultView;\n\t\tvar parentNode = domNode.parentNode;\n\t\tvar constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n\t\tvar constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n\t\tvar hasCNode = isConstrainedValue(constrainedNode);\n\t\tvar hasCContainer = isConstrainedValue(constrainedContainer);\n\t\tvar infinity = Number.POSITIVE_INFINITY;\n\n\t\tif (hasCNode || hasCContainer) {\n\t\t\treturn Math.min(\n\t\t\t\thasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\n\t\t\t\thasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n\t\t}\n\n\t\treturn 'none';\n\t}\n\t// returns Number or undefined if no constraint\n\thelpers.getConstraintWidth = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-width', 'clientWidth');\n\t};\n\t// returns Number or undefined if no constraint\n\thelpers.getConstraintHeight = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-height', 'clientHeight');\n\t};\n\thelpers.getMaximumWidth = function(domNode) {\n\t\tvar container = domNode.parentNode;\n\t\tif (!container) {\n\t\t\treturn domNode.clientWidth;\n\t\t}\n\n\t\tvar paddingLeft = parseInt(helpers.getStyle(container, 'padding-left'), 10);\n\t\tvar paddingRight = parseInt(helpers.getStyle(container, 'padding-right'), 10);\n\t\tvar w = container.clientWidth - paddingLeft - paddingRight;\n\t\tvar cw = helpers.getConstraintWidth(domNode);\n\t\treturn isNaN(cw) ? w : Math.min(w, cw);\n\t};\n\thelpers.getMaximumHeight = function(domNode) {\n\t\tvar container = domNode.parentNode;\n\t\tif (!container) {\n\t\t\treturn domNode.clientHeight;\n\t\t}\n\n\t\tvar paddingTop = parseInt(helpers.getStyle(container, 'padding-top'), 10);\n\t\tvar paddingBottom = parseInt(helpers.getStyle(container, 'padding-bottom'), 10);\n\t\tvar h = container.clientHeight - paddingTop - paddingBottom;\n\t\tvar ch = helpers.getConstraintHeight(domNode);\n\t\treturn isNaN(ch) ? h : Math.min(h, ch);\n\t};\n\thelpers.getStyle = function(el, property) {\n\t\treturn el.currentStyle ?\n\t\t\tel.currentStyle[property] :\n\t\t\tdocument.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n\t};\n\thelpers.retinaScale = function(chart, forceRatio) {\n\t\tvar pixelRatio = chart.currentDevicePixelRatio = forceRatio || window.devicePixelRatio || 1;\n\t\tif (pixelRatio === 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar canvas = chart.canvas;\n\t\tvar height = chart.height;\n\t\tvar width = chart.width;\n\n\t\tcanvas.height = height * pixelRatio;\n\t\tcanvas.width = width * pixelRatio;\n\t\tchart.ctx.scale(pixelRatio, pixelRatio);\n\n\t\t// If no style has been set on the canvas, the render size is used as display size,\n\t\t// making the chart visually bigger, so let's enforce it to the \"correct\" values.\n\t\t// See https://github.com/chartjs/Chart.js/issues/3575\n\t\tif (!canvas.style.height && !canvas.style.width) {\n\t\t\tcanvas.style.height = height + 'px';\n\t\t\tcanvas.style.width = width + 'px';\n\t\t}\n\t};\n\t// -- Canvas methods\n\thelpers.fontString = function(pixelSize, fontStyle, fontFamily) {\n\t\treturn fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n\t};\n\thelpers.longestText = function(ctx, font, arrayOfThings, cache) {\n\t\tcache = cache || {};\n\t\tvar data = cache.data = cache.data || {};\n\t\tvar gc = cache.garbageCollect = cache.garbageCollect || [];\n\n\t\tif (cache.font !== font) {\n\t\t\tdata = cache.data = {};\n\t\t\tgc = cache.garbageCollect = [];\n\t\t\tcache.font = font;\n\t\t}\n\n\t\tctx.font = font;\n\t\tvar longest = 0;\n\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\t// Undefined strings and arrays should not be measured\n\t\t\tif (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\n\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, thing);\n\t\t\t} else if (helpers.isArray(thing)) {\n\t\t\t\t// if it is an array lets measure each element\n\t\t\t\t// to do maybe simplify this function a bit so we can do this more recursively?\n\t\t\t\thelpers.each(thing, function(nestedThing) {\n\t\t\t\t\t// Undefined strings and arrays should not be measured\n\t\t\t\t\tif (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\n\t\t\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, nestedThing);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tvar gcLen = gc.length / 2;\n\t\tif (gcLen > arrayOfThings.length) {\n\t\t\tfor (var i = 0; i < gcLen; i++) {\n\t\t\t\tdelete data[gc[i]];\n\t\t\t}\n\t\t\tgc.splice(0, gcLen);\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers.measureText = function(ctx, data, gc, longest, string) {\n\t\tvar textWidth = data[string];\n\t\tif (!textWidth) {\n\t\t\ttextWidth = data[string] = ctx.measureText(string).width;\n\t\t\tgc.push(string);\n\t\t}\n\t\tif (textWidth > longest) {\n\t\t\tlongest = textWidth;\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers.numberOfLabelLines = function(arrayOfThings) {\n\t\tvar numberOfLines = 1;\n\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\tif (helpers.isArray(thing)) {\n\t\t\t\tif (thing.length > numberOfLines) {\n\t\t\t\t\tnumberOfLines = thing.length;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn numberOfLines;\n\t};\n\n\thelpers.color = !color ?\n\t\tfunction(value) {\n\t\t\tconsole.error('Color.js not found!');\n\t\t\treturn value;\n\t\t} :\n\t\tfunction(value) {\n\t\t\t/* global CanvasGradient */\n\t\t\tif (value instanceof CanvasGradient) {\n\t\t\t\tvalue = defaults.global.defaultColor;\n\t\t\t}\n\n\t\t\treturn color(value);\n\t\t};\n\n\thelpers.getHoverColor = function(colorValue) {\n\t\t/* global CanvasPattern */\n\t\treturn (colorValue instanceof CanvasPattern) ?\n\t\t\tcolorValue :\n\t\t\thelpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n\t};\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\n/**\n * Generate a set of linear ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\t// To get a \"nice\" value for the tick spacing, we will use the appropriately named\n\t// \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n\t// for details.\n\n\tvar spacing;\n\tif (generationOptions.stepSize && generationOptions.stepSize > 0) {\n\t\tspacing = generationOptions.stepSize;\n\t} else {\n\t\tvar niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\n\t\tspacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\n\t}\n\tvar niceMin = Math.floor(dataRange.min / spacing) * spacing;\n\tvar niceMax = Math.ceil(dataRange.max / spacing) * spacing;\n\n\t// If min, max and stepSize is set and they make an evenly spaced scale use it.\n\tif (generationOptions.min && generationOptions.max && generationOptions.stepSize) {\n\t\t// If very close to our whole number, use it.\n\t\tif (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\n\t\t\tniceMin = generationOptions.min;\n\t\t\tniceMax = generationOptions.max;\n\t\t}\n\t}\n\n\tvar numSpaces = (niceMax - niceMin) / spacing;\n\t// If very close to our rounded value, use it.\n\tif (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n\t\tnumSpaces = Math.round(numSpaces);\n\t} else {\n\t\tnumSpaces = Math.ceil(numSpaces);\n\t}\n\n\tvar precision = 1;\n\tif (spacing < 1) {\n\t\tprecision = Math.pow(10, spacing.toString().length - 2);\n\t\tniceMin = Math.round(niceMin * precision) / precision;\n\t\tniceMax = Math.round(niceMax * precision) / precision;\n\t}\n\tticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\n\tfor (var j = 1; j < numSpaces; ++j) {\n\t\tticks.push(Math.round((niceMin + j * spacing) * precision) / precision);\n\t}\n\tticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\n\n\treturn ticks;\n}\n\n\nmodule.exports = function(Chart) {\n\n\tvar noop = helpers.noop;\n\n\tChart.LinearScaleBase = Chart.Scale.extend({\n\t\tgetRightValue: function(value) {\n\t\t\tif (typeof value === 'string') {\n\t\t\t\treturn +value;\n\t\t\t}\n\t\t\treturn Chart.Scale.prototype.getRightValue.call(this, value);\n\t\t},\n\n\t\thandleTickRangeOptions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n\t\t\t// do nothing since that would make the chart weird. If the user really wants a weird chart\n\t\t\t// axis, they can manually override it\n\t\t\tif (tickOpts.beginAtZero) {\n\t\t\t\tvar minSign = helpers.sign(me.min);\n\t\t\t\tvar maxSign = helpers.sign(me.max);\n\n\t\t\t\tif (minSign < 0 && maxSign < 0) {\n\t\t\t\t\t// move the top up to 0\n\t\t\t\t\tme.max = 0;\n\t\t\t\t} else if (minSign > 0 && maxSign > 0) {\n\t\t\t\t\t// move the bottom down to 0\n\t\t\t\t\tme.min = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n\t\t\tvar setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n\t\t\tif (tickOpts.min !== undefined) {\n\t\t\t\tme.min = tickOpts.min;\n\t\t\t} else if (tickOpts.suggestedMin !== undefined) {\n\t\t\t\tif (me.min === null) {\n\t\t\t\t\tme.min = tickOpts.suggestedMin;\n\t\t\t\t} else {\n\t\t\t\t\tme.min = Math.min(me.min, tickOpts.suggestedMin);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tickOpts.max !== undefined) {\n\t\t\t\tme.max = tickOpts.max;\n\t\t\t} else if (tickOpts.suggestedMax !== undefined) {\n\t\t\t\tif (me.max === null) {\n\t\t\t\t\tme.max = tickOpts.suggestedMax;\n\t\t\t\t} else {\n\t\t\t\t\tme.max = Math.max(me.max, tickOpts.suggestedMax);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (setMin !== setMax) {\n\t\t\t\t// We set the min or the max but not both.\n\t\t\t\t// So ensure that our range is good\n\t\t\t\t// Inverted or 0 length range can happen when\n\t\t\t\t// ticks.min is set, and no datasets are visible\n\t\t\t\tif (me.min >= me.max) {\n\t\t\t\t\tif (setMin) {\n\t\t\t\t\t\tme.max = me.min + 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.min = me.max - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tme.max++;\n\n\t\t\t\tif (!tickOpts.beginAtZero) {\n\t\t\t\t\tme.min--;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tgetTickLimit: noop,\n\t\thandleDirectionalChanges: noop,\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// Figure out what the max number of ticks we can support it is based on the size of\n\t\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t\t\t// the graph. Make sure we always have at least 2 ticks\n\t\t\tvar maxTicks = me.getTickLimit();\n\t\t\tmaxTicks = Math.max(2, maxTicks);\n\n\t\t\tvar numericGeneratorOptions = {\n\t\t\t\tmaxTicks: maxTicks,\n\t\t\t\tmin: tickOpts.min,\n\t\t\t\tmax: tickOpts.max,\n\t\t\t\tstepSize: helpers.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n\t\t\t};\n\t\t\tvar ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n\n\t\t\tme.handleDirectionalChanges();\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\tticks.reverse();\n\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\tme.ticksAsNumbers = me.ticks.slice();\n\t\t\tme.zeroLineIndex = me.ticks.indexOf(0);\n\n\t\t\tChart.Scale.prototype.convertTicksToLabels.call(me);\n\t\t}\n\t});\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.PolarArea = function(context, config) {\n\t\tconfig.type = 'polarArea';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\n'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar EXPANDO_KEY = '$chartjs';\nvar CSS_PREFIX = 'chartjs-';\nvar CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\nvar CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\nvar ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nvar EVENT_TYPES = {\n\ttouchstart: 'mousedown',\n\ttouchmove: 'mousemove',\n\ttouchend: 'mouseup',\n\tpointerenter: 'mouseenter',\n\tpointerdown: 'mousedown',\n\tpointermove: 'mousemove',\n\tpointerup: 'mouseup',\n\tpointerleave: 'mouseout',\n\tpointerout: 'mouseout'\n};\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns {Number} Size in pixels or undefined if unknown.\n */\nfunction readUsedSize(element, property) {\n\tvar value = helpers.getStyle(element, property);\n\tvar matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n\treturn matches ? Number(matches[1]) : undefined;\n}\n\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n */\nfunction initCanvas(canvas, config) {\n\tvar style = canvas.style;\n\n\t// NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n\t// returns null or '' if no explicit value has been set to the canvas attribute.\n\tvar renderHeight = canvas.getAttribute('height');\n\tvar renderWidth = canvas.getAttribute('width');\n\n\t// Chart.js modifies some canvas values that we want to restore on destroy\n\tcanvas[EXPANDO_KEY] = {\n\t\tinitial: {\n\t\t\theight: renderHeight,\n\t\t\twidth: renderWidth,\n\t\t\tstyle: {\n\t\t\t\tdisplay: style.display,\n\t\t\t\theight: style.height,\n\t\t\t\twidth: style.width\n\t\t\t}\n\t\t}\n\t};\n\n\t// Force canvas to display as block to avoid extra space caused by inline\n\t// elements, which would interfere with the responsive resize process.\n\t// https://github.com/chartjs/Chart.js/issues/2538\n\tstyle.display = style.display || 'block';\n\n\tif (renderWidth === null || renderWidth === '') {\n\t\tvar displayWidth = readUsedSize(canvas, 'width');\n\t\tif (displayWidth !== undefined) {\n\t\t\tcanvas.width = displayWidth;\n\t\t}\n\t}\n\n\tif (renderHeight === null || renderHeight === '') {\n\t\tif (canvas.style.height === '') {\n\t\t\t// If no explicit render height and style height, let's apply the aspect ratio,\n\t\t\t// which one can be specified by the user but also by charts as default option\n\t\t\t// (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n\t\t\tcanvas.height = canvas.width / (config.options.aspectRatio || 2);\n\t\t} else {\n\t\t\tvar displayHeight = readUsedSize(canvas, 'height');\n\t\t\tif (displayWidth !== undefined) {\n\t\t\t\tcanvas.height = displayHeight;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn canvas;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nvar supportsEventListenerOptions = (function() {\n\tvar supports = false;\n\ttry {\n\t\tvar options = Object.defineProperty({}, 'passive', {\n\t\t\tget: function() {\n\t\t\t\tsupports = true;\n\t\t\t}\n\t\t});\n\t\twindow.addEventListener('e', null, options);\n\t} catch (e) {\n\t\t// continue regardless of error\n\t}\n\treturn supports;\n}());\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nvar eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addEventListener(node, type, listener) {\n\tnode.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeEventListener(node, type, listener) {\n\tnode.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction createEvent(type, chart, x, y, nativeEvent) {\n\treturn {\n\t\ttype: type,\n\t\tchart: chart,\n\t\tnative: nativeEvent || null,\n\t\tx: x !== undefined ? x : null,\n\t\ty: y !== undefined ? y : null,\n\t};\n}\n\nfunction fromNativeEvent(event, chart) {\n\tvar type = EVENT_TYPES[event.type] || event.type;\n\tvar pos = helpers.getRelativePosition(event, chart);\n\treturn createEvent(type, chart, pos.x, pos.y, event);\n}\n\nfunction throttled(fn, thisArg) {\n\tvar ticking = false;\n\tvar args = [];\n\n\treturn function() {\n\t\targs = Array.prototype.slice.call(arguments);\n\t\tthisArg = thisArg || this;\n\n\t\tif (!ticking) {\n\t\t\tticking = true;\n\t\t\thelpers.requestAnimFrame.call(window, function() {\n\t\t\t\tticking = false;\n\t\t\t\tfn.apply(thisArg, args);\n\t\t\t});\n\t\t}\n\t};\n}\n\n// Implementation based on https://github.com/marcj/css-element-queries\nfunction createResizer(handler) {\n\tvar resizer = document.createElement('div');\n\tvar cls = CSS_PREFIX + 'size-monitor';\n\tvar maxSize = 1000000;\n\tvar style =\n\t\t'position:absolute;' +\n\t\t'left:0;' +\n\t\t'top:0;' +\n\t\t'right:0;' +\n\t\t'bottom:0;' +\n\t\t'overflow:hidden;' +\n\t\t'pointer-events:none;' +\n\t\t'visibility:hidden;' +\n\t\t'z-index:-1;';\n\n\tresizer.style.cssText = style;\n\tresizer.className = cls;\n\tresizer.innerHTML =\n\t\t'<div class=\"' + cls + '-expand\" style=\"' + style + '\">' +\n\t\t\t'<div style=\"' +\n\t\t\t\t'position:absolute;' +\n\t\t\t\t'width:' + maxSize + 'px;' +\n\t\t\t\t'height:' + maxSize + 'px;' +\n\t\t\t\t'left:0;' +\n\t\t\t\t'top:0\">' +\n\t\t\t'</div>' +\n\t\t'</div>' +\n\t\t'<div class=\"' + cls + '-shrink\" style=\"' + style + '\">' +\n\t\t\t'<div style=\"' +\n\t\t\t\t'position:absolute;' +\n\t\t\t\t'width:200%;' +\n\t\t\t\t'height:200%;' +\n\t\t\t\t'left:0; ' +\n\t\t\t\t'top:0\">' +\n\t\t\t'</div>' +\n\t\t'</div>';\n\n\tvar expand = resizer.childNodes[0];\n\tvar shrink = resizer.childNodes[1];\n\n\tresizer._reset = function() {\n\t\texpand.scrollLeft = maxSize;\n\t\texpand.scrollTop = maxSize;\n\t\tshrink.scrollLeft = maxSize;\n\t\tshrink.scrollTop = maxSize;\n\t};\n\tvar onScroll = function() {\n\t\tresizer._reset();\n\t\thandler();\n\t};\n\n\taddEventListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n\taddEventListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n\n\treturn resizer;\n}\n\n// https://davidwalsh.name/detect-node-insertion\nfunction watchForRender(node, handler) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\tvar proxy = expando.renderProxy = function(e) {\n\t\tif (e.animationName === CSS_RENDER_ANIMATION) {\n\t\t\thandler();\n\t\t}\n\t};\n\n\thelpers.each(ANIMATION_START_EVENTS, function(type) {\n\t\taddEventListener(node, type, proxy);\n\t});\n\n\t// #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n\t// is removed then added back immediately (same animation frame?). Accessing the\n\t// `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n\t// https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n\t// https://github.com/chartjs/Chart.js/issues/4737\n\texpando.reflow = !!node.offsetParent;\n\n\tnode.classList.add(CSS_RENDER_MONITOR);\n}\n\nfunction unwatchForRender(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar proxy = expando.renderProxy;\n\n\tif (proxy) {\n\t\thelpers.each(ANIMATION_START_EVENTS, function(type) {\n\t\t\tremoveEventListener(node, type, proxy);\n\t\t});\n\n\t\tdelete expando.renderProxy;\n\t}\n\n\tnode.classList.remove(CSS_RENDER_MONITOR);\n}\n\nfunction addResizeListener(node, listener, chart) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n\t// Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\tvar resizer = expando.resizer = createResizer(throttled(function() {\n\t\tif (expando.resizer) {\n\t\t\treturn listener(createEvent('resize', chart));\n\t\t}\n\t}));\n\n\t// The resizer needs to be attached to the node parent, so we first need to be\n\t// sure that `node` is attached to the DOM before injecting the resizer element.\n\twatchForRender(node, function() {\n\t\tif (expando.resizer) {\n\t\t\tvar container = node.parentNode;\n\t\t\tif (container && container !== resizer.parentNode) {\n\t\t\t\tcontainer.insertBefore(resizer, container.firstChild);\n\t\t\t}\n\n\t\t\t// The container size might have changed, let's reset the resizer state.\n\t\t\tresizer._reset();\n\t\t}\n\t});\n}\n\nfunction removeResizeListener(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar resizer = expando.resizer;\n\n\tdelete expando.resizer;\n\tunwatchForRender(node);\n\n\tif (resizer && resizer.parentNode) {\n\t\tresizer.parentNode.removeChild(resizer);\n\t}\n}\n\nfunction injectCSS(platform, css) {\n\t// http://stackoverflow.com/q/3922139\n\tvar style = platform._style || document.createElement('style');\n\tif (!platform._style) {\n\t\tplatform._style = style;\n\t\tcss = '/* Chart.js */\\n' + css;\n\t\tstyle.setAttribute('type', 'text/css');\n\t\tdocument.getElementsByTagName('head')[0].appendChild(style);\n\t}\n\n\tstyle.appendChild(document.createTextNode(css));\n}\n\nmodule.exports = {\n\t/**\n\t * This property holds whether this platform is enabled for the current environment.\n\t * Currently used by platform.js to select the proper implementation.\n\t * @private\n\t */\n\t_enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n\tinitialize: function() {\n\t\tvar keyframes = 'from{opacity:0.99}to{opacity:1}';\n\n\t\tinjectCSS(this,\n\t\t\t// DOM rendering detection\n\t\t\t// https://davidwalsh.name/detect-node-insertion\n\t\t\t'@-webkit-keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\n\t\t\t'@keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\n\t\t\t'.' + CSS_RENDER_MONITOR + '{' +\n\t\t\t\t'-webkit-animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\n\t\t\t\t'animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\n\t\t\t'}'\n\t\t);\n\t},\n\n\tacquireContext: function(item, config) {\n\t\tif (typeof item === 'string') {\n\t\t\titem = document.getElementById(item);\n\t\t} else if (item.length) {\n\t\t\t// Support for array based queries (such as jQuery)\n\t\t\titem = item[0];\n\t\t}\n\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\t// To prevent canvas fingerprinting, some add-ons undefine the getContext\n\t\t// method, for example: https://github.com/kkapsner/CanvasBlocker\n\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\tvar context = item && item.getContext && item.getContext('2d');\n\n\t\t// `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n\t\t// inside an iframe or when running in a protected environment. We could guess the\n\t\t// types from their toString() value but let's keep things flexible and assume it's\n\t\t// a sufficient condition if the item has a context2D which has item as `canvas`.\n\t\t// https://github.com/chartjs/Chart.js/issues/3887\n\t\t// https://github.com/chartjs/Chart.js/issues/4102\n\t\t// https://github.com/chartjs/Chart.js/issues/4152\n\t\tif (context && context.canvas === item) {\n\t\t\tinitCanvas(item, config);\n\t\t\treturn context;\n\t\t}\n\n\t\treturn null;\n\t},\n\n\treleaseContext: function(context) {\n\t\tvar canvas = context.canvas;\n\t\tif (!canvas[EXPANDO_KEY]) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar initial = canvas[EXPANDO_KEY].initial;\n\t\t['height', 'width'].forEach(function(prop) {\n\t\t\tvar value = initial[prop];\n\t\t\tif (helpers.isNullOrUndef(value)) {\n\t\t\t\tcanvas.removeAttribute(prop);\n\t\t\t} else {\n\t\t\t\tcanvas.setAttribute(prop, value);\n\t\t\t}\n\t\t});\n\n\t\thelpers.each(initial.style || {}, function(value, key) {\n\t\t\tcanvas.style[key] = value;\n\t\t});\n\n\t\t// The canvas render size might have been changed (and thus the state stack discarded),\n\t\t// we can't use save() and restore() to restore the initial state. So make sure that at\n\t\t// least the canvas context is reset to the default state by setting the canvas width.\n\t\t// https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n\t\tcanvas.width = canvas.width;\n\n\t\tdelete canvas[EXPANDO_KEY];\n\t},\n\n\taddEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\taddResizeListener(canvas, listener, chart);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n\t\tvar proxies = expando.proxies || (expando.proxies = {});\n\t\tvar proxy = proxies[chart.id + '_' + type] = function(event) {\n\t\t\tlistener(fromNativeEvent(event, chart));\n\t\t};\n\n\t\taddEventListener(canvas, type, proxy);\n\t},\n\n\tremoveEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\tremoveResizeListener(canvas, listener);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || {};\n\t\tvar proxies = expando.proxies || {};\n\t\tvar proxy = proxies[chart.id + '_' + type];\n\t\tif (!proxy) {\n\t\t\treturn;\n\t\t}\n\n\t\tremoveEventListener(canvas, type, proxy);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use EventTarget.addEventListener instead.\n * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n * @function Chart.helpers.addEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.addEvent = addEventListener;\n\n/**\n * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n * @function Chart.helpers.removeEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.removeEvent = removeEventListener;\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\nvar layouts = require('./core.layouts');\n\nmodule.exports = function(Chart) {\n\n\tChart.scaleService = {\n\t\t// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n\t\t// use the new chart options to grab the correct scale\n\t\tconstructors: {},\n\t\t// Use a registration function so that we can move to an ES6 map when we no longer need to support\n\t\t// old browsers\n\n\t\t// Scale config defaults\n\t\tdefaults: {},\n\t\tregisterScaleType: function(type, scaleConstructor, scaleDefaults) {\n\t\t\tthis.constructors[type] = scaleConstructor;\n\t\t\tthis.defaults[type] = helpers.clone(scaleDefaults);\n\t\t},\n\t\tgetScaleConstructor: function(type) {\n\t\t\treturn this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n\t\t},\n\t\tgetScaleDefaults: function(type) {\n\t\t\t// Return the scale defaults merged with the global settings so that we always use the latest ones\n\t\t\treturn this.defaults.hasOwnProperty(type) ? helpers.merge({}, [defaults.scale, this.defaults[type]]) : {};\n\t\t},\n\t\tupdateScaleDefaults: function(type, additions) {\n\t\t\tvar me = this;\n\t\t\tif (me.defaults.hasOwnProperty(type)) {\n\t\t\t\tme.defaults[type] = helpers.extend(me.defaults[type], additions);\n\t\t\t}\n\t\t},\n\t\taddScalesToLayout: function(chart) {\n\t\t\t// Adds each scale to the chart.boxes array to be sized accordingly\n\t\t\thelpers.each(chart.scales, function(scale) {\n\t\t\t\t// Set ILayoutItem parameters for backwards compatibility\n\t\t\t\tscale.fullWidth = scale.options.fullWidth;\n\t\t\t\tscale.position = scale.options.position;\n\t\t\t\tscale.weight = scale.options.weight;\n\t\t\t\tlayouts.addBox(chart, scale);\n\t\t\t});\n\t\t}\n\t};\n};\n","'use strict';\n\nvar helpers = require('./helpers.core');\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easingEffects\n * @see http://www.robertpenner.com/easing/\n */\nvar effects = {\n\tlinear: function(t) {\n\t\treturn t;\n\t},\n\n\teaseInQuad: function(t) {\n\t\treturn t * t;\n\t},\n\n\teaseOutQuad: function(t) {\n\t\treturn -t * (t - 2);\n\t},\n\n\teaseInOutQuad: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t;\n\t\t}\n\t\treturn -0.5 * ((--t) * (t - 2) - 1);\n\t},\n\n\teaseInCubic: function(t) {\n\t\treturn t * t * t;\n\t},\n\n\teaseOutCubic: function(t) {\n\t\treturn (t = t - 1) * t * t + 1;\n\t},\n\n\teaseInOutCubic: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t + 2);\n\t},\n\n\teaseInQuart: function(t) {\n\t\treturn t * t * t * t;\n\t},\n\n\teaseOutQuart: function(t) {\n\t\treturn -((t = t - 1) * t * t * t - 1);\n\t},\n\n\teaseInOutQuart: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t;\n\t\t}\n\t\treturn -0.5 * ((t -= 2) * t * t * t - 2);\n\t},\n\n\teaseInQuint: function(t) {\n\t\treturn t * t * t * t * t;\n\t},\n\n\teaseOutQuint: function(t) {\n\t\treturn (t = t - 1) * t * t * t * t + 1;\n\t},\n\n\teaseInOutQuint: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t * t * t + 2);\n\t},\n\n\teaseInSine: function(t) {\n\t\treturn -Math.cos(t * (Math.PI / 2)) + 1;\n\t},\n\n\teaseOutSine: function(t) {\n\t\treturn Math.sin(t * (Math.PI / 2));\n\t},\n\n\teaseInOutSine: function(t) {\n\t\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\n\t},\n\n\teaseInExpo: function(t) {\n\t\treturn (t === 0) ? 0 : Math.pow(2, 10 * (t - 1));\n\t},\n\n\teaseOutExpo: function(t) {\n\t\treturn (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1;\n\t},\n\n\teaseInOutExpo: function(t) {\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * Math.pow(2, 10 * (t - 1));\n\t\t}\n\t\treturn 0.5 * (-Math.pow(2, -10 * --t) + 2);\n\t},\n\n\teaseInCirc: function(t) {\n\t\tif (t >= 1) {\n\t\t\treturn t;\n\t\t}\n\t\treturn -(Math.sqrt(1 - t * t) - 1);\n\t},\n\n\teaseOutCirc: function(t) {\n\t\treturn Math.sqrt(1 - (t = t - 1) * t);\n\t},\n\n\teaseInOutCirc: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn -0.5 * (Math.sqrt(1 - t * t) - 1);\n\t\t}\n\t\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t},\n\n\teaseInElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t},\n\n\teaseOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n\t},\n\n\teaseInOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif ((t /= 0.5) === 2) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.45;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\tif (t < 1) {\n\t\t\treturn -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t\t}\n\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t},\n\teaseInBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn t * t * ((s + 1) * t - s);\n\t},\n\n\teaseOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn (t = t - 1) * t * ((s + 1) * t + s) + 1;\n\t},\n\n\teaseInOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n\t},\n\n\teaseInBounce: function(t) {\n\t\treturn 1 - effects.easeOutBounce(1 - t);\n\t},\n\n\teaseOutBounce: function(t) {\n\t\tif (t < (1 / 2.75)) {\n\t\t\treturn 7.5625 * t * t;\n\t\t}\n\t\tif (t < (2 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\n\t\t}\n\t\tif (t < (2.5 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\n\t\t}\n\t\treturn 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\n\t},\n\n\teaseInOutBounce: function(t) {\n\t\tif (t < 0.5) {\n\t\t\treturn effects.easeInBounce(t * 2) * 0.5;\n\t\t}\n\t\treturn effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n\t}\n};\n\nmodule.exports = {\n\teffects: effects\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n * @function Chart.helpers.easingEffects\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.easingEffects = effects;\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\n'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\tplugins: {\n\t\tfiller: {\n\t\t\tpropagate: true\n\t\t}\n\t}\n});\n\nvar mappers = {\n\tdataset: function(source) {\n\t\tvar index = source.fill;\n\t\tvar chart = source.chart;\n\t\tvar meta = chart.getDatasetMeta(index);\n\t\tvar visible = meta && chart.isDatasetVisible(index);\n\t\tvar points = (visible && meta.dataset._children) || [];\n\t\tvar length = points.length || 0;\n\n\t\treturn !length ? null : function(point, i) {\n\t\t\treturn (i < length && points[i]._view) || null;\n\t\t};\n\t},\n\n\tboundary: function(source) {\n\t\tvar boundary = source.boundary;\n\t\tvar x = boundary ? boundary.x : null;\n\t\tvar y = boundary ? boundary.y : null;\n\n\t\treturn function(point) {\n\t\t\treturn {\n\t\t\t\tx: x === null ? point.x : x,\n\t\t\t\ty: y === null ? point.y : y,\n\t\t\t};\n\t\t};\n\t}\n};\n\n// @todo if (fill[0] === '#')\nfunction decodeFill(el, index, count) {\n\tvar model = el._model || {};\n\tvar fill = model.fill;\n\tvar target;\n\n\tif (fill === undefined) {\n\t\tfill = !!model.backgroundColor;\n\t}\n\n\tif (fill === false || fill === null) {\n\t\treturn false;\n\t}\n\n\tif (fill === true) {\n\t\treturn 'origin';\n\t}\n\n\ttarget = parseFloat(fill, 10);\n\tif (isFinite(target) && Math.floor(target) === target) {\n\t\tif (fill[0] === '-' || fill[0] === '+') {\n\t\t\ttarget = index + target;\n\t\t}\n\n\t\tif (target === index || target < 0 || target >= count) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn target;\n\t}\n\n\tswitch (fill) {\n\t// compatibility\n\tcase 'bottom':\n\t\treturn 'start';\n\tcase 'top':\n\t\treturn 'end';\n\tcase 'zero':\n\t\treturn 'origin';\n\t// supported boundaries\n\tcase 'origin':\n\tcase 'start':\n\tcase 'end':\n\t\treturn fill;\n\t// invalid fill values\n\tdefault:\n\t\treturn false;\n\t}\n}\n\nfunction computeBoundary(source) {\n\tvar model = source.el._model || {};\n\tvar scale = source.el._scale || {};\n\tvar fill = source.fill;\n\tvar target = null;\n\tvar horizontal;\n\n\tif (isFinite(fill)) {\n\t\treturn null;\n\t}\n\n\t// Backward compatibility: until v3, we still need to support boundary values set on\n\t// the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n\t// controllers might still use it (e.g. the Smith chart).\n\n\tif (fill === 'start') {\n\t\ttarget = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n\t} else if (fill === 'end') {\n\t\ttarget = model.scaleTop === undefined ? scale.top : model.scaleTop;\n\t} else if (model.scaleZero !== undefined) {\n\t\ttarget = model.scaleZero;\n\t} else if (scale.getBasePosition) {\n\t\ttarget = scale.getBasePosition();\n\t} else if (scale.getBasePixel) {\n\t\ttarget = scale.getBasePixel();\n\t}\n\n\tif (target !== undefined && target !== null) {\n\t\tif (target.x !== undefined && target.y !== undefined) {\n\t\t\treturn target;\n\t\t}\n\n\t\tif (typeof target === 'number' && isFinite(target)) {\n\t\t\thorizontal = scale.isHorizontal();\n\t\t\treturn {\n\t\t\t\tx: horizontal ? target : null,\n\t\t\t\ty: horizontal ? null : target\n\t\t\t};\n\t\t}\n\t}\n\n\treturn null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n\tvar source = sources[index];\n\tvar fill = source.fill;\n\tvar visited = [index];\n\tvar target;\n\n\tif (!propagate) {\n\t\treturn fill;\n\t}\n\n\twhile (fill !== false && visited.indexOf(fill) === -1) {\n\t\tif (!isFinite(fill)) {\n\t\t\treturn fill;\n\t\t}\n\n\t\ttarget = sources[fill];\n\t\tif (!target) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (target.visible) {\n\t\t\treturn fill;\n\t\t}\n\n\t\tvisited.push(fill);\n\t\tfill = target.fill;\n\t}\n\n\treturn false;\n}\n\nfunction createMapper(source) {\n\tvar fill = source.fill;\n\tvar type = 'dataset';\n\n\tif (fill === false) {\n\t\treturn null;\n\t}\n\n\tif (!isFinite(fill)) {\n\t\ttype = 'boundary';\n\t}\n\n\treturn mappers[type](source);\n}\n\nfunction isDrawable(point) {\n\treturn point && !point.skip;\n}\n\nfunction drawArea(ctx, curve0, curve1, len0, len1) {\n\tvar i;\n\n\tif (!len0 || !len1) {\n\t\treturn;\n\t}\n\n\t// building first area curve (normal)\n\tctx.moveTo(curve0[0].x, curve0[0].y);\n\tfor (i = 1; i < len0; ++i) {\n\t\thelpers.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n\t}\n\n\t// joining the two area curves\n\tctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y);\n\n\t// building opposite area curve (reverse)\n\tfor (i = len1 - 1; i > 0; --i) {\n\t\thelpers.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n\t}\n}\n\nfunction doFill(ctx, points, mapper, view, color, loop) {\n\tvar count = points.length;\n\tvar span = view.spanGaps;\n\tvar curve0 = [];\n\tvar curve1 = [];\n\tvar len0 = 0;\n\tvar len1 = 0;\n\tvar i, ilen, index, p0, p1, d0, d1;\n\n\tctx.beginPath();\n\n\tfor (i = 0, ilen = (count + !!loop); i < ilen; ++i) {\n\t\tindex = i % count;\n\t\tp0 = points[index]._view;\n\t\tp1 = mapper(p0, index, view);\n\t\td0 = isDrawable(p0);\n\t\td1 = isDrawable(p1);\n\n\t\tif (d0 && d1) {\n\t\t\tlen0 = curve0.push(p0);\n\t\t\tlen1 = curve1.push(p1);\n\t\t} else if (len0 && len1) {\n\t\t\tif (!span) {\n\t\t\t\tdrawArea(ctx, curve0, curve1, len0, len1);\n\t\t\t\tlen0 = len1 = 0;\n\t\t\t\tcurve0 = [];\n\t\t\t\tcurve1 = [];\n\t\t\t} else {\n\t\t\t\tif (d0) {\n\t\t\t\t\tcurve0.push(p0);\n\t\t\t\t}\n\t\t\t\tif (d1) {\n\t\t\t\t\tcurve1.push(p1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdrawArea(ctx, curve0, curve1, len0, len1);\n\n\tctx.closePath();\n\tctx.fillStyle = color;\n\tctx.fill();\n}\n\nmodule.exports = {\n\tid: 'filler',\n\n\tafterDatasetsUpdate: function(chart, options) {\n\t\tvar count = (chart.data.datasets || []).length;\n\t\tvar propagate = options.propagate;\n\t\tvar sources = [];\n\t\tvar meta, i, el, source;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\tel = meta.dataset;\n\t\t\tsource = null;\n\n\t\t\tif (el && el._model && el instanceof elements.Line) {\n\t\t\t\tsource = {\n\t\t\t\t\tvisible: chart.isDatasetVisible(i),\n\t\t\t\t\tfill: decodeFill(el, i, count),\n\t\t\t\t\tchart: chart,\n\t\t\t\t\tel: el\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tmeta.$filler = source;\n\t\t\tsources.push(source);\n\t\t}\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!source) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tsource.fill = resolveTarget(sources, i, propagate);\n\t\t\tsource.boundary = computeBoundary(source);\n\t\t\tsource.mapper = createMapper(source);\n\t\t}\n\t},\n\n\tbeforeDatasetDraw: function(chart, args) {\n\t\tvar meta = args.meta.$filler;\n\t\tif (!meta) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar ctx = chart.ctx;\n\t\tvar el = meta.el;\n\t\tvar view = el._view;\n\t\tvar points = el._children || [];\n\t\tvar mapper = meta.mapper;\n\t\tvar color = view.backgroundColor || defaults.global.defaultColor;\n\n\t\tif (mapper && color && points.length) {\n\t\t\thelpers.canvas.clipArea(ctx, chart.chartArea);\n\t\t\tdoFill(ctx, points, mapper, view, color, el._loop);\n\t\t\thelpers.canvas.unclipArea(ctx);\n\t\t}\n\t}\n};\n","'use strict';\n\nmodule.exports = {};\nmodule.exports.Arc = require('./element.arc');\nmodule.exports.Line = require('./element.line');\nmodule.exports.Point = require('./element.point');\nmodule.exports.Rectangle = require('./element.rectangle');\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar Element = require('./core.element');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\ttooltips: {\n\t\tenabled: true,\n\t\tcustom: null,\n\t\tmode: 'nearest',\n\t\tposition: 'average',\n\t\tintersect: true,\n\t\tbackgroundColor: 'rgba(0,0,0,0.8)',\n\t\ttitleFontStyle: 'bold',\n\t\ttitleSpacing: 2,\n\t\ttitleMarginBottom: 6,\n\t\ttitleFontColor: '#fff',\n\t\ttitleAlign: 'left',\n\t\tbodySpacing: 2,\n\t\tbodyFontColor: '#fff',\n\t\tbodyAlign: 'left',\n\t\tfooterFontStyle: 'bold',\n\t\tfooterSpacing: 2,\n\t\tfooterMarginTop: 6,\n\t\tfooterFontColor: '#fff',\n\t\tfooterAlign: 'left',\n\t\tyPadding: 6,\n\t\txPadding: 6,\n\t\tcaretPadding: 2,\n\t\tcaretSize: 5,\n\t\tcornerRadius: 6,\n\t\tmultiKeyBackground: '#fff',\n\t\tdisplayColors: true,\n\t\tborderColor: 'rgba(0,0,0,0)',\n\t\tborderWidth: 0,\n\t\tcallbacks: {\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeTitle: helpers.noop,\n\t\t\ttitle: function(tooltipItems, data) {\n\t\t\t\t// Pick first xLabel for now\n\t\t\t\tvar title = '';\n\t\t\t\tvar labels = data.labels;\n\t\t\t\tvar labelCount = labels ? labels.length : 0;\n\n\t\t\t\tif (tooltipItems.length > 0) {\n\t\t\t\t\tvar item = tooltipItems[0];\n\n\t\t\t\t\tif (item.xLabel) {\n\t\t\t\t\t\ttitle = item.xLabel;\n\t\t\t\t\t} else if (labelCount > 0 && item.index < labelCount) {\n\t\t\t\t\t\ttitle = labels[item.index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\t\t\tafterTitle: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeBody: helpers.noop,\n\n\t\t\t// Args are: (tooltipItem, data)\n\t\t\tbeforeLabel: helpers.noop,\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel += ': ';\n\t\t\t\t}\n\t\t\t\tlabel += tooltipItem.yLabel;\n\t\t\t\treturn label;\n\t\t\t},\n\t\t\tlabelColor: function(tooltipItem, chart) {\n\t\t\t\tvar meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n\t\t\t\tvar activeElement = meta.data[tooltipItem.index];\n\t\t\t\tvar view = activeElement._view;\n\t\t\t\treturn {\n\t\t\t\t\tborderColor: view.borderColor,\n\t\t\t\t\tbackgroundColor: view.backgroundColor\n\t\t\t\t};\n\t\t\t},\n\t\t\tlabelTextColor: function() {\n\t\t\t\treturn this._options.bodyFontColor;\n\t\t\t},\n\t\t\tafterLabel: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tafterBody: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeFooter: helpers.noop,\n\t\t\tfooter: helpers.noop,\n\t\t\tafterFooter: helpers.noop\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\t/**\n \t * Helper method to merge the opacity into a color\n \t */\n\tfunction mergeOpacity(colorString, opacity) {\n\t\tvar color = helpers.color(colorString);\n\t\treturn color.alpha(opacity * color.alpha()).rgbaString();\n\t}\n\n\t// Helper to push or concat based on if the 2nd parameter is an array or not\n\tfunction pushOrConcat(base, toPush) {\n\t\tif (toPush) {\n\t\t\tif (helpers.isArray(toPush)) {\n\t\t\t\t// base = base.concat(toPush);\n\t\t\t\tArray.prototype.push.apply(base, toPush);\n\t\t\t} else {\n\t\t\t\tbase.push(toPush);\n\t\t\t}\n\t\t}\n\n\t\treturn base;\n\t}\n\n\t// Private helper to create a tooltip item model\n\t// @param element : the chart element (point, arc, bar) to create the tooltip item for\n\t// @return : new tooltip item\n\tfunction createTooltipItem(element) {\n\t\tvar xScale = element._xScale;\n\t\tvar yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\t\tvar index = element._index;\n\t\tvar datasetIndex = element._datasetIndex;\n\n\t\treturn {\n\t\t\txLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n\t\t\tyLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n\t\t\tindex: index,\n\t\t\tdatasetIndex: datasetIndex,\n\t\t\tx: element._model.x,\n\t\t\ty: element._model.y\n\t\t};\n\t}\n\n\t/**\n\t * Helper to get the reset model for the tooltip\n\t * @param tooltipOpts {Object} the tooltip options\n\t */\n\tfunction getBaseModel(tooltipOpts) {\n\t\tvar globalDefaults = defaults.global;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t\treturn {\n\t\t\t// Positioning\n\t\t\txPadding: tooltipOpts.xPadding,\n\t\t\tyPadding: tooltipOpts.yPadding,\n\t\t\txAlign: tooltipOpts.xAlign,\n\t\t\tyAlign: tooltipOpts.yAlign,\n\n\t\t\t// Body\n\t\t\tbodyFontColor: tooltipOpts.bodyFontColor,\n\t\t\t_bodyFontFamily: valueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_bodyFontStyle: valueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n\t\t\t_bodyAlign: tooltipOpts.bodyAlign,\n\t\t\tbodyFontSize: valueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n\t\t\tbodySpacing: tooltipOpts.bodySpacing,\n\n\t\t\t// Title\n\t\t\ttitleFontColor: tooltipOpts.titleFontColor,\n\t\t\t_titleFontFamily: valueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_titleFontStyle: valueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n\t\t\ttitleFontSize: valueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n\t\t\t_titleAlign: tooltipOpts.titleAlign,\n\t\t\ttitleSpacing: tooltipOpts.titleSpacing,\n\t\t\ttitleMarginBottom: tooltipOpts.titleMarginBottom,\n\n\t\t\t// Footer\n\t\t\tfooterFontColor: tooltipOpts.footerFontColor,\n\t\t\t_footerFontFamily: valueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_footerFontStyle: valueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n\t\t\tfooterFontSize: valueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n\t\t\t_footerAlign: tooltipOpts.footerAlign,\n\t\t\tfooterSpacing: tooltipOpts.footerSpacing,\n\t\t\tfooterMarginTop: tooltipOpts.footerMarginTop,\n\n\t\t\t// Appearance\n\t\t\tcaretSize: tooltipOpts.caretSize,\n\t\t\tcornerRadius: tooltipOpts.cornerRadius,\n\t\t\tbackgroundColor: tooltipOpts.backgroundColor,\n\t\t\topacity: 0,\n\t\t\tlegendColorBackground: tooltipOpts.multiKeyBackground,\n\t\t\tdisplayColors: tooltipOpts.displayColors,\n\t\t\tborderColor: tooltipOpts.borderColor,\n\t\t\tborderWidth: tooltipOpts.borderWidth\n\t\t};\n\t}\n\n\t/**\n\t * Get the size of the tooltip\n\t */\n\tfunction getTooltipSize(tooltip, model) {\n\t\tvar ctx = tooltip._chart.ctx;\n\n\t\tvar height = model.yPadding * 2; // Tooltip Padding\n\t\tvar width = 0;\n\n\t\t// Count of all lines in the body\n\t\tvar body = model.body;\n\t\tvar combinedBodyLength = body.reduce(function(count, bodyItem) {\n\t\t\treturn count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n\t\t}, 0);\n\t\tcombinedBodyLength += model.beforeBody.length + model.afterBody.length;\n\n\t\tvar titleLineCount = model.title.length;\n\t\tvar footerLineCount = model.footer.length;\n\t\tvar titleFontSize = model.titleFontSize;\n\t\tvar bodyFontSize = model.bodyFontSize;\n\t\tvar footerFontSize = model.footerFontSize;\n\n\t\theight += titleLineCount * titleFontSize; // Title Lines\n\t\theight += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\t\theight += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\t\theight += combinedBodyLength * bodyFontSize; // Body Lines\n\t\theight += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\t\theight += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\t\theight += footerLineCount * (footerFontSize); // Footer Lines\n\t\theight += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n\n\t\t// Title width\n\t\tvar widthPadding = 0;\n\t\tvar maxLineWidth = function(line) {\n\t\t\twidth = Math.max(width, ctx.measureText(line).width + widthPadding);\n\t\t};\n\n\t\tctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n\t\thelpers.each(model.title, maxLineWidth);\n\n\t\t// Body width\n\t\tctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n\t\thelpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth);\n\n\t\t// Body lines may include some extra width due to the color box\n\t\twidthPadding = model.displayColors ? (bodyFontSize + 2) : 0;\n\t\thelpers.each(body, function(bodyItem) {\n\t\t\thelpers.each(bodyItem.before, maxLineWidth);\n\t\t\thelpers.each(bodyItem.lines, maxLineWidth);\n\t\t\thelpers.each(bodyItem.after, maxLineWidth);\n\t\t});\n\n\t\t// Reset back to 0\n\t\twidthPadding = 0;\n\n\t\t// Footer width\n\t\tctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n\t\thelpers.each(model.footer, maxLineWidth);\n\n\t\t// Add padding\n\t\twidth += 2 * model.xPadding;\n\n\t\treturn {\n\t\t\twidth: width,\n\t\t\theight: height\n\t\t};\n\t}\n\n\t/**\n\t * Helper to get the alignment of a tooltip given the size\n\t */\n\tfunction determineAlignment(tooltip, size) {\n\t\tvar model = tooltip._model;\n\t\tvar chart = tooltip._chart;\n\t\tvar chartArea = tooltip._chart.chartArea;\n\t\tvar xAlign = 'center';\n\t\tvar yAlign = 'center';\n\n\t\tif (model.y < size.height) {\n\t\t\tyAlign = 'top';\n\t\t} else if (model.y > (chart.height - size.height)) {\n\t\t\tyAlign = 'bottom';\n\t\t}\n\n\t\tvar lf, rf; // functions to determine left, right alignment\n\t\tvar olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\t\tvar yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\t\tvar midX = (chartArea.left + chartArea.right) / 2;\n\t\tvar midY = (chartArea.top + chartArea.bottom) / 2;\n\n\t\tif (yAlign === 'center') {\n\t\t\tlf = function(x) {\n\t\t\t\treturn x <= midX;\n\t\t\t};\n\t\t\trf = function(x) {\n\t\t\t\treturn x > midX;\n\t\t\t};\n\t\t} else {\n\t\t\tlf = function(x) {\n\t\t\t\treturn x <= (size.width / 2);\n\t\t\t};\n\t\t\trf = function(x) {\n\t\t\t\treturn x >= (chart.width - (size.width / 2));\n\t\t\t};\n\t\t}\n\n\t\tolf = function(x) {\n\t\t\treturn x + size.width + model.caretSize + model.caretPadding > chart.width;\n\t\t};\n\t\torf = function(x) {\n\t\t\treturn x - size.width - model.caretSize - model.caretPadding < 0;\n\t\t};\n\t\tyf = function(y) {\n\t\t\treturn y <= midY ? 'top' : 'bottom';\n\t\t};\n\n\t\tif (lf(model.x)) {\n\t\t\txAlign = 'left';\n\n\t\t\t// Is tooltip too wide and goes over the right side of the chart.?\n\t\t\tif (olf(model.x)) {\n\t\t\t\txAlign = 'center';\n\t\t\t\tyAlign = yf(model.y);\n\t\t\t}\n\t\t} else if (rf(model.x)) {\n\t\t\txAlign = 'right';\n\n\t\t\t// Is tooltip too wide and goes outside left edge of canvas?\n\t\t\tif (orf(model.x)) {\n\t\t\t\txAlign = 'center';\n\t\t\t\tyAlign = yf(model.y);\n\t\t\t}\n\t\t}\n\n\t\tvar opts = tooltip._options;\n\t\treturn {\n\t\t\txAlign: opts.xAlign ? opts.xAlign : xAlign,\n\t\t\tyAlign: opts.yAlign ? opts.yAlign : yAlign\n\t\t};\n\t}\n\n\t/**\n\t * @Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n\t */\n\tfunction getBackgroundPoint(vm, size, alignment, chart) {\n\t\t// Background Position\n\t\tvar x = vm.x;\n\t\tvar y = vm.y;\n\n\t\tvar caretSize = vm.caretSize;\n\t\tvar caretPadding = vm.caretPadding;\n\t\tvar cornerRadius = vm.cornerRadius;\n\t\tvar xAlign = alignment.xAlign;\n\t\tvar yAlign = alignment.yAlign;\n\t\tvar paddingAndSize = caretSize + caretPadding;\n\t\tvar radiusAndPadding = cornerRadius + caretPadding;\n\n\t\tif (xAlign === 'right') {\n\t\t\tx -= size.width;\n\t\t} else if (xAlign === 'center') {\n\t\t\tx -= (size.width / 2);\n\t\t\tif (x + size.width > chart.width) {\n\t\t\t\tx = chart.width - size.width;\n\t\t\t}\n\t\t\tif (x < 0) {\n\t\t\t\tx = 0;\n\t\t\t}\n\t\t}\n\n\t\tif (yAlign === 'top') {\n\t\t\ty += paddingAndSize;\n\t\t} else if (yAlign === 'bottom') {\n\t\t\ty -= size.height + paddingAndSize;\n\t\t} else {\n\t\t\ty -= (size.height / 2);\n\t\t}\n\n\t\tif (yAlign === 'center') {\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx += paddingAndSize;\n\t\t\t} else if (xAlign === 'right') {\n\t\t\t\tx -= paddingAndSize;\n\t\t\t}\n\t\t} else if (xAlign === 'left') {\n\t\t\tx -= radiusAndPadding;\n\t\t} else if (xAlign === 'right') {\n\t\t\tx += radiusAndPadding;\n\t\t}\n\n\t\treturn {\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\t}\n\n\tChart.Tooltip = Element.extend({\n\t\tinitialize: function() {\n\t\t\tthis._model = getBaseModel(this._options);\n\t\t\tthis._lastActive = [];\n\t\t},\n\n\t\t// Get the title\n\t\t// Args are: (tooltipItem, data)\n\t\tgetTitle: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me._options;\n\t\t\tvar callbacks = opts.callbacks;\n\n\t\t\tvar beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n\t\t\tvar title = callbacks.title.apply(me, arguments);\n\t\t\tvar afterTitle = callbacks.afterTitle.apply(me, arguments);\n\n\t\t\tvar lines = [];\n\t\t\tlines = pushOrConcat(lines, beforeTitle);\n\t\t\tlines = pushOrConcat(lines, title);\n\t\t\tlines = pushOrConcat(lines, afterTitle);\n\n\t\t\treturn lines;\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetBeforeBody: function() {\n\t\t\tvar lines = this._options.callbacks.beforeBody.apply(this, arguments);\n\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetBody: function(tooltipItems, data) {\n\t\t\tvar me = this;\n\t\t\tvar callbacks = me._options.callbacks;\n\t\t\tvar bodyItems = [];\n\n\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\t\tvar bodyItem = {\n\t\t\t\t\tbefore: [],\n\t\t\t\t\tlines: [],\n\t\t\t\t\tafter: []\n\t\t\t\t};\n\t\t\t\tpushOrConcat(bodyItem.before, callbacks.beforeLabel.call(me, tooltipItem, data));\n\t\t\t\tpushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n\t\t\t\tpushOrConcat(bodyItem.after, callbacks.afterLabel.call(me, tooltipItem, data));\n\n\t\t\t\tbodyItems.push(bodyItem);\n\t\t\t});\n\n\t\t\treturn bodyItems;\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetAfterBody: function() {\n\t\t\tvar lines = this._options.callbacks.afterBody.apply(this, arguments);\n\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\n\t\t},\n\n\t\t// Get the footer and beforeFooter and afterFooter lines\n\t\t// Args are: (tooltipItem, data)\n\t\tgetFooter: function() {\n\t\t\tvar me = this;\n\t\t\tvar callbacks = me._options.callbacks;\n\n\t\t\tvar beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n\t\t\tvar footer = callbacks.footer.apply(me, arguments);\n\t\t\tvar afterFooter = callbacks.afterFooter.apply(me, arguments);\n\n\t\t\tvar lines = [];\n\t\t\tlines = pushOrConcat(lines, beforeFooter);\n\t\t\tlines = pushOrConcat(lines, footer);\n\t\t\tlines = pushOrConcat(lines, afterFooter);\n\n\t\t\treturn lines;\n\t\t},\n\n\t\tupdate: function(changed) {\n\t\t\tvar me = this;\n\t\t\tvar opts = me._options;\n\n\t\t\t// Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n\t\t\t// that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n\t\t\t// which breaks any animations.\n\t\t\tvar existingModel = me._model;\n\t\t\tvar model = me._model = getBaseModel(opts);\n\t\t\tvar active = me._active;\n\n\t\t\tvar data = me._data;\n\n\t\t\t// In the case where active.length === 0 we need to keep these at existing values for good animations\n\t\t\tvar alignment = {\n\t\t\t\txAlign: existingModel.xAlign,\n\t\t\t\tyAlign: existingModel.yAlign\n\t\t\t};\n\t\t\tvar backgroundPoint = {\n\t\t\t\tx: existingModel.x,\n\t\t\t\ty: existingModel.y\n\t\t\t};\n\t\t\tvar tooltipSize = {\n\t\t\t\twidth: existingModel.width,\n\t\t\t\theight: existingModel.height\n\t\t\t};\n\t\t\tvar tooltipPosition = {\n\t\t\t\tx: existingModel.caretX,\n\t\t\t\ty: existingModel.caretY\n\t\t\t};\n\n\t\t\tvar i, len;\n\n\t\t\tif (active.length) {\n\t\t\t\tmodel.opacity = 1;\n\n\t\t\t\tvar labelColors = [];\n\t\t\t\tvar labelTextColors = [];\n\t\t\t\ttooltipPosition = Chart.Tooltip.positioners[opts.position].call(me, active, me._eventPosition);\n\n\t\t\t\tvar tooltipItems = [];\n\t\t\t\tfor (i = 0, len = active.length; i < len; ++i) {\n\t\t\t\t\ttooltipItems.push(createTooltipItem(active[i]));\n\t\t\t\t}\n\n\t\t\t\t// If the user provided a filter function, use it to modify the tooltip items\n\t\t\t\tif (opts.filter) {\n\t\t\t\t\ttooltipItems = tooltipItems.filter(function(a) {\n\t\t\t\t\t\treturn opts.filter(a, data);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// If the user provided a sorting function, use it to modify the tooltip items\n\t\t\t\tif (opts.itemSort) {\n\t\t\t\t\ttooltipItems = tooltipItems.sort(function(a, b) {\n\t\t\t\t\t\treturn opts.itemSort(a, b, data);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Determine colors for boxes\n\t\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\t\t\tlabelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n\t\t\t\t\tlabelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n\t\t\t\t});\n\n\n\t\t\t\t// Build the Text Lines\n\t\t\t\tmodel.title = me.getTitle(tooltipItems, data);\n\t\t\t\tmodel.beforeBody = me.getBeforeBody(tooltipItems, data);\n\t\t\t\tmodel.body = me.getBody(tooltipItems, data);\n\t\t\t\tmodel.afterBody = me.getAfterBody(tooltipItems, data);\n\t\t\t\tmodel.footer = me.getFooter(tooltipItems, data);\n\n\t\t\t\t// Initial positioning and colors\n\t\t\t\tmodel.x = Math.round(tooltipPosition.x);\n\t\t\t\tmodel.y = Math.round(tooltipPosition.y);\n\t\t\t\tmodel.caretPadding = opts.caretPadding;\n\t\t\t\tmodel.labelColors = labelColors;\n\t\t\t\tmodel.labelTextColors = labelTextColors;\n\n\t\t\t\t// data points\n\t\t\t\tmodel.dataPoints = tooltipItems;\n\n\t\t\t\t// We need to determine alignment of the tooltip\n\t\t\t\ttooltipSize = getTooltipSize(this, model);\n\t\t\t\talignment = determineAlignment(this, tooltipSize);\n\t\t\t\t// Final Size and Position\n\t\t\t\tbackgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n\t\t\t} else {\n\t\t\t\tmodel.opacity = 0;\n\t\t\t}\n\n\t\t\tmodel.xAlign = alignment.xAlign;\n\t\t\tmodel.yAlign = alignment.yAlign;\n\t\t\tmodel.x = backgroundPoint.x;\n\t\t\tmodel.y = backgroundPoint.y;\n\t\t\tmodel.width = tooltipSize.width;\n\t\t\tmodel.height = tooltipSize.height;\n\n\t\t\t// Point where the caret on the tooltip points to\n\t\t\tmodel.caretX = tooltipPosition.x;\n\t\t\tmodel.caretY = tooltipPosition.y;\n\n\t\t\tme._model = model;\n\n\t\t\tif (changed && opts.custom) {\n\t\t\t\topts.custom.call(me, model);\n\t\t\t}\n\n\t\t\treturn me;\n\t\t},\n\t\tdrawCaret: function(tooltipPoint, size) {\n\t\t\tvar ctx = this._chart.ctx;\n\t\t\tvar vm = this._view;\n\t\t\tvar caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n\n\t\t\tctx.lineTo(caretPosition.x1, caretPosition.y1);\n\t\t\tctx.lineTo(caretPosition.x2, caretPosition.y2);\n\t\t\tctx.lineTo(caretPosition.x3, caretPosition.y3);\n\t\t},\n\t\tgetCaretPosition: function(tooltipPoint, size, vm) {\n\t\t\tvar x1, x2, x3, y1, y2, y3;\n\t\t\tvar caretSize = vm.caretSize;\n\t\t\tvar cornerRadius = vm.cornerRadius;\n\t\t\tvar xAlign = vm.xAlign;\n\t\t\tvar yAlign = vm.yAlign;\n\t\t\tvar ptX = tooltipPoint.x;\n\t\t\tvar ptY = tooltipPoint.y;\n\t\t\tvar width = size.width;\n\t\t\tvar height = size.height;\n\n\t\t\tif (yAlign === 'center') {\n\t\t\t\ty2 = ptY + (height / 2);\n\n\t\t\t\tif (xAlign === 'left') {\n\t\t\t\t\tx1 = ptX;\n\t\t\t\t\tx2 = x1 - caretSize;\n\t\t\t\t\tx3 = x1;\n\n\t\t\t\t\ty1 = y2 + caretSize;\n\t\t\t\t\ty3 = y2 - caretSize;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = ptX + width;\n\t\t\t\t\tx2 = x1 + caretSize;\n\t\t\t\t\tx3 = x1;\n\n\t\t\t\t\ty1 = y2 - caretSize;\n\t\t\t\t\ty3 = y2 + caretSize;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (xAlign === 'left') {\n\t\t\t\t\tx2 = ptX + cornerRadius + (caretSize);\n\t\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t} else if (xAlign === 'right') {\n\t\t\t\t\tx2 = ptX + width - cornerRadius - caretSize;\n\t\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t} else {\n\t\t\t\t\tx2 = vm.caretX;\n\t\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t}\n\t\t\t\tif (yAlign === 'top') {\n\t\t\t\t\ty1 = ptY;\n\t\t\t\t\ty2 = y1 - caretSize;\n\t\t\t\t\ty3 = y1;\n\t\t\t\t} else {\n\t\t\t\t\ty1 = ptY + height;\n\t\t\t\t\ty2 = y1 + caretSize;\n\t\t\t\t\ty3 = y1;\n\t\t\t\t\t// invert drawing order\n\t\t\t\t\tvar tmp = x3;\n\t\t\t\t\tx3 = x1;\n\t\t\t\t\tx1 = tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {x1: x1, x2: x2, x3: x3, y1: y1, y2: y2, y3: y3};\n\t\t},\n\t\tdrawTitle: function(pt, vm, ctx, opacity) {\n\t\t\tvar title = vm.title;\n\n\t\t\tif (title.length) {\n\t\t\t\tctx.textAlign = vm._titleAlign;\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\tvar titleFontSize = vm.titleFontSize;\n\t\t\t\tvar titleSpacing = vm.titleSpacing;\n\n\t\t\t\tctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);\n\t\t\t\tctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n\n\t\t\t\tvar i, len;\n\t\t\t\tfor (i = 0, len = title.length; i < len; ++i) {\n\t\t\t\t\tctx.fillText(title[i], pt.x, pt.y);\n\t\t\t\t\tpt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n\t\t\t\t\tif (i + 1 === title.length) {\n\t\t\t\t\t\tpt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tdrawBody: function(pt, vm, ctx, opacity) {\n\t\t\tvar bodyFontSize = vm.bodyFontSize;\n\t\t\tvar bodySpacing = vm.bodySpacing;\n\t\t\tvar body = vm.body;\n\n\t\t\tctx.textAlign = vm._bodyAlign;\n\t\t\tctx.textBaseline = 'top';\n\t\t\tctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n\n\t\t\t// Before Body\n\t\t\tvar xLinePadding = 0;\n\t\t\tvar fillLineOfText = function(line) {\n\t\t\t\tctx.fillText(line, pt.x + xLinePadding, pt.y);\n\t\t\t\tpt.y += bodyFontSize + bodySpacing;\n\t\t\t};\n\n\t\t\t// Before body lines\n\t\t\tctx.fillStyle = mergeOpacity(vm.bodyFontColor, opacity);\n\t\t\thelpers.each(vm.beforeBody, fillLineOfText);\n\n\t\t\tvar drawColorBoxes = vm.displayColors;\n\t\t\txLinePadding = drawColorBoxes ? (bodyFontSize + 2) : 0;\n\n\t\t\t// Draw body lines now\n\t\t\thelpers.each(body, function(bodyItem, i) {\n\t\t\t\tvar textColor = mergeOpacity(vm.labelTextColors[i], opacity);\n\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\thelpers.each(bodyItem.before, fillLineOfText);\n\n\t\t\t\thelpers.each(bodyItem.lines, function(line) {\n\t\t\t\t\t// Draw Legend-like boxes if needed\n\t\t\t\t\tif (drawColorBoxes) {\n\t\t\t\t\t\t// Fill a white rect so that colours merge nicely if the opacity is < 1\n\t\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);\n\t\t\t\t\t\tctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t\t// Border\n\t\t\t\t\t\tctx.lineWidth = 1;\n\t\t\t\t\t\tctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);\n\t\t\t\t\t\tctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t\t// Inner square\n\t\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);\n\t\t\t\t\t\tctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n\t\t\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\t\t}\n\n\t\t\t\t\tfillLineOfText(line);\n\t\t\t\t});\n\n\t\t\t\thelpers.each(bodyItem.after, fillLineOfText);\n\t\t\t});\n\n\t\t\t// Reset back to 0 for after body\n\t\t\txLinePadding = 0;\n\n\t\t\t// After body lines\n\t\t\thelpers.each(vm.afterBody, fillLineOfText);\n\t\t\tpt.y -= bodySpacing; // Remove last body spacing\n\t\t},\n\t\tdrawFooter: function(pt, vm, ctx, opacity) {\n\t\t\tvar footer = vm.footer;\n\n\t\t\tif (footer.length) {\n\t\t\t\tpt.y += vm.footerMarginTop;\n\n\t\t\t\tctx.textAlign = vm._footerAlign;\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\tctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);\n\t\t\t\tctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n\n\t\t\t\thelpers.each(footer, function(line) {\n\t\t\t\t\tctx.fillText(line, pt.x, pt.y);\n\t\t\t\t\tpt.y += vm.footerFontSize + vm.footerSpacing;\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tdrawBackground: function(pt, vm, ctx, tooltipSize, opacity) {\n\t\t\tctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\n\t\t\tctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);\n\t\t\tctx.lineWidth = vm.borderWidth;\n\t\t\tvar xAlign = vm.xAlign;\n\t\t\tvar yAlign = vm.yAlign;\n\t\t\tvar x = pt.x;\n\t\t\tvar y = pt.y;\n\t\t\tvar width = tooltipSize.width;\n\t\t\tvar height = tooltipSize.height;\n\t\t\tvar radius = vm.cornerRadius;\n\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x + radius, y);\n\t\t\tif (yAlign === 'top') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x + width - radius, y);\n\t\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\t\t\tif (yAlign === 'center' && xAlign === 'right') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x + width, y + height - radius);\n\t\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\t\t\tif (yAlign === 'bottom') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x + radius, y + height);\n\t\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\t\t\tif (yAlign === 'center' && xAlign === 'left') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x, y + radius);\n\t\t\tctx.quadraticCurveTo(x, y, x + radius, y);\n\t\t\tctx.closePath();\n\n\t\t\tctx.fill();\n\n\t\t\tif (vm.borderWidth > 0) {\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t},\n\t\tdraw: function() {\n\t\t\tvar ctx = this._chart.ctx;\n\t\t\tvar vm = this._view;\n\n\t\t\tif (vm.opacity === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar tooltipSize = {\n\t\t\t\twidth: vm.width,\n\t\t\t\theight: vm.height\n\t\t\t};\n\t\t\tvar pt = {\n\t\t\t\tx: vm.x,\n\t\t\t\ty: vm.y\n\t\t\t};\n\n\t\t\t// IE11/Edge does not like very small opacities, so snap to 0\n\t\t\tvar opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\n\n\t\t\t// Truthy/falsey value for empty tooltip\n\t\t\tvar hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n\t\t\tif (this._options.enabled && hasTooltipContent) {\n\t\t\t\t// Draw Background\n\t\t\t\tthis.drawBackground(pt, vm, ctx, tooltipSize, opacity);\n\n\t\t\t\t// Draw Title, Body, and Footer\n\t\t\t\tpt.x += vm.xPadding;\n\t\t\t\tpt.y += vm.yPadding;\n\n\t\t\t\t// Titles\n\t\t\t\tthis.drawTitle(pt, vm, ctx, opacity);\n\n\t\t\t\t// Body\n\t\t\t\tthis.drawBody(pt, vm, ctx, opacity);\n\n\t\t\t\t// Footer\n\t\t\t\tthis.drawFooter(pt, vm, ctx, opacity);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Handle an event\n\t\t * @private\n\t\t * @param {IEvent} event - The event to handle\n\t\t * @returns {Boolean} true if the tooltip changed\n\t\t */\n\t\thandleEvent: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar options = me._options;\n\t\t\tvar changed = false;\n\n\t\t\tme._lastActive = me._lastActive || [];\n\n\t\t\t// Find Active Elements for tooltips\n\t\t\tif (e.type === 'mouseout') {\n\t\t\t\tme._active = [];\n\t\t\t} else {\n\t\t\t\tme._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n\t\t\t}\n\n\t\t\t// Remember Last Actives\n\t\t\tchanged = !helpers.arrayEquals(me._active, me._lastActive);\n\n\t\t\t// Only handle target event on tooltip change\n\t\t\tif (changed) {\n\t\t\t\tme._lastActive = me._active;\n\n\t\t\t\tif (options.enabled || options.custom) {\n\t\t\t\t\tme._eventPosition = {\n\t\t\t\t\t\tx: e.x,\n\t\t\t\t\t\ty: e.y\n\t\t\t\t\t};\n\n\t\t\t\t\tme.update(true);\n\t\t\t\t\tme.pivot();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn changed;\n\t\t}\n\t});\n\n\t/**\n\t * @namespace Chart.Tooltip.positioners\n\t */\n\tChart.Tooltip.positioners = {\n\t\t/**\n\t\t * Average mode places the tooltip at the average position of the elements shown\n\t\t * @function Chart.Tooltip.positioners.average\n\t\t * @param elements {ChartElement[]} the elements being displayed in the tooltip\n\t\t * @returns {Point} tooltip position\n\t\t */\n\t\taverage: function(elements) {\n\t\t\tif (!elements.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar i, len;\n\t\t\tvar x = 0;\n\t\t\tvar y = 0;\n\t\t\tvar count = 0;\n\n\t\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\t\tvar el = elements[i];\n\t\t\t\tif (el && el.hasValue()) {\n\t\t\t\t\tvar pos = el.tooltipPosition();\n\t\t\t\t\tx += pos.x;\n\t\t\t\t\ty += pos.y;\n\t\t\t\t\t++count;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx: Math.round(x / count),\n\t\t\t\ty: Math.round(y / count)\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Gets the tooltip position nearest of the item nearest to the event position\n\t\t * @function Chart.Tooltip.positioners.nearest\n\t\t * @param elements {Chart.Element[]} the tooltip elements\n\t\t * @param eventPosition {Point} the position of the event in canvas coordinates\n\t\t * @returns {Point} the tooltip position\n\t\t */\n\t\tnearest: function(elements, eventPosition) {\n\t\t\tvar x = eventPosition.x;\n\t\t\tvar y = eventPosition.y;\n\t\t\tvar minDistance = Number.POSITIVE_INFINITY;\n\t\t\tvar i, len, nearestElement;\n\n\t\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\t\tvar el = elements[i];\n\t\t\t\tif (el && el.hasValue()) {\n\t\t\t\t\tvar center = el.getCenterPoint();\n\t\t\t\t\tvar d = helpers.distanceBetweenPoints(eventPosition, center);\n\n\t\t\t\t\tif (d < minDistance) {\n\t\t\t\t\t\tminDistance = d;\n\t\t\t\t\t\tnearestElement = el;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (nearestElement) {\n\t\t\t\tvar tp = nearestElement.tooltipPosition();\n\t\t\t\tx = tp.x;\n\t\t\t\ty = tp.y;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx: x,\n\t\t\t\ty: y\n\t\t\t};\n\t\t}\n\t};\n};\n","'use strict';\n\nvar defaults = require('./core.defaults');\n\ndefaults._set('global', {\n\tresponsive: true,\n\tresponsiveAnimationDuration: 0,\n\tmaintainAspectRatio: true,\n\tevents: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n\thover: {\n\t\tonHover: null,\n\t\tmode: 'nearest',\n\t\tintersect: true,\n\t\tanimationDuration: 400\n\t},\n\tonClick: null,\n\tdefaultColor: 'rgba(0,0,0,0.1)',\n\tdefaultFontColor: '#666',\n\tdefaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\tdefaultFontSize: 12,\n\tdefaultFontStyle: 'normal',\n\tshowLines: true,\n\n\t// Element defaults defined in element extensions\n\telements: {},\n\n\t// Layout options such as padding\n\tlayout: {\n\t\tpadding: {\n\t\t\ttop: 0,\n\t\t\tright: 0,\n\t\t\tbottom: 0,\n\t\t\tleft: 0\n\t\t}\n\t}\n});\n\nmodule.exports = function() {\n\n\t// Occupy the global variable of Chart, and create a simple base class\n\tvar Chart = function(item, config) {\n\t\tthis.construct(item, config);\n\t\treturn this;\n\t};\n\n\tChart.Chart = Chart;\n\n\treturn Chart;\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\n\ndefaults._set('global', {\n\telements: {\n\t\trectangle: {\n\t\t\tbackgroundColor: defaults.global.defaultColor,\n\t\t\tborderColor: defaults.global.defaultColor,\n\t\t\tborderSkipped: 'bottom',\n\t\t\tborderWidth: 0\n\t\t}\n\t}\n});\n\nfunction isVertical(bar) {\n\treturn bar._view.width !== undefined;\n}\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param bar {Chart.Element.Rectangle} the bar\n * @return {Bounds} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar) {\n\tvar vm = bar._view;\n\tvar x1, x2, y1, y2;\n\n\tif (isVertical(bar)) {\n\t\t// vertical\n\t\tvar halfWidth = vm.width / 2;\n\t\tx1 = vm.x - halfWidth;\n\t\tx2 = vm.x + halfWidth;\n\t\ty1 = Math.min(vm.y, vm.base);\n\t\ty2 = Math.max(vm.y, vm.base);\n\t} else {\n\t\t// horizontal bar\n\t\tvar halfHeight = vm.height / 2;\n\t\tx1 = Math.min(vm.x, vm.base);\n\t\tx2 = Math.max(vm.x, vm.base);\n\t\ty1 = vm.y - halfHeight;\n\t\ty2 = vm.y + halfHeight;\n\t}\n\n\treturn {\n\t\tleft: x1,\n\t\ttop: y1,\n\t\tright: x2,\n\t\tbottom: y2\n\t};\n}\n\nmodule.exports = Element.extend({\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar left, right, top, bottom, signX, signY, borderSkipped;\n\t\tvar borderWidth = vm.borderWidth;\n\n\t\tif (!vm.horizontal) {\n\t\t\t// bar\n\t\t\tleft = vm.x - vm.width / 2;\n\t\t\tright = vm.x + vm.width / 2;\n\t\t\ttop = vm.y;\n\t\t\tbottom = vm.base;\n\t\t\tsignX = 1;\n\t\t\tsignY = bottom > top ? 1 : -1;\n\t\t\tborderSkipped = vm.borderSkipped || 'bottom';\n\t\t} else {\n\t\t\t// horizontal bar\n\t\t\tleft = vm.base;\n\t\t\tright = vm.x;\n\t\t\ttop = vm.y - vm.height / 2;\n\t\t\tbottom = vm.y + vm.height / 2;\n\t\t\tsignX = right > left ? 1 : -1;\n\t\t\tsignY = 1;\n\t\t\tborderSkipped = vm.borderSkipped || 'left';\n\t\t}\n\n\t\t// Canvas doesn't allow us to stroke inside the width so we can\n\t\t// adjust the sizes to fit if we're setting a stroke on the line\n\t\tif (borderWidth) {\n\t\t\t// borderWidth shold be less than bar width and bar height.\n\t\t\tvar barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n\t\t\tborderWidth = borderWidth > barSize ? barSize : borderWidth;\n\t\t\tvar halfStroke = borderWidth / 2;\n\t\t\t// Adjust borderWidth when bar top position is near vm.base(zero).\n\t\t\tvar borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n\t\t\tvar borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n\t\t\tvar borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n\t\t\tvar borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\n\t\t\t// not become a vertical line?\n\t\t\tif (borderLeft !== borderRight) {\n\t\t\t\ttop = borderTop;\n\t\t\t\tbottom = borderBottom;\n\t\t\t}\n\t\t\t// not become a horizontal line?\n\t\t\tif (borderTop !== borderBottom) {\n\t\t\t\tleft = borderLeft;\n\t\t\t\tright = borderRight;\n\t\t\t}\n\t\t}\n\n\t\tctx.beginPath();\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = borderWidth;\n\n\t\t// Corner points, from bottom-left to bottom-right clockwise\n\t\t// | 1 2 |\n\t\t// | 0 3 |\n\t\tvar corners = [\n\t\t\t[left, bottom],\n\t\t\t[left, top],\n\t\t\t[right, top],\n\t\t\t[right, bottom]\n\t\t];\n\n\t\t// Find first (starting) corner with fallback to 'bottom'\n\t\tvar borders = ['bottom', 'left', 'top', 'right'];\n\t\tvar startCorner = borders.indexOf(borderSkipped, 0);\n\t\tif (startCorner === -1) {\n\t\t\tstartCorner = 0;\n\t\t}\n\n\t\tfunction cornerAt(index) {\n\t\t\treturn corners[(startCorner + index) % 4];\n\t\t}\n\n\t\t// Draw rectangle from 'startCorner'\n\t\tvar corner = cornerAt(0);\n\t\tctx.moveTo(corner[0], corner[1]);\n\n\t\tfor (var i = 1; i < 4; i++) {\n\t\t\tcorner = cornerAt(i);\n\t\t\tctx.lineTo(corner[0], corner[1]);\n\t\t}\n\n\t\tctx.fill();\n\t\tif (borderWidth) {\n\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\theight: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.base - vm.y;\n\t},\n\n\tinRange: function(mouseX, mouseY) {\n\t\tvar inRange = false;\n\n\t\tif (this._view) {\n\t\t\tvar bounds = getBarBounds(this);\n\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t}\n\n\t\treturn inRange;\n\t},\n\n\tinLabelRange: function(mouseX, mouseY) {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar inRange = false;\n\t\tvar bounds = getBarBounds(me);\n\n\t\tif (isVertical(me)) {\n\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right;\n\t\t} else {\n\t\t\tinRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t}\n\n\t\treturn inRange;\n\t},\n\n\tinXRange: function(mouseX) {\n\t\tvar bounds = getBarBounds(this);\n\t\treturn mouseX >= bounds.left && mouseX <= bounds.right;\n\t},\n\n\tinYRange: function(mouseY) {\n\t\tvar bounds = getBarBounds(this);\n\t\treturn mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar x, y;\n\t\tif (isVertical(this)) {\n\t\t\tx = vm.x;\n\t\t\ty = (vm.y + vm.base) / 2;\n\t\t} else {\n\t\t\tx = (vm.x + vm.base) / 2;\n\t\t\ty = vm.y;\n\t\t}\n\n\t\treturn {x: x, y: y};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.width * Math.abs(vm.y - vm.base);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t}\n});\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\ndefaults._set('scatter', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\tid: 'x-axis-1',    // need an ID so datasets can reference the scale\n\t\t\ttype: 'linear',    // scatter should not use a category axis\n\t\t\tposition: 'bottom'\n\t\t}],\n\t\tyAxes: [{\n\t\t\tid: 'y-axis-1',\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left'\n\t\t}]\n\t},\n\n\tshowLines: false,\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';     // doesn't make sense for scatter since data are formatted as a point\n\t\t\t},\n\t\t\tlabel: function(item) {\n\t\t\t\treturn '(' + item.xLabel + ', ' + item.yLabel + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\t// Scatter charts use line controllers\n\tChart.controllers.scatter = Chart.controllers.line;\n\n};\n","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/lib/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Map.vue?vue&type=style&index=0&id=c31ff5d0&scoped=true&lang=scss&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/lib/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Map.vue?vue&type=style&index=0&id=c31ff5d0&scoped=true&lang=scss&\"","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('polarArea', {\n\tscale: {\n\t\ttype: 'radialLinear',\n\t\tangleLines: {\n\t\t\tdisplay: false\n\t\t},\n\t\tgridLines: {\n\t\t\tcircular: true\n\t\t},\n\t\tpointLabels: {\n\t\t\tdisplay: false\n\t\t},\n\t\tticks: {\n\t\t\tbeginAtZero: true\n\t\t}\n\t},\n\n\t// Boolean - Whether to animate the rotation of the chart\n\tanimation: {\n\t\tanimateRotate: true,\n\t\tanimateScale: true\n\t},\n\n\tstartAngle: -0.5 * Math.PI,\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc.custom || {};\n\t\t\t\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\treturn data.labels[item.index] + ': ' + item.yLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.polarArea = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Arc,\n\n\t\tlinkScales: helpers.noop,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar opts = chart.options;\n\t\t\tvar arcOpts = opts.elements.arc;\n\t\t\tvar minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\t\t\tchart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.index);\n\t\t\tme.innerRadius = me.outerRadius - chart.radiusLength;\n\n\t\t\tmeta.count = me.countVisibleElements();\n\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar opts = chart.options;\n\t\t\tvar animationOpts = opts.animation;\n\t\t\tvar scale = chart.scale;\n\t\t\tvar labels = chart.data.labels;\n\n\t\t\tvar circumference = me.calculateCircumference(dataset.data[index]);\n\t\t\tvar centerX = scale.xCenter;\n\t\t\tvar centerY = scale.yCenter;\n\n\t\t\t// If there is NaN data before us, we need to calculate the starting angle correctly.\n\t\t\t// We could be way more efficient here, but its unlikely that the polar area chart will have a lot of data\n\t\t\tvar visibleCount = 0;\n\t\t\tvar meta = me.getMeta();\n\t\t\tfor (var i = 0; i < index; ++i) {\n\t\t\t\tif (!isNaN(dataset.data[i]) && !meta.data[i].hidden) {\n\t\t\t\t\t++visibleCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// var negHalfPI = -0.5 * Math.PI;\n\t\t\tvar datasetStartAngle = opts.startAngle;\n\t\t\tvar distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\t\t\tvar startAngle = datasetStartAngle + (circumference * visibleCount);\n\t\t\tvar endAngle = startAngle + (arc.hidden ? 0 : circumference);\n\n\t\t\tvar resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\t\t\t\t_scale: scale,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX,\n\t\t\t\t\ty: centerY,\n\t\t\t\t\tinnerRadius: 0,\n\t\t\t\t\touterRadius: reset ? resetRadius : distance,\n\t\t\t\t\tstartAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n\t\t\t\t\tendAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n\t\t\t\t\tlabel: helpers.valueAtIndexOrDefault(labels, index, labels[index])\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Apply border and fill style\n\t\t\tme.removeHoverStyle(arc);\n\n\t\t\tarc.pivot();\n\t\t},\n\n\t\tremoveHoverStyle: function(arc) {\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\n\t\t},\n\n\t\tcountVisibleElements: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar count = 0;\n\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tif (!isNaN(dataset.data[index]) && !element.hidden) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn count;\n\t\t},\n\n\t\tcalculateCircumference: function(value) {\n\t\t\tvar count = this.getMeta().count;\n\t\t\tif (count > 0 && !isNaN(value)) {\n\t\t\t\treturn (2 * Math.PI) / count;\n\t\t\t}\n\t\t\treturn 0;\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\nvar Interaction = require('./core.interaction');\nvar layouts = require('./core.layouts');\nvar platform = require('../platforms/platform');\nvar plugins = require('./core.plugins');\n\nmodule.exports = function(Chart) {\n\n\t// Create a dictionary of chart types, to allow for extension of existing types\n\tChart.types = {};\n\n\t// Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n\t// Destroy method on the chart will remove the instance of the chart from this reference.\n\tChart.instances = {};\n\n\t// Controllers available for dataset visualization eg. bar, line, slice, etc.\n\tChart.controllers = {};\n\n\t/**\n\t * Initializes the given config with global and chart default values.\n\t */\n\tfunction initConfig(config) {\n\t\tconfig = config || {};\n\n\t\t// Do NOT use configMerge() for the data object because this method merges arrays\n\t\t// and so would change references to labels and datasets, preventing data updates.\n\t\tvar data = config.data = config.data || {};\n\t\tdata.datasets = data.datasets || [];\n\t\tdata.labels = data.labels || [];\n\n\t\tconfig.options = helpers.configMerge(\n\t\t\tdefaults.global,\n\t\t\tdefaults[config.type],\n\t\t\tconfig.options || {});\n\n\t\treturn config;\n\t}\n\n\t/**\n\t * Updates the config of the chart\n\t * @param chart {Chart} chart to update the options for\n\t */\n\tfunction updateConfig(chart) {\n\t\tvar newOptions = chart.options;\n\n\t\thelpers.each(chart.scales, function(scale) {\n\t\t\tlayouts.removeBox(chart, scale);\n\t\t});\n\n\t\tnewOptions = helpers.configMerge(\n\t\t\tChart.defaults.global,\n\t\t\tChart.defaults[chart.config.type],\n\t\t\tnewOptions);\n\n\t\tchart.options = chart.config.options = newOptions;\n\t\tchart.ensureScalesHaveIDs();\n\t\tchart.buildOrUpdateScales();\n\t\t// Tooltip\n\t\tchart.tooltip._options = newOptions.tooltips;\n\t\tchart.tooltip.initialize();\n\t}\n\n\tfunction positionIsHorizontal(position) {\n\t\treturn position === 'top' || position === 'bottom';\n\t}\n\n\thelpers.extend(Chart.prototype, /** @lends Chart */ {\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tconstruct: function(item, config) {\n\t\t\tvar me = this;\n\n\t\t\tconfig = initConfig(config);\n\n\t\t\tvar context = platform.acquireContext(item, config);\n\t\t\tvar canvas = context && context.canvas;\n\t\t\tvar height = canvas && canvas.height;\n\t\t\tvar width = canvas && canvas.width;\n\n\t\t\tme.id = helpers.uid();\n\t\t\tme.ctx = context;\n\t\t\tme.canvas = canvas;\n\t\t\tme.config = config;\n\t\t\tme.width = width;\n\t\t\tme.height = height;\n\t\t\tme.aspectRatio = height ? width / height : null;\n\t\t\tme.options = config.options;\n\t\t\tme._bufferedRender = false;\n\n\t\t\t/**\n\t\t\t * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n\t\t\t * the \"instance\" still need to be defined since it might be called from plugins.\n\t\t\t * @prop Chart#chart\n\t\t\t * @deprecated since version 2.6.0\n\t\t\t * @todo remove at version 3\n\t\t\t * @private\n\t\t\t */\n\t\t\tme.chart = me;\n\t\t\tme.controller = me; // chart.chart.controller #inception\n\n\t\t\t// Add the chart instance to the global namespace\n\t\t\tChart.instances[me.id] = me;\n\n\t\t\t// Define alias to the config data: `chart.data === chart.config.data`\n\t\t\tObject.defineProperty(me, 'data', {\n\t\t\t\tget: function() {\n\t\t\t\t\treturn me.config.data;\n\t\t\t\t},\n\t\t\t\tset: function(value) {\n\t\t\t\t\tme.config.data = value;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (!context || !canvas) {\n\t\t\t\t// The given item is not a compatible context2d element, let's return before finalizing\n\t\t\t\t// the chart initialization but after setting basic chart / controller properties that\n\t\t\t\t// can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n\t\t\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\t\t\tconsole.error(\"Failed to create chart: can't acquire context from the given item\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tme.initialize();\n\t\t\tme.update();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tinitialize: function() {\n\t\t\tvar me = this;\n\n\t\t\t// Before init plugin notification\n\t\t\tplugins.notify(me, 'beforeInit');\n\n\t\t\thelpers.retinaScale(me, me.options.devicePixelRatio);\n\n\t\t\tme.bindEvents();\n\n\t\t\tif (me.options.responsive) {\n\t\t\t\t// Initial resize before chart draws (must be silent to preserve initial animations).\n\t\t\t\tme.resize(true);\n\t\t\t}\n\n\t\t\t// Make sure scales have IDs and are built before we build any controllers.\n\t\t\tme.ensureScalesHaveIDs();\n\t\t\tme.buildOrUpdateScales();\n\t\t\tme.initToolTip();\n\n\t\t\t// After init plugin notification\n\t\t\tplugins.notify(me, 'afterInit');\n\n\t\t\treturn me;\n\t\t},\n\n\t\tclear: function() {\n\t\t\thelpers.canvas.clear(this);\n\t\t\treturn this;\n\t\t},\n\n\t\tstop: function() {\n\t\t\t// Stops any current animation loop occurring\n\t\t\tChart.animationService.cancelAnimation(this);\n\t\t\treturn this;\n\t\t},\n\n\t\tresize: function(silent) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar canvas = me.canvas;\n\t\t\tvar aspectRatio = (options.maintainAspectRatio && me.aspectRatio) || null;\n\n\t\t\t// the canvas render width and height will be casted to integers so make sure that\n\t\t\t// the canvas display style uses the same integer values to avoid blurring effect.\n\n\t\t\t// Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collased\n\t\t\tvar newWidth = Math.max(0, Math.floor(helpers.getMaximumWidth(canvas)));\n\t\t\tvar newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas)));\n\n\t\t\tif (me.width === newWidth && me.height === newHeight) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcanvas.width = me.width = newWidth;\n\t\t\tcanvas.height = me.height = newHeight;\n\t\t\tcanvas.style.width = newWidth + 'px';\n\t\t\tcanvas.style.height = newHeight + 'px';\n\n\t\t\thelpers.retinaScale(me, options.devicePixelRatio);\n\n\t\t\tif (!silent) {\n\t\t\t\t// Notify any plugins about the resize\n\t\t\t\tvar newSize = {width: newWidth, height: newHeight};\n\t\t\t\tplugins.notify(me, 'resize', [newSize]);\n\n\t\t\t\t// Notify of resize\n\t\t\t\tif (me.options.onResize) {\n\t\t\t\t\tme.options.onResize(me, newSize);\n\t\t\t\t}\n\n\t\t\t\tme.stop();\n\t\t\t\tme.update(me.options.responsiveAnimationDuration);\n\t\t\t}\n\t\t},\n\n\t\tensureScalesHaveIDs: function() {\n\t\t\tvar options = this.options;\n\t\t\tvar scalesOptions = options.scales || {};\n\t\t\tvar scaleOptions = options.scale;\n\n\t\t\thelpers.each(scalesOptions.xAxes, function(xAxisOptions, index) {\n\t\t\t\txAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\n\t\t\t});\n\n\t\t\thelpers.each(scalesOptions.yAxes, function(yAxisOptions, index) {\n\t\t\t\tyAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\n\t\t\t});\n\n\t\t\tif (scaleOptions) {\n\t\t\t\tscaleOptions.id = scaleOptions.id || 'scale';\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Builds a map of scale ID to scale object for future lookup.\n\t\t */\n\t\tbuildOrUpdateScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar scales = me.scales || {};\n\t\t\tvar items = [];\n\t\t\tvar updated = Object.keys(scales).reduce(function(obj, id) {\n\t\t\t\tobj[id] = false;\n\t\t\t\treturn obj;\n\t\t\t}, {});\n\n\t\t\tif (options.scales) {\n\t\t\t\titems = items.concat(\n\t\t\t\t\t(options.scales.xAxes || []).map(function(xAxisOptions) {\n\t\t\t\t\t\treturn {options: xAxisOptions, dtype: 'category', dposition: 'bottom'};\n\t\t\t\t\t}),\n\t\t\t\t\t(options.scales.yAxes || []).map(function(yAxisOptions) {\n\t\t\t\t\t\treturn {options: yAxisOptions, dtype: 'linear', dposition: 'left'};\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (options.scale) {\n\t\t\t\titems.push({\n\t\t\t\t\toptions: options.scale,\n\t\t\t\t\tdtype: 'radialLinear',\n\t\t\t\t\tisDefault: true,\n\t\t\t\t\tdposition: 'chartArea'\n\t\t\t\t});\n\t\t\t}\n\n\t\t\thelpers.each(items, function(item) {\n\t\t\t\tvar scaleOptions = item.options;\n\t\t\t\tvar id = scaleOptions.id;\n\t\t\t\tvar scaleType = helpers.valueOrDefault(scaleOptions.type, item.dtype);\n\n\t\t\t\tif (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n\t\t\t\t\tscaleOptions.position = item.dposition;\n\t\t\t\t}\n\n\t\t\t\tupdated[id] = true;\n\t\t\t\tvar scale = null;\n\t\t\t\tif (id in scales && scales[id].type === scaleType) {\n\t\t\t\t\tscale = scales[id];\n\t\t\t\t\tscale.options = scaleOptions;\n\t\t\t\t\tscale.ctx = me.ctx;\n\t\t\t\t\tscale.chart = me;\n\t\t\t\t} else {\n\t\t\t\t\tvar scaleClass = Chart.scaleService.getScaleConstructor(scaleType);\n\t\t\t\t\tif (!scaleClass) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tscale = new scaleClass({\n\t\t\t\t\t\tid: id,\n\t\t\t\t\t\ttype: scaleType,\n\t\t\t\t\t\toptions: scaleOptions,\n\t\t\t\t\t\tctx: me.ctx,\n\t\t\t\t\t\tchart: me\n\t\t\t\t\t});\n\t\t\t\t\tscales[scale.id] = scale;\n\t\t\t\t}\n\n\t\t\t\tscale.mergeTicksOptions();\n\n\t\t\t\t// TODO(SB): I think we should be able to remove this custom case (options.scale)\n\t\t\t\t// and consider it as a regular scale part of the \"scales\"\" map only! This would\n\t\t\t\t// make the logic easier and remove some useless? custom code.\n\t\t\t\tif (item.isDefault) {\n\t\t\t\t\tme.scale = scale;\n\t\t\t\t}\n\t\t\t});\n\t\t\t// clear up discarded scales\n\t\t\thelpers.each(updated, function(hasUpdated, id) {\n\t\t\t\tif (!hasUpdated) {\n\t\t\t\t\tdelete scales[id];\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tme.scales = scales;\n\n\t\t\tChart.scaleService.addScalesToLayout(this);\n\t\t},\n\n\t\tbuildOrUpdateControllers: function() {\n\t\t\tvar me = this;\n\t\t\tvar types = [];\n\t\t\tvar newControllers = [];\n\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = me.getDatasetMeta(datasetIndex);\n\t\t\t\tvar type = dataset.type || me.config.type;\n\n\t\t\t\tif (meta.type && meta.type !== type) {\n\t\t\t\t\tme.destroyDatasetMeta(datasetIndex);\n\t\t\t\t\tmeta = me.getDatasetMeta(datasetIndex);\n\t\t\t\t}\n\t\t\t\tmeta.type = type;\n\n\t\t\t\ttypes.push(meta.type);\n\n\t\t\t\tif (meta.controller) {\n\t\t\t\t\tmeta.controller.updateIndex(datasetIndex);\n\t\t\t\t\tmeta.controller.linkScales();\n\t\t\t\t} else {\n\t\t\t\t\tvar ControllerClass = Chart.controllers[meta.type];\n\t\t\t\t\tif (ControllerClass === undefined) {\n\t\t\t\t\t\tthrow new Error('\"' + meta.type + '\" is not a chart type.');\n\t\t\t\t\t}\n\n\t\t\t\t\tmeta.controller = new ControllerClass(me, datasetIndex);\n\t\t\t\t\tnewControllers.push(meta.controller);\n\t\t\t\t}\n\t\t\t}, me);\n\n\t\t\treturn newControllers;\n\t\t},\n\n\t\t/**\n\t\t * Reset the elements of all datasets\n\t\t * @private\n\t\t */\n\t\tresetElements: function() {\n\t\t\tvar me = this;\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.reset();\n\t\t\t}, me);\n\t\t},\n\n\t\t/**\n\t\t* Resets the chart back to it's state before the initial animation\n\t\t*/\n\t\treset: function() {\n\t\t\tthis.resetElements();\n\t\t\tthis.tooltip.initialize();\n\t\t},\n\n\t\tupdate: function(config) {\n\t\t\tvar me = this;\n\n\t\t\tif (!config || typeof config !== 'object') {\n\t\t\t\t// backwards compatibility\n\t\t\t\tconfig = {\n\t\t\t\t\tduration: config,\n\t\t\t\t\tlazy: arguments[1]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tupdateConfig(me);\n\n\t\t\t// plugins options references might have change, let's invalidate the cache\n\t\t\t// https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t\t\tplugins._invalidate(me);\n\n\t\t\tif (plugins.notify(me, 'beforeUpdate') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// In case the entire data object changed\n\t\t\tme.tooltip._data = me.data;\n\n\t\t\t// Make sure dataset controllers are updated and new controllers are reset\n\t\t\tvar newControllers = me.buildOrUpdateControllers();\n\n\t\t\t// Make sure all dataset controllers have correct meta data counts\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n\t\t\t}, me);\n\n\t\t\tme.updateLayout();\n\n\t\t\t// Can only reset the new controllers after the scales have been updated\n\t\t\tif (me.options.animation && me.options.animation.duration) {\n\t\t\t\thelpers.each(newControllers, function(controller) {\n\t\t\t\t\tcontroller.reset();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme.updateDatasets();\n\n\t\t\t// Need to reset tooltip in case it is displayed with elements that are removed\n\t\t\t// after update.\n\t\t\tme.tooltip.initialize();\n\n\t\t\t// Last active contains items that were previously in the tooltip.\n\t\t\t// When we reset the tooltip, we need to clear it\n\t\t\tme.lastActive = [];\n\n\t\t\t// Do this before render so that any plugins that need final scale updates can use it\n\t\t\tplugins.notify(me, 'afterUpdate');\n\n\t\t\tif (me._bufferedRender) {\n\t\t\t\tme._bufferedRequest = {\n\t\t\t\t\tduration: config.duration,\n\t\t\t\t\teasing: config.easing,\n\t\t\t\t\tlazy: config.lazy\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tme.render(config);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t\t * @private\n\t\t */\n\t\tupdateLayout: function() {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeLayout') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlayouts.update(this, this.width, this.height);\n\n\t\t\t/**\n\t\t\t * Provided for backward compatibility, use `afterLayout` instead.\n\t\t\t * @method IPlugin#afterScaleUpdate\n\t\t\t * @deprecated since version 2.5.0\n\t\t\t * @todo remove at version 3\n\t\t\t * @private\n\t\t\t */\n\t\t\tplugins.notify(me, 'afterScaleUpdate');\n\t\t\tplugins.notify(me, 'afterLayout');\n\t\t},\n\n\t\t/**\n\t\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t\t * @private\n\t\t */\n\t\tupdateDatasets: function() {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tme.updateDataset(i);\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterDatasetsUpdate');\n\t\t},\n\n\t\t/**\n\t\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t\t * @private\n\t\t */\n\t\tupdateDataset: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getDatasetMeta(index);\n\t\t\tvar args = {\n\t\t\t\tmeta: meta,\n\t\t\t\tindex: index\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmeta.controller.update();\n\n\t\t\tplugins.notify(me, 'afterDatasetUpdate', [args]);\n\t\t},\n\n\t\trender: function(config) {\n\t\t\tvar me = this;\n\n\t\t\tif (!config || typeof config !== 'object') {\n\t\t\t\t// backwards compatibility\n\t\t\t\tconfig = {\n\t\t\t\t\tduration: config,\n\t\t\t\t\tlazy: arguments[1]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar duration = config.duration;\n\t\t\tvar lazy = config.lazy;\n\n\t\t\tif (plugins.notify(me, 'beforeRender') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar animationOptions = me.options.animation;\n\t\t\tvar onComplete = function(animation) {\n\t\t\t\tplugins.notify(me, 'afterRender');\n\t\t\t\thelpers.callback(animationOptions && animationOptions.onComplete, [animation], me);\n\t\t\t};\n\n\t\t\tif (animationOptions && ((typeof duration !== 'undefined' && duration !== 0) || (typeof duration === 'undefined' && animationOptions.duration !== 0))) {\n\t\t\t\tvar animation = new Chart.Animation({\n\t\t\t\t\tnumSteps: (duration || animationOptions.duration) / 16.66, // 60 fps\n\t\t\t\t\teasing: config.easing || animationOptions.easing,\n\n\t\t\t\t\trender: function(chart, animationObject) {\n\t\t\t\t\t\tvar easingFunction = helpers.easing.effects[animationObject.easing];\n\t\t\t\t\t\tvar currentStep = animationObject.currentStep;\n\t\t\t\t\t\tvar stepDecimal = currentStep / animationObject.numSteps;\n\n\t\t\t\t\t\tchart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n\t\t\t\t\t},\n\n\t\t\t\t\tonAnimationProgress: animationOptions.onProgress,\n\t\t\t\t\tonAnimationComplete: onComplete\n\t\t\t\t});\n\n\t\t\t\tChart.animationService.addAnimation(me, animation, duration, lazy);\n\t\t\t} else {\n\t\t\t\tme.draw();\n\n\t\t\t\t// See https://github.com/chartjs/Chart.js/issues/3781\n\t\t\t\tonComplete(new Chart.Animation({numSteps: 0, chart: me}));\n\t\t\t}\n\n\t\t\treturn me;\n\t\t},\n\n\t\tdraw: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tme.clear();\n\n\t\t\tif (helpers.isNullOrUndef(easingValue)) {\n\t\t\t\teasingValue = 1;\n\t\t\t}\n\n\t\t\tme.transition(easingValue);\n\n\t\t\tif (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Draw all the scales\n\t\t\thelpers.each(me.boxes, function(box) {\n\t\t\t\tbox.draw(me.chartArea);\n\t\t\t}, me);\n\n\t\t\tif (me.scale) {\n\t\t\t\tme.scale.draw();\n\t\t\t}\n\n\t\t\tme.drawDatasets(easingValue);\n\t\t\tme._drawTooltip(easingValue);\n\n\t\t\tplugins.notify(me, 'afterDraw', [easingValue]);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\ttransition: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tfor (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\t\tme.getDatasetMeta(i).controller.transition(easingValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.tooltip.transition(easingValue);\n\t\t},\n\n\t\t/**\n\t\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t\t * @private\n\t\t */\n\t\tdrawDatasets: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Draw datasets reversed to support proper line stacking\n\t\t\tfor (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n\t\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\t\tme.drawDataset(i, easingValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n\t\t},\n\n\t\t/**\n\t\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t\t * @private\n\t\t */\n\t\tdrawDataset: function(index, easingValue) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getDatasetMeta(index);\n\t\t\tvar args = {\n\t\t\t\tmeta: meta,\n\t\t\t\tindex: index,\n\t\t\t\teasingValue: easingValue\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmeta.controller.draw(easingValue);\n\n\t\t\tplugins.notify(me, 'afterDatasetDraw', [args]);\n\t\t},\n\n\t\t/**\n\t\t * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n\t\t * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n\t\t * @private\n\t\t */\n\t\t_drawTooltip: function(easingValue) {\n\t\t\tvar me = this;\n\t\t\tvar tooltip = me.tooltip;\n\t\t\tvar args = {\n\t\t\t\ttooltip: tooltip,\n\t\t\t\teasingValue: easingValue\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttooltip.draw();\n\n\t\t\tplugins.notify(me, 'afterTooltipDraw', [args]);\n\t\t},\n\n\t\t// Get the single element that was clicked on\n\t\t// @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n\t\tgetElementAtEvent: function(e) {\n\t\t\treturn Interaction.modes.single(this, e);\n\t\t},\n\n\t\tgetElementsAtEvent: function(e) {\n\t\t\treturn Interaction.modes.label(this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtXAxis: function(e) {\n\t\t\treturn Interaction.modes['x-axis'](this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtEventForMode: function(e, mode, options) {\n\t\t\tvar method = Interaction.modes[mode];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\treturn method(this, e, options);\n\t\t\t}\n\n\t\t\treturn [];\n\t\t},\n\n\t\tgetDatasetAtEvent: function(e) {\n\t\t\treturn Interaction.modes.dataset(this, e, {intersect: true});\n\t\t},\n\n\t\tgetDatasetMeta: function(datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.data.datasets[datasetIndex];\n\t\t\tif (!dataset._meta) {\n\t\t\t\tdataset._meta = {};\n\t\t\t}\n\n\t\t\tvar meta = dataset._meta[me.id];\n\t\t\tif (!meta) {\n\t\t\t\tmeta = dataset._meta[me.id] = {\n\t\t\t\t\ttype: null,\n\t\t\t\t\tdata: [],\n\t\t\t\t\tdataset: null,\n\t\t\t\t\tcontroller: null,\n\t\t\t\t\thidden: null,\t\t\t// See isDatasetVisible() comment\n\t\t\t\t\txAxisID: null,\n\t\t\t\t\tyAxisID: null\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn meta;\n\t\t},\n\n\t\tgetVisibleDatasetCount: function() {\n\t\t\tvar count = 0;\n\t\t\tfor (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tif (this.isDatasetVisible(i)) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn count;\n\t\t},\n\n\t\tisDatasetVisible: function(datasetIndex) {\n\t\t\tvar meta = this.getDatasetMeta(datasetIndex);\n\n\t\t\t// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n\t\t\t// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\t\t\treturn typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n\t\t},\n\n\t\tgenerateLegend: function() {\n\t\t\treturn this.options.legendCallback(this);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tdestroyDatasetMeta: function(datasetIndex) {\n\t\t\tvar id = this.id;\n\t\t\tvar dataset = this.data.datasets[datasetIndex];\n\t\t\tvar meta = dataset._meta && dataset._meta[id];\n\n\t\t\tif (meta) {\n\t\t\t\tmeta.controller.destroy();\n\t\t\t\tdelete dataset._meta[id];\n\t\t\t}\n\t\t},\n\n\t\tdestroy: function() {\n\t\t\tvar me = this;\n\t\t\tvar canvas = me.canvas;\n\t\t\tvar i, ilen;\n\n\t\t\tme.stop();\n\n\t\t\t// dataset controllers need to cleanup associated data\n\t\t\tfor (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tme.destroyDatasetMeta(i);\n\t\t\t}\n\n\t\t\tif (canvas) {\n\t\t\t\tme.unbindEvents();\n\t\t\t\thelpers.canvas.clear(me);\n\t\t\t\tplatform.releaseContext(me.ctx);\n\t\t\t\tme.canvas = null;\n\t\t\t\tme.ctx = null;\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'destroy');\n\n\t\t\tdelete Chart.instances[me.id];\n\t\t},\n\n\t\ttoBase64Image: function() {\n\t\t\treturn this.canvas.toDataURL.apply(this.canvas, arguments);\n\t\t},\n\n\t\tinitToolTip: function() {\n\t\t\tvar me = this;\n\t\t\tme.tooltip = new Chart.Tooltip({\n\t\t\t\t_chart: me,\n\t\t\t\t_chartInstance: me, // deprecated, backward compatibility\n\t\t\t\t_data: me.data,\n\t\t\t\t_options: me.options.tooltips\n\t\t\t}, me);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\tvar listeners = me._listeners = {};\n\t\t\tvar listener = function() {\n\t\t\t\tme.eventHandler.apply(me, arguments);\n\t\t\t};\n\n\t\t\thelpers.each(me.options.events, function(type) {\n\t\t\t\tplatform.addEventListener(me, type, listener);\n\t\t\t\tlisteners[type] = listener;\n\t\t\t});\n\n\t\t\t// Elements used to detect size change should not be injected for non responsive charts.\n\t\t\t// See https://github.com/chartjs/Chart.js/issues/2210\n\t\t\tif (me.options.responsive) {\n\t\t\t\tlistener = function() {\n\t\t\t\t\tme.resize();\n\t\t\t\t};\n\n\t\t\t\tplatform.addEventListener(me, 'resize', listener);\n\t\t\t\tlisteners.resize = listener;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tunbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\tvar listeners = me._listeners;\n\t\t\tif (!listeners) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdelete me._listeners;\n\t\t\thelpers.each(listeners, function(listener, type) {\n\t\t\t\tplatform.removeEventListener(me, type, listener);\n\t\t\t});\n\t\t},\n\n\t\tupdateHoverStyle: function(elements, mode, enabled) {\n\t\t\tvar method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n\t\t\tvar element, i, ilen;\n\n\t\t\tfor (i = 0, ilen = elements.length; i < ilen; ++i) {\n\t\t\t\telement = elements[i];\n\t\t\t\tif (element) {\n\t\t\t\t\tthis.getDatasetMeta(element._datasetIndex).controller[method](element);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\teventHandler: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar tooltip = me.tooltip;\n\n\t\t\tif (plugins.notify(me, 'beforeEvent', [e]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Buffer any update calls so that renders do not occur\n\t\t\tme._bufferedRender = true;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\tvar changed = me.handleEvent(e);\n\t\t\t// for smooth tooltip animations issue #4989\n\t\t\t// the tooltip should be the source of change\n\t\t\t// Animation check workaround:\n\t\t\t// tooltip._start will be null when tooltip isn't animating\n\t\t\tif (tooltip) {\n\t\t\t\tchanged = tooltip._start\n\t\t\t\t\t? tooltip.handleEvent(e)\n\t\t\t\t\t: changed | tooltip.handleEvent(e);\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterEvent', [e]);\n\n\t\t\tvar bufferedRequest = me._bufferedRequest;\n\t\t\tif (bufferedRequest) {\n\t\t\t\t// If we have an update that was triggered, we need to do a normal render\n\t\t\t\tme.render(bufferedRequest);\n\t\t\t} else if (changed && !me.animating) {\n\t\t\t\t// If entering, leaving, or changing elements, animate the change via pivot\n\t\t\t\tme.stop();\n\n\t\t\t\t// We only need to render at this point. Updating will cause scales to be\n\t\t\t\t// recomputed generating flicker & using more memory than necessary.\n\t\t\t\tme.render(me.options.hover.animationDuration, true);\n\t\t\t}\n\n\t\t\tme._bufferedRender = false;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\treturn me;\n\t\t},\n\n\t\t/**\n\t\t * Handle an event\n\t\t * @private\n\t\t * @param {IEvent} event the event to handle\n\t\t * @return {Boolean} true if the chart needs to re-render\n\t\t */\n\t\thandleEvent: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options || {};\n\t\t\tvar hoverOptions = options.hover;\n\t\t\tvar changed = false;\n\n\t\t\tme.lastActive = me.lastActive || [];\n\n\t\t\t// Find Active Elements for hover and tooltips\n\t\t\tif (e.type === 'mouseout') {\n\t\t\t\tme.active = [];\n\t\t\t} else {\n\t\t\t\tme.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n\t\t\t}\n\n\t\t\t// Invoke onHover hook\n\t\t\t// Need to call with native event here to not break backwards compatibility\n\t\t\thelpers.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n\t\t\tif (e.type === 'mouseup' || e.type === 'click') {\n\t\t\t\tif (options.onClick) {\n\t\t\t\t\t// Use e.native here for backwards compatibility\n\t\t\t\t\toptions.onClick.call(me, e.native, me.active);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove styling for last active (even if it may still be active)\n\t\t\tif (me.lastActive.length) {\n\t\t\t\tme.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n\t\t\t}\n\n\t\t\t// Built in hover styling\n\t\t\tif (me.active.length && hoverOptions.mode) {\n\t\t\t\tme.updateHoverStyle(me.active, hoverOptions.mode, true);\n\t\t\t}\n\n\t\t\tchanged = !helpers.arrayEquals(me.active, me.lastActive);\n\n\t\t\t// Remember Last Actives\n\t\t\tme.lastActive = me.active;\n\n\t\t\treturn changed;\n\t\t}\n\t});\n\n\t/**\n\t * Provided for backward compatibility, use Chart instead.\n\t * @class Chart.Controller\n\t * @deprecated since version 2.6.0\n\t * @todo remove at version 3\n\t * @private\n\t */\n\tChart.Controller = Chart;\n};\n","/* MIT license */\nvar convert = require('color-convert');\nvar string = require('chartjs-color-string');\n\nvar Color = function (obj) {\n\tif (obj instanceof Color) {\n\t\treturn obj;\n\t}\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj);\n\t}\n\n\tthis.valid = false;\n\tthis.values = {\n\t\trgb: [0, 0, 0],\n\t\thsl: [0, 0, 0],\n\t\thsv: [0, 0, 0],\n\t\thwb: [0, 0, 0],\n\t\tcmyk: [0, 0, 0, 0],\n\t\talpha: 1\n\t};\n\n\t// parse Color() argument\n\tvar vals;\n\tif (typeof obj === 'string') {\n\t\tvals = string.getRgba(obj);\n\t\tif (vals) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals = string.getHsla(obj)) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals = string.getHwb(obj)) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t}\n\t} else if (typeof obj === 'object') {\n\t\tvals = obj;\n\t\tif (vals.r !== undefined || vals.red !== undefined) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals.l !== undefined || vals.lightness !== undefined) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals.v !== undefined || vals.value !== undefined) {\n\t\t\tthis.setValues('hsv', vals);\n\t\t} else if (vals.w !== undefined || vals.whiteness !== undefined) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t} else if (vals.c !== undefined || vals.cyan !== undefined) {\n\t\t\tthis.setValues('cmyk', vals);\n\t\t}\n\t}\n};\n\nColor.prototype = {\n\tisValid: function () {\n\t\treturn this.valid;\n\t},\n\trgb: function () {\n\t\treturn this.setSpace('rgb', arguments);\n\t},\n\thsl: function () {\n\t\treturn this.setSpace('hsl', arguments);\n\t},\n\thsv: function () {\n\t\treturn this.setSpace('hsv', arguments);\n\t},\n\thwb: function () {\n\t\treturn this.setSpace('hwb', arguments);\n\t},\n\tcmyk: function () {\n\t\treturn this.setSpace('cmyk', arguments);\n\t},\n\n\trgbArray: function () {\n\t\treturn this.values.rgb;\n\t},\n\thslArray: function () {\n\t\treturn this.values.hsl;\n\t},\n\thsvArray: function () {\n\t\treturn this.values.hsv;\n\t},\n\thwbArray: function () {\n\t\tvar values = this.values;\n\t\tif (values.alpha !== 1) {\n\t\t\treturn values.hwb.concat([values.alpha]);\n\t\t}\n\t\treturn values.hwb;\n\t},\n\tcmykArray: function () {\n\t\treturn this.values.cmyk;\n\t},\n\trgbaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.rgb.concat([values.alpha]);\n\t},\n\thslaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.hsl.concat([values.alpha]);\n\t},\n\talpha: function (val) {\n\t\tif (val === undefined) {\n\t\t\treturn this.values.alpha;\n\t\t}\n\t\tthis.setValues('alpha', val);\n\t\treturn this;\n\t},\n\n\tred: function (val) {\n\t\treturn this.setChannel('rgb', 0, val);\n\t},\n\tgreen: function (val) {\n\t\treturn this.setChannel('rgb', 1, val);\n\t},\n\tblue: function (val) {\n\t\treturn this.setChannel('rgb', 2, val);\n\t},\n\thue: function (val) {\n\t\tif (val) {\n\t\t\tval %= 360;\n\t\t\tval = val < 0 ? 360 + val : val;\n\t\t}\n\t\treturn this.setChannel('hsl', 0, val);\n\t},\n\tsaturation: function (val) {\n\t\treturn this.setChannel('hsl', 1, val);\n\t},\n\tlightness: function (val) {\n\t\treturn this.setChannel('hsl', 2, val);\n\t},\n\tsaturationv: function (val) {\n\t\treturn this.setChannel('hsv', 1, val);\n\t},\n\twhiteness: function (val) {\n\t\treturn this.setChannel('hwb', 1, val);\n\t},\n\tblackness: function (val) {\n\t\treturn this.setChannel('hwb', 2, val);\n\t},\n\tvalue: function (val) {\n\t\treturn this.setChannel('hsv', 2, val);\n\t},\n\tcyan: function (val) {\n\t\treturn this.setChannel('cmyk', 0, val);\n\t},\n\tmagenta: function (val) {\n\t\treturn this.setChannel('cmyk', 1, val);\n\t},\n\tyellow: function (val) {\n\t\treturn this.setChannel('cmyk', 2, val);\n\t},\n\tblack: function (val) {\n\t\treturn this.setChannel('cmyk', 3, val);\n\t},\n\n\thexString: function () {\n\t\treturn string.hexString(this.values.rgb);\n\t},\n\trgbString: function () {\n\t\treturn string.rgbString(this.values.rgb, this.values.alpha);\n\t},\n\trgbaString: function () {\n\t\treturn string.rgbaString(this.values.rgb, this.values.alpha);\n\t},\n\tpercentString: function () {\n\t\treturn string.percentString(this.values.rgb, this.values.alpha);\n\t},\n\thslString: function () {\n\t\treturn string.hslString(this.values.hsl, this.values.alpha);\n\t},\n\thslaString: function () {\n\t\treturn string.hslaString(this.values.hsl, this.values.alpha);\n\t},\n\thwbString: function () {\n\t\treturn string.hwbString(this.values.hwb, this.values.alpha);\n\t},\n\tkeyword: function () {\n\t\treturn string.keyword(this.values.rgb, this.values.alpha);\n\t},\n\n\trgbNumber: function () {\n\t\tvar rgb = this.values.rgb;\n\t\treturn (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.values.rgb;\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tdark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.values.rgb;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tlight: function () {\n\t\treturn !this.dark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = [];\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb[i] = 255 - this.values.rgb[i];\n\t\t}\n\t\tthis.setValues('rgb', rgb);\n\t\treturn this;\n\t},\n\n\tlighten: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] += hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdarken: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] -= hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] += hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] -= hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\twhiten: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[1] += hwb[1] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tblacken: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[2] += hwb[2] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tgreyscale: function () {\n\t\tvar rgb = this.values.rgb;\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\tthis.setValues('rgb', [val, val, val]);\n\t\treturn this;\n\t},\n\n\tclearer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha - (alpha * ratio));\n\t\treturn this;\n\t},\n\n\topaquer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha + (alpha * ratio));\n\t\treturn this;\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hsl = this.values.hsl;\n\t\tvar hue = (hsl[0] + degrees) % 360;\n\t\thsl[0] = hue < 0 ? 360 + hue : hue;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\t/**\n\t * Ported from sass implementation in C\n\t * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t */\n\tmix: function (mixinColor, weight) {\n\t\tvar color1 = this;\n\t\tvar color2 = mixinColor;\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn this\n\t\t\t.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue()\n\t\t\t)\n\t\t\t.alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n\n\ttoJSON: function () {\n\t\treturn this.rgb();\n\t},\n\n\tclone: function () {\n\t\t// NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n\t\t// making the final build way to big to embed in Chart.js. So let's do it manually,\n\t\t// assuming that values to clone are 1 dimension arrays containing only numbers,\n\t\t// except 'alpha' which is a number.\n\t\tvar result = new Color();\n\t\tvar source = this.values;\n\t\tvar target = result.values;\n\t\tvar value, type;\n\n\t\tfor (var prop in source) {\n\t\t\tif (source.hasOwnProperty(prop)) {\n\t\t\t\tvalue = source[prop];\n\t\t\t\ttype = ({}).toString.call(value);\n\t\t\t\tif (type === '[object Array]') {\n\t\t\t\t\ttarget[prop] = value.slice(0);\n\t\t\t\t} else if (type === '[object Number]') {\n\t\t\t\t\ttarget[prop] = value;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error('unexpected color value:', value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n};\n\nColor.prototype.spaces = {\n\trgb: ['red', 'green', 'blue'],\n\thsl: ['hue', 'saturation', 'lightness'],\n\thsv: ['hue', 'saturation', 'value'],\n\thwb: ['hue', 'whiteness', 'blackness'],\n\tcmyk: ['cyan', 'magenta', 'yellow', 'black']\n};\n\nColor.prototype.maxes = {\n\trgb: [255, 255, 255],\n\thsl: [360, 100, 100],\n\thsv: [360, 100, 100],\n\thwb: [360, 100, 100],\n\tcmyk: [100, 100, 100, 100]\n};\n\nColor.prototype.getValues = function (space) {\n\tvar values = this.values;\n\tvar vals = {};\n\n\tfor (var i = 0; i < space.length; i++) {\n\t\tvals[space.charAt(i)] = values[space][i];\n\t}\n\n\tif (values.alpha !== 1) {\n\t\tvals.a = values.alpha;\n\t}\n\n\t// {r: 255, g: 255, b: 255, a: 0.4}\n\treturn vals;\n};\n\nColor.prototype.setValues = function (space, vals) {\n\tvar values = this.values;\n\tvar spaces = this.spaces;\n\tvar maxes = this.maxes;\n\tvar alpha = 1;\n\tvar i;\n\n\tthis.valid = true;\n\n\tif (space === 'alpha') {\n\t\talpha = vals;\n\t} else if (vals.length) {\n\t\t// [10, 10, 10]\n\t\tvalues[space] = vals.slice(0, space.length);\n\t\talpha = vals[space.length];\n\t} else if (vals[space.charAt(0)] !== undefined) {\n\t\t// {r: 10, g: 10, b: 10}\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[space.charAt(i)];\n\t\t}\n\n\t\talpha = vals.a;\n\t} else if (vals[spaces[space][0]] !== undefined) {\n\t\t// {red: 10, green: 10, blue: 10}\n\t\tvar chans = spaces[space];\n\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[chans[i]];\n\t\t}\n\n\t\talpha = vals.alpha;\n\t}\n\n\tvalues.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\n\n\tif (space === 'alpha') {\n\t\treturn false;\n\t}\n\n\tvar capped;\n\n\t// cap values of the space prior converting all values\n\tfor (i = 0; i < space.length; i++) {\n\t\tcapped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n\t\tvalues[space][i] = Math.round(capped);\n\t}\n\n\t// convert to all the other color spaces\n\tfor (var sname in spaces) {\n\t\tif (sname !== space) {\n\t\t\tvalues[sname] = convert[space][sname](values[space]);\n\t\t}\n\t}\n\n\treturn true;\n};\n\nColor.prototype.setSpace = function (space, args) {\n\tvar vals = args[0];\n\n\tif (vals === undefined) {\n\t\t// color.rgb()\n\t\treturn this.getValues(space);\n\t}\n\n\t// color.rgb(10, 10, 10)\n\tif (typeof vals === 'number') {\n\t\tvals = Array.prototype.slice.call(args);\n\t}\n\n\tthis.setValues(space, vals);\n\treturn this;\n};\n\nColor.prototype.setChannel = function (space, index, val) {\n\tvar svalues = this.values[space];\n\tif (val === undefined) {\n\t\t// color.red()\n\t\treturn svalues[index];\n\t} else if (val === svalues[index]) {\n\t\t// color.red(color.red())\n\t\treturn this;\n\t}\n\n\t// color.red(100)\n\tsvalues[index] = val;\n\tthis.setValues(space, svalues);\n\n\treturn this;\n};\n\nif (typeof window !== 'undefined') {\n\twindow.Color = Color;\n}\n\nmodule.exports = Color;\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Line = function(context, config) {\n\t\tconfig.type = 'line';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\t// Default config for a category scale\n\tvar defaultConfig = {\n\t\tposition: 'bottom'\n\t};\n\n\tvar DatasetScale = Chart.Scale.extend({\n\t\t/**\n\t\t* Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n\t\t* else fall back to data.labels\n\t\t* @private\n\t\t*/\n\t\tgetLabels: function() {\n\t\t\tvar data = this.chart.data;\n\t\t\treturn this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n\t\t},\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\tme.minIndex = 0;\n\t\t\tme.maxIndex = labels.length - 1;\n\t\t\tvar findIndex;\n\n\t\t\tif (me.options.ticks.min !== undefined) {\n\t\t\t\t// user specified min value\n\t\t\t\tfindIndex = labels.indexOf(me.options.ticks.min);\n\t\t\t\tme.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n\t\t\t}\n\n\t\t\tif (me.options.ticks.max !== undefined) {\n\t\t\t\t// user specified max value\n\t\t\t\tfindIndex = labels.indexOf(me.options.ticks.max);\n\t\t\t\tme.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n\t\t\t}\n\n\t\t\tme.min = labels[me.minIndex];\n\t\t\tme.max = labels[me.maxIndex];\n\t\t},\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\t// If we are viewing some subset of labels, slice the original array\n\t\t\tme.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n\t\t},\n\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar data = me.chart.data;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tif (data.yLabels && !isHorizontal) {\n\t\t\t\treturn me.getRightValue(data.datasets[datasetIndex].data[index]);\n\t\t\t}\n\t\t\treturn me.ticks[index - me.minIndex];\n\t\t},\n\n\t\t// Used to get data value locations.  Value can either be an index or a numerical value\n\t\tgetPixelForValue: function(value, index) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\t// 1 is added because we need the length but we have the indexes\n\t\t\tvar offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1)), 1);\n\n\t\t\t// If value is a data object, then index is the index in the data array,\n\t\t\t// not the index of the scale. We need to change that.\n\t\t\tvar valueCategory;\n\t\t\tif (value !== undefined && value !== null) {\n\t\t\t\tvalueCategory = me.isHorizontal() ? value.x : value.y;\n\t\t\t}\n\t\t\tif (valueCategory !== undefined || (value !== undefined && isNaN(index))) {\n\t\t\t\tvar labels = me.getLabels();\n\t\t\t\tvalue = valueCategory || value;\n\t\t\t\tvar idx = labels.indexOf(value);\n\t\t\t\tindex = idx !== -1 ? idx : index;\n\t\t\t}\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar valueWidth = me.width / offsetAmt;\n\t\t\t\tvar widthOffset = (valueWidth * (index - me.minIndex));\n\n\t\t\t\tif (offset) {\n\t\t\t\t\twidthOffset += (valueWidth / 2);\n\t\t\t\t}\n\n\t\t\t\treturn me.left + Math.round(widthOffset);\n\t\t\t}\n\t\t\tvar valueHeight = me.height / offsetAmt;\n\t\t\tvar heightOffset = (valueHeight * (index - me.minIndex));\n\n\t\t\tif (offset) {\n\t\t\t\theightOffset += (valueHeight / 2);\n\t\t\t}\n\n\t\t\treturn me.top + Math.round(heightOffset);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\tvar value;\n\t\t\tvar offsetAmt = Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\tvar horz = me.isHorizontal();\n\t\t\tvar valueDimension = (horz ? me.width : me.height) / offsetAmt;\n\n\t\t\tpixel -= horz ? me.left : me.top;\n\n\t\t\tif (offset) {\n\t\t\t\tpixel -= (valueDimension / 2);\n\t\t\t}\n\n\t\t\tif (pixel <= 0) {\n\t\t\t\tvalue = 0;\n\t\t\t} else {\n\t\t\t\tvalue = Math.round(pixel / valueDimension);\n\t\t\t}\n\n\t\t\treturn value + me.minIndex;\n\t\t},\n\t\tgetBasePixel: function() {\n\t\t\treturn this.bottom;\n\t\t}\n\t});\n\n\tChart.scaleService.registerScaleType('category', DatasetScale, defaultConfig);\n\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar helpers = require('../helpers/index');\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function(Chart) {\n\n\tvar globalDefaults = defaults.global;\n\n\tvar defaultConfig = {\n\t\tdisplay: true,\n\n\t\t// Boolean - Whether to animate scaling the chart from the centre\n\t\tanimate: true,\n\t\tposition: 'chartArea',\n\n\t\tangleLines: {\n\t\t\tdisplay: true,\n\t\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\t\tlineWidth: 1\n\t\t},\n\n\t\tgridLines: {\n\t\t\tcircular: false\n\t\t},\n\n\t\t// label settings\n\t\tticks: {\n\t\t\t// Boolean - Show a backdrop to the scale label\n\t\t\tshowLabelBackdrop: true,\n\n\t\t\t// String - The colour of the label backdrop\n\t\t\tbackdropColor: 'rgba(255,255,255,0.75)',\n\n\t\t\t// Number - The backdrop padding above & below the label in pixels\n\t\t\tbackdropPaddingY: 2,\n\n\t\t\t// Number - The backdrop padding to the side of the label in pixels\n\t\t\tbackdropPaddingX: 2,\n\n\t\t\tcallback: Ticks.formatters.linear\n\t\t},\n\n\t\tpointLabels: {\n\t\t\t// Boolean - if true, show point labels\n\t\t\tdisplay: true,\n\n\t\t\t// Number - Point label font size in pixels\n\t\t\tfontSize: 10,\n\n\t\t\t// Function - Used to convert point labels\n\t\t\tcallback: function(label) {\n\t\t\t\treturn label;\n\t\t\t}\n\t\t}\n\t};\n\n\tfunction getValueCount(scale) {\n\t\tvar opts = scale.options;\n\t\treturn opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n\t}\n\n\tfunction getPointLabelFontOptions(scale) {\n\t\tvar pointLabelOptions = scale.options.pointLabels;\n\t\tvar fontSize = helpers.valueOrDefault(pointLabelOptions.fontSize, globalDefaults.defaultFontSize);\n\t\tvar fontStyle = helpers.valueOrDefault(pointLabelOptions.fontStyle, globalDefaults.defaultFontStyle);\n\t\tvar fontFamily = helpers.valueOrDefault(pointLabelOptions.fontFamily, globalDefaults.defaultFontFamily);\n\t\tvar font = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\treturn {\n\t\t\tsize: fontSize,\n\t\t\tstyle: fontStyle,\n\t\t\tfamily: fontFamily,\n\t\t\tfont: font\n\t\t};\n\t}\n\n\tfunction measureLabelSize(ctx, fontSize, label) {\n\t\tif (helpers.isArray(label)) {\n\t\t\treturn {\n\t\t\t\tw: helpers.longestText(ctx, ctx.font, label),\n\t\t\t\th: (label.length * fontSize) + ((label.length - 1) * 1.5 * fontSize)\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tw: ctx.measureText(label).width,\n\t\t\th: fontSize\n\t\t};\n\t}\n\n\tfunction determineLimits(angle, pos, size, min, max) {\n\t\tif (angle === min || angle === max) {\n\t\t\treturn {\n\t\t\t\tstart: pos - (size / 2),\n\t\t\t\tend: pos + (size / 2)\n\t\t\t};\n\t\t} else if (angle < min || angle > max) {\n\t\t\treturn {\n\t\t\t\tstart: pos - size - 5,\n\t\t\t\tend: pos\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tstart: pos,\n\t\t\tend: pos + size + 5\n\t\t};\n\t}\n\n\t/**\n\t * Helper function to fit a radial linear scale with point labels\n\t */\n\tfunction fitWithPointLabels(scale) {\n\t\t/*\n\t\t * Right, this is really confusing and there is a lot of maths going on here\n\t\t * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n\t\t *\n\t\t * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n\t\t *\n\t\t * Solution:\n\t\t *\n\t\t * We assume the radius of the polygon is half the size of the canvas at first\n\t\t * at each index we check if the text overlaps.\n\t\t *\n\t\t * Where it does, we store that angle and that index.\n\t\t *\n\t\t * After finding the largest index and angle we calculate how much we need to remove\n\t\t * from the shape radius to move the point inwards by that x.\n\t\t *\n\t\t * We average the left and right distances to get the maximum shape radius that can fit in the box\n\t\t * along with labels.\n\t\t *\n\t\t * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n\t\t * on each side, removing that from the size, halving it and adding the left x protrusion width.\n\t\t *\n\t\t * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n\t\t * and position it in the most space efficient manner\n\t\t *\n\t\t * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\t\t */\n\n\t\tvar plFont = getPointLabelFontOptions(scale);\n\n\t\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n\t\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n\t\tvar furthestLimits = {\n\t\t\tr: scale.width,\n\t\t\tl: 0,\n\t\t\tt: scale.height,\n\t\t\tb: 0\n\t\t};\n\t\tvar furthestAngles = {};\n\t\tvar i, textSize, pointPosition;\n\n\t\tscale.ctx.font = plFont.font;\n\t\tscale._pointLabelSizes = [];\n\n\t\tvar valueCount = getValueCount(scale);\n\t\tfor (i = 0; i < valueCount; i++) {\n\t\t\tpointPosition = scale.getPointPosition(i, largestPossibleRadius);\n\t\t\ttextSize = measureLabelSize(scale.ctx, plFont.size, scale.pointLabels[i] || '');\n\t\t\tscale._pointLabelSizes[i] = textSize;\n\n\t\t\t// Add quarter circle to make degree 0 mean top of circle\n\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\tvar angle = helpers.toDegrees(angleRadians) % 360;\n\t\t\tvar hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n\t\t\tvar vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n\t\t\tif (hLimits.start < furthestLimits.l) {\n\t\t\t\tfurthestLimits.l = hLimits.start;\n\t\t\t\tfurthestAngles.l = angleRadians;\n\t\t\t}\n\n\t\t\tif (hLimits.end > furthestLimits.r) {\n\t\t\t\tfurthestLimits.r = hLimits.end;\n\t\t\t\tfurthestAngles.r = angleRadians;\n\t\t\t}\n\n\t\t\tif (vLimits.start < furthestLimits.t) {\n\t\t\t\tfurthestLimits.t = vLimits.start;\n\t\t\t\tfurthestAngles.t = angleRadians;\n\t\t\t}\n\n\t\t\tif (vLimits.end > furthestLimits.b) {\n\t\t\t\tfurthestLimits.b = vLimits.end;\n\t\t\t\tfurthestAngles.b = angleRadians;\n\t\t\t}\n\t\t}\n\n\t\tscale.setReductions(largestPossibleRadius, furthestLimits, furthestAngles);\n\t}\n\n\t/**\n\t * Helper function to fit a radial linear scale with no point labels\n\t */\n\tfunction fit(scale) {\n\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n\t\tscale.drawingArea = Math.round(largestPossibleRadius);\n\t\tscale.setCenterPoint(0, 0, 0, 0);\n\t}\n\n\tfunction getTextAlignForAngle(angle) {\n\t\tif (angle === 0 || angle === 180) {\n\t\t\treturn 'center';\n\t\t} else if (angle < 180) {\n\t\t\treturn 'left';\n\t\t}\n\n\t\treturn 'right';\n\t}\n\n\tfunction fillText(ctx, text, position, fontSize) {\n\t\tif (helpers.isArray(text)) {\n\t\t\tvar y = position.y;\n\t\t\tvar spacing = 1.5 * fontSize;\n\n\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\tctx.fillText(text[i], position.x, y);\n\t\t\t\ty += spacing;\n\t\t\t}\n\t\t} else {\n\t\t\tctx.fillText(text, position.x, position.y);\n\t\t}\n\t}\n\n\tfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n\t\tif (angle === 90 || angle === 270) {\n\t\t\tposition.y -= (textSize.h / 2);\n\t\t} else if (angle > 270 || angle < 90) {\n\t\t\tposition.y -= textSize.h;\n\t\t}\n\t}\n\n\tfunction drawPointLabels(scale) {\n\t\tvar ctx = scale.ctx;\n\t\tvar opts = scale.options;\n\t\tvar angleLineOpts = opts.angleLines;\n\t\tvar pointLabelOpts = opts.pointLabels;\n\n\t\tctx.lineWidth = angleLineOpts.lineWidth;\n\t\tctx.strokeStyle = angleLineOpts.color;\n\n\t\tvar outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n\n\t\t// Point Label Font\n\t\tvar plFont = getPointLabelFontOptions(scale);\n\n\t\tctx.textBaseline = 'top';\n\n\t\tfor (var i = getValueCount(scale) - 1; i >= 0; i--) {\n\t\t\tif (angleLineOpts.display) {\n\t\t\t\tvar outerPosition = scale.getPointPosition(i, outerDistance);\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(scale.xCenter, scale.yCenter);\n\t\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\n\t\t\t\tctx.stroke();\n\t\t\t\tctx.closePath();\n\t\t\t}\n\n\t\t\tif (pointLabelOpts.display) {\n\t\t\t\t// Extra 3px out for some label spacing\n\t\t\t\tvar pointLabelPosition = scale.getPointPosition(i, outerDistance + 5);\n\n\t\t\t\t// Keep this in loop since we may support array properties here\n\t\t\t\tvar pointLabelFontColor = helpers.valueAtIndexOrDefault(pointLabelOpts.fontColor, i, globalDefaults.defaultFontColor);\n\t\t\t\tctx.font = plFont.font;\n\t\t\t\tctx.fillStyle = pointLabelFontColor;\n\n\t\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\t\tvar angle = helpers.toDegrees(angleRadians);\n\t\t\t\tctx.textAlign = getTextAlignForAngle(angle);\n\t\t\t\tadjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n\t\t\t\tfillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.size);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction drawRadiusLine(scale, gridLineOpts, radius, index) {\n\t\tvar ctx = scale.ctx;\n\t\tctx.strokeStyle = helpers.valueAtIndexOrDefault(gridLineOpts.color, index - 1);\n\t\tctx.lineWidth = helpers.valueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);\n\n\t\tif (scale.options.gridLines.circular) {\n\t\t\t// Draw circular arcs between the points\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n\t\t\tctx.closePath();\n\t\t\tctx.stroke();\n\t\t} else {\n\t\t\t// Draw straight lines connecting each index\n\t\t\tvar valueCount = getValueCount(scale);\n\n\t\t\tif (valueCount === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tctx.beginPath();\n\t\t\tvar pointPosition = scale.getPointPosition(0, radius);\n\t\t\tctx.moveTo(pointPosition.x, pointPosition.y);\n\n\t\t\tfor (var i = 1; i < valueCount; i++) {\n\t\t\t\tpointPosition = scale.getPointPosition(i, radius);\n\t\t\t\tctx.lineTo(pointPosition.x, pointPosition.y);\n\t\t\t}\n\n\t\t\tctx.closePath();\n\t\t\tctx.stroke();\n\t\t}\n\t}\n\n\tfunction numberOrZero(param) {\n\t\treturn helpers.isNumber(param) ? param : 0;\n\t}\n\n\tvar LinearRadialScale = Chart.LinearScaleBase.extend({\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.height = me.maxHeight;\n\t\t\tme.xCenter = Math.round(me.width / 2);\n\t\t\tme.yCenter = Math.round(me.height / 2);\n\n\t\t\tvar minSize = helpers.min([me.height, me.width]);\n\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\tme.drawingArea = opts.display ? (minSize / 2) - (tickFontSize / 2 + tickOpts.backdropPaddingY) : (minSize / 2);\n\t\t},\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar min = Number.POSITIVE_INFINITY;\n\t\t\tvar max = Number.NEGATIVE_INFINITY;\n\n\t\t\thelpers.each(chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\n\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmin = Math.min(value, min);\n\t\t\t\t\t\tmax = Math.max(value, max);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tme.min = (min === Number.POSITIVE_INFINITY ? 0 : min);\n\t\t\tme.max = (max === Number.NEGATIVE_INFINITY ? 0 : max);\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tme.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar tickOpts = this.options.ticks;\n\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\treturn Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\n\t\t\tChart.LinearScaleBase.prototype.convertTicksToLabels.call(me);\n\n\t\t\t// Point labels\n\t\t\tme.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\tfit: function() {\n\t\t\tif (this.options.pointLabels.display) {\n\t\t\t\tfitWithPointLabels(this);\n\t\t\t} else {\n\t\t\t\tfit(this);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Set radius reductions and determine new radius and center point\n\t\t * @private\n\t\t */\n\t\tsetReductions: function(largestPossibleRadius, furthestLimits, furthestAngles) {\n\t\t\tvar me = this;\n\t\t\tvar radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n\t\t\tvar radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n\t\t\tvar radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n\t\t\tvar radiusReductionBottom = -Math.max(furthestLimits.b - me.height, 0) / Math.cos(furthestAngles.b);\n\n\t\t\tradiusReductionLeft = numberOrZero(radiusReductionLeft);\n\t\t\tradiusReductionRight = numberOrZero(radiusReductionRight);\n\t\t\tradiusReductionTop = numberOrZero(radiusReductionTop);\n\t\t\tradiusReductionBottom = numberOrZero(radiusReductionBottom);\n\n\t\t\tme.drawingArea = Math.min(\n\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n\t\t\tme.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n\t\t},\n\t\tsetCenterPoint: function(leftMovement, rightMovement, topMovement, bottomMovement) {\n\t\t\tvar me = this;\n\t\t\tvar maxRight = me.width - rightMovement - me.drawingArea;\n\t\t\tvar maxLeft = leftMovement + me.drawingArea;\n\t\t\tvar maxTop = topMovement + me.drawingArea;\n\t\t\tvar maxBottom = me.height - bottomMovement - me.drawingArea;\n\n\t\t\tme.xCenter = Math.round(((maxLeft + maxRight) / 2) + me.left);\n\t\t\tme.yCenter = Math.round(((maxTop + maxBottom) / 2) + me.top);\n\t\t},\n\n\t\tgetIndexAngle: function(index) {\n\t\t\tvar angleMultiplier = (Math.PI * 2) / getValueCount(this);\n\t\t\tvar startAngle = this.chart.options && this.chart.options.startAngle ?\n\t\t\t\tthis.chart.options.startAngle :\n\t\t\t\t0;\n\n\t\t\tvar startAngleRadians = startAngle * Math.PI * 2 / 360;\n\n\t\t\t// Start from the top instead of right, so remove a quarter of the circle\n\t\t\treturn index * angleMultiplier + startAngleRadians;\n\t\t},\n\t\tgetDistanceFromCenterForValue: function(value) {\n\t\t\tvar me = this;\n\n\t\t\tif (value === null) {\n\t\t\t\treturn 0; // null always in center\n\t\t\t}\n\n\t\t\t// Take into account half font size + the yPadding of the top value\n\t\t\tvar scalingFactor = me.drawingArea / (me.max - me.min);\n\t\t\tif (me.options.ticks.reverse) {\n\t\t\t\treturn (me.max - value) * scalingFactor;\n\t\t\t}\n\t\t\treturn (value - me.min) * scalingFactor;\n\t\t},\n\t\tgetPointPosition: function(index, distanceFromCenter) {\n\t\t\tvar me = this;\n\t\t\tvar thisAngle = me.getIndexAngle(index) - (Math.PI / 2);\n\t\t\treturn {\n\t\t\t\tx: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,\n\t\t\t\ty: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter\n\t\t\t};\n\t\t},\n\t\tgetPointPositionForValue: function(index, value) {\n\t\t\treturn this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n\t\t},\n\n\t\tgetBasePosition: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\n\t\t\treturn me.getPointPositionForValue(0,\n\t\t\t\tme.beginAtZero ? 0 :\n\t\t\t\tmin < 0 && max < 0 ? max :\n\t\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t\t0);\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar gridLineOpts = opts.gridLines;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t\t\tif (opts.display) {\n\t\t\t\tvar ctx = me.ctx;\n\t\t\t\tvar startAngle = this.getIndexAngle(0);\n\n\t\t\t\t// Tick Font\n\t\t\t\tvar tickFontSize = valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\t\tvar tickFontStyle = valueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\t\tvar tickFontFamily = valueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n\n\t\t\t\thelpers.each(me.ticks, function(label, index) {\n\t\t\t\t\t// Don't draw a centre value (if it is minimum)\n\t\t\t\t\tif (index > 0 || tickOpts.reverse) {\n\t\t\t\t\t\tvar yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);\n\n\t\t\t\t\t\t// Draw circular lines around the scale\n\t\t\t\t\t\tif (gridLineOpts.display && index !== 0) {\n\t\t\t\t\t\t\tdrawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (tickOpts.display) {\n\t\t\t\t\t\t\tvar tickFontColor = valueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);\n\t\t\t\t\t\t\tctx.font = tickLabelFont;\n\n\t\t\t\t\t\t\tctx.save();\n\t\t\t\t\t\t\tctx.translate(me.xCenter, me.yCenter);\n\t\t\t\t\t\t\tctx.rotate(startAngle);\n\n\t\t\t\t\t\t\tif (tickOpts.showLabelBackdrop) {\n\t\t\t\t\t\t\t\tvar labelWidth = ctx.measureText(label).width;\n\t\t\t\t\t\t\t\tctx.fillStyle = tickOpts.backdropColor;\n\t\t\t\t\t\t\t\tctx.fillRect(\n\t\t\t\t\t\t\t\t\t-labelWidth / 2 - tickOpts.backdropPaddingX,\n\t\t\t\t\t\t\t\t\t-yCenterOffset - tickFontSize / 2 - tickOpts.backdropPaddingY,\n\t\t\t\t\t\t\t\t\tlabelWidth + tickOpts.backdropPaddingX * 2,\n\t\t\t\t\t\t\t\t\ttickFontSize + tickOpts.backdropPaddingY * 2\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\t\t\t\tctx.fillStyle = tickFontColor;\n\t\t\t\t\t\t\tctx.fillText(label, 0, -yCenterOffset);\n\t\t\t\t\t\t\tctx.restore();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (opts.angleLines.display || opts.pointLabels.display) {\n\t\t\t\t\tdrawPointLabels(me);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('radialLinear', LinearRadialScale, defaultConfig);\n\n};\n"],"sourceRoot":""}